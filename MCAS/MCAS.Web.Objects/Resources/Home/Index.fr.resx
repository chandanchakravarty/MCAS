<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ModelName" xml:space="preserve">
    <value>[[ModelName]]</value>
  </data>
  <data name="BackToListAction" xml:space="preserve">
    <value>Back to List</value>
  </data>
  <data name="Dashboard" xml:space="preserve">
    <value>tableau de bord</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Accueil</value>
  </data>
  <data name="TotalDiary" xml:space="preserve">
    <value>total Diary</value>
  </data>
  <data name="ViewMore" xml:space="preserve">
    <value>Voir plus...</value>
  </data>
  <data name="CompletedDiary" xml:space="preserve">
    <value>Terminé Diary</value>
  </data>
  <data name="TotalClaims" xml:space="preserve">
    <value>Nombre de revendications</value>
  </data>
  <data name="NewDiary" xml:space="preserve">
    <value>nouveau Journal</value>
  </data>
  <data name="Action" xml:space="preserve">
    <value>action</value>
  </data>
  <data name="ActionDue" xml:space="preserve">
    <value>En raison action</value>
  </data>
  <data name="AlertsDescription" xml:space="preserve">
    <value>alertes description</value>
  </data>
  <data name="AlertsRecordTable" xml:space="preserve">
    <value>Alertes Tableau d'enregistrement</value>
  </data>
  <data name="ApprovalDate" xml:space="preserve">
    <value>Date d'approbation</value>
  </data>
  <data name="Approved" xml:space="preserve">
    <value>Approuvé ?</value>
  </data>
  <data name="Approver" xml:space="preserve">
    <value>approbateur</value>
  </data>
  <data name="AssignedTo" xml:space="preserve">
    <value>Assigné à</value>
  </data>
  <data name="ClaimantName" xml:space="preserve">
    <value>Nom du demandeur</value>
  </data>
  <data name="ClaimantName_" xml:space="preserve">
    <value>Nom demandeur</value>
  </data>
  <data name="ClaimNo" xml:space="preserve">
    <value>Aucune revendication</value>
  </data>
  <data name="ClaimType" xml:space="preserve">
    <value>type de revendication</value>
  </data>
  <data name="ClosedDate" xml:space="preserve">
    <value>fermé date</value>
  </data>
  <data name="CreatedBy" xml:space="preserve">
    <value>Créé par</value>
  </data>
  <data name="EscalatedTo" xml:space="preserve">
    <value>Pour escalade</value>
  </data>
  <data name="EstCompletionDate" xml:space="preserve">
    <value>Est Date d'achèvement</value>
  </data>
  <data name="IPNo" xml:space="preserve">
    <value>Aucune IP</value>
  </data>
  <data name="MandateRecordTable" xml:space="preserve">
    <value>Mandat Tableau d'enregistrement</value>
  </data>
  <data name="MandateRequestDate" xml:space="preserve">
    <value>Mandat Date de la demande</value>
  </data>
  <data name="ModifiedDate" xml:space="preserve">
    <value>date de modification</value>
  </data>
  <data name="PaymentRecordTable" xml:space="preserve">
    <value>Tableau d'enregistrement de paiement</value>
  </data>
  <data name="PaymentRequestDate" xml:space="preserve">
    <value>Date de la demande de paiement</value>
  </data>
  <data name="PromptDetails" xml:space="preserve">
    <value>Détails rapides</value>
  </data>
  <data name="Reassign" xml:space="preserve">
    <value>réaffecter</value>
  </data>
  <data name="ReassignedTo" xml:space="preserve">
    <value>réaffecté à</value>
  </data>
  <data name="Requester" xml:space="preserve">
    <value>demandeur</value>
  </data>
  <data name="SNo" xml:space="preserve">
    <value>S.No</value>
  </data>
  <data name="TaskRecordTable" xml:space="preserve">
    <value>Tâche Tableau d'enregistrement</value>
  </data>
  <data name="TotalMandateAmountRequested" xml:space="preserve">
    <value>Mandat Montant total demandé</value>
  </data>
  <data name="TotalPaymentAmountRequested" xml:space="preserve">
    <value>Paiement Montant total demandé</value>
  </data>
  <data name="AlertReassignment" xml:space="preserve">
    <value>Réaffectation alerte</value>
  </data>
</root>