<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccidentClaimId" xml:space="preserve">
    <value>Accident ClaimId</value>
  </data>
  <data name="ActualAmt" xml:space="preserve">
    <value>Actual Amt</value>
  </data>
  <data name="AdminSupport" xml:space="preserve">
    <value>Admin Support</value>
  </data>
  <data name="BusinessArea" xml:space="preserve">
    <value>Business Area</value>
  </data>
  <data name="CaseStatus" xml:space="preserve">
    <value>Case Status</value>
  </data>
  <data name="CaseTypeL1" xml:space="preserve">
    <value>Case Type L1</value>
  </data>
  <data name="CaseTypeL2" xml:space="preserve">
    <value>Case Type L2</value>
  </data>
  <data name="CDGEStatus" xml:space="preserve">
    <value>CDGE Status</value>
  </data>
  <data name="ChequeDetails" xml:space="preserve">
    <value>Cheque Details</value>
  </data>
  <data name="ClaimAmt" xml:space="preserve">
    <value>Claim Amt</value>
  </data>
  <data name="ClaimantStatus" xml:space="preserve">
    <value>Claimant Status</value>
  </data>
  <data name="ClaimDate" xml:space="preserve">
    <value>Claim Date</value>
  </data>
  <data name="ClaimID" xml:space="preserve">
    <value>Claim ID</value>
  </data>
  <data name="ClaimStatus" xml:space="preserve">
    <value>Claim Status</value>
  </data>
  <data name="ClaimType" xml:space="preserve">
    <value>Claim Type</value>
  </data>
  <data name="Collisiontype" xml:space="preserve">
    <value>Collision Type</value>
  </data>
  <data name="ConfirmAmt" xml:space="preserve">
    <value>Confirm Amt</value>
  </data>
  <data name="ConfirmDate" xml:space="preserve">
    <value>Confirm Date</value>
  </data>
  <data name="ContractorInvoiceNo" xml:space="preserve">
    <value>Contractor Invoice No</value>
  </data>
  <data name="CreatedBy" xml:space="preserve">
    <value>Created By</value>
  </data>
  <data name="CreatedDate" xml:space="preserve">
    <value>Created Date</value>
  </data>
  <data name="CustomerCode" xml:space="preserve">
    <value>Customer Code</value>
  </data>
  <data name="DateOfSurvey" xml:space="preserve">
    <value>Date Of Survey</value>
  </data>
  <data name="DateToGIADRM" xml:space="preserve">
    <value>Date To GIADRM</value>
  </data>
  <data name="DriversLiability" xml:space="preserve">
    <value>Drivers Liability</value>
  </data>
  <data name="ExcessAmt" xml:space="preserve">
    <value>Excess Amt</value>
  </data>
  <data name="FileArchievedRef" xml:space="preserve">
    <value>File Archieved Ref</value>
  </data>
  <data name="FileReceivedDate" xml:space="preserve">
    <value>File Received Date</value>
  </data>
  <data name="FinalSettleDate" xml:space="preserve">
    <value>Final Settle Date</value>
  </data>
  <data name="FollowUpDate" xml:space="preserve">
    <value>Follow Up Date</value>
  </data>
  <data name="GST" xml:space="preserve">
    <value>GST</value>
  </data>
  <data name="InvoiceAmt" xml:space="preserve">
    <value>Invoice Amt</value>
  </data>
  <data name="InvoiceDate" xml:space="preserve">
    <value>Invoice Date</value>
  </data>
  <data name="InvoiceNo" xml:space="preserve">
    <value>Invoice No</value>
  </data>
  <data name="JobNo" xml:space="preserve">
    <value>Job No</value>
  </data>
  <data name="LawerRef" xml:space="preserve">
    <value>Lawer Ref</value>
  </data>
  <data name="LawyerDate" xml:space="preserve">
    <value> Date To Lawyer</value>
  </data>
  <data name="LawyerGIADRM" xml:space="preserve">
    <value>Lawyer GIA/DRM</value>
  </data>
  <data name="NatureOfAcc" xml:space="preserve">
    <value>Nature Of Acc</value>
  </data>
  <data name="NoOfDaysForRepairs" xml:space="preserve">
    <value>No Of Days For Repairs</value>
  </data>
  <data name="OfficeInCharge" xml:space="preserve">
    <value>Office-In-Charge(OIC)</value>
  </data>
  <data name="OurSurveyorApp" xml:space="preserve">
    <value>Surveyor </value>
  </data>
  <data name="OwnLawyer" xml:space="preserve">
    <value>Own Lawyer</value>
  </data>
  <data name="PaymentDetails" xml:space="preserve">
    <value>Payment Details</value>
  </data>
  <data name="RecordCancellationDate" xml:space="preserve">
    <value>Record Cancellation Date</value>
  </data>
  <data name="RecordCancellationReason" xml:space="preserve">
    <value>Record Cancellation Reason</value>
  </data>
  <data name="RecordReopenedReason" xml:space="preserve">
    <value>Record Reopened Reason</value>
  </data>
  <data name="ReopenedDate" xml:space="preserve">
    <value>Reopened Date</value>
  </data>
  <data name="ResultMessage" xml:space="preserve">
    <value>Result Message</value>
  </data>
  <data name="SettledAmt" xml:space="preserve">
    <value>Settled Amt</value>
  </data>
  <data name="SettledBy" xml:space="preserve">
    <value>Settled By</value>
  </data>
  <data name="Sharellocation" xml:space="preserve">
    <value>Share Allocation</value>
  </data>
  <data name="TimeBarDate" xml:space="preserve">
    <value>Time Bar Date</value>
  </data>
  <data name="TPInsurer" xml:space="preserve">
    <value>TP Insurer</value>
  </data>
  <data name="TPRef" xml:space="preserve">
    <value>TP Ref</value>
  </data>
  <data name="TPVehicleNo" xml:space="preserve">
    <value>TP Vehicle No</value>
  </data>
  <data name="WriteIssued" xml:space="preserve">
    <value>Write Issued</value>
  </data>
  <data name="WriteNo" xml:space="preserve">
    <value>Write No</value>
  </data>
  <data name="WsActRcvr" xml:space="preserve">
    <value>WS Act Rcvr%</value>
  </data>
  <data name="WsoCNAmt" xml:space="preserve">
    <value>WSO CN Amt</value>
  </data>
  <data name="WsoCnNo" xml:space="preserve">
    <value>WSO CN No</value>
  </data>
  <data name="WsoInvoiceAmt" xml:space="preserve">
    <value>WSO Invoice Amt</value>
  </data>
  <data name="WSONo" xml:space="preserve">
    <value>WSO No</value>
  </data>
</root>