<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Adjustments" xml:space="preserve">
    <value>Adjustment</value>
  </data>
  <data name="CDGE1_3" xml:space="preserve">
    <value>CDGE (1/3)</value>
  </data>
  <data name="CDGECst" xml:space="preserve">
    <value>CDGE Cost</value>
  </data>
  <data name="ClaimableRecpt" xml:space="preserve">
    <value>Claimable Receipt</value>
  </data>
  <data name="ClaimExpensesClaimant" xml:space="preserve">
    <value>Claim Expenses - Claimant</value>
  </data>
  <data name="ClaimExpensesIncidentals" xml:space="preserve">
    <value>Claim Expenses - Incidentals</value>
  </data>
  <data name="ClaimReceipts" xml:space="preserve">
    <value>Claim Receipts</value>
  </data>
  <data name="ClaimRecovery" xml:space="preserve">
    <value>Claim Recovery</value>
  </data>
  <data name="Compensation" xml:space="preserve">
    <value>Compensation</value>
  </data>
  <data name="Contractor" xml:space="preserve">
    <value>Contractor</value>
  </data>
  <data name="CostOfRepairs" xml:space="preserve">
    <value>Cost Of Repairs</value>
  </data>
  <data name="CrDrAmt" xml:space="preserve">
    <value>Credit/Debit Note Amount</value>
  </data>
  <data name="CrDrNumber" xml:space="preserve">
    <value>Credit/Debit Note No</value>
  </data>
  <data name="CrRental" xml:space="preserve">
    <value>Car Rental</value>
  </data>
  <data name="CrtsyCr" xml:space="preserve">
    <value>Courtesy Car</value>
  </data>
  <data name="GnrlRemarks" xml:space="preserve">
    <value>General Remarks</value>
  </data>
  <data name="Insurer" xml:space="preserve">
    <value>Insurer</value>
  </data>
  <data name="InvoiceAmt" xml:space="preserve">
    <value>Invoice Amount</value>
  </data>
  <data name="LCdgeAdmFee" xml:space="preserve">
    <value>Less CDGE Admin Fee</value>
  </data>
  <data name="LegalFee" xml:space="preserve">
    <value>Legal Fee</value>
  </data>
  <data name="LOI" xml:space="preserve">
    <value>Loss of Income</value>
  </data>
  <data name="LOR" xml:space="preserve">
    <value>Loss of Rental</value>
  </data>
  <data name="LOU" xml:space="preserve">
    <value>Loss of Use</value>
  </data>
  <data name="LTAFee" xml:space="preserve">
    <value>LTA Fee</value>
  </data>
  <data name="MdclExpses" xml:space="preserve">
    <value>Medical Expenses</value>
  </data>
  <data name="NCstRepairs" xml:space="preserve">
    <value>Net Cost Of Repairs</value>
  </data>
  <data name="NtCDGEClmExpses" xml:space="preserve">
    <value>Net CDGE Claim Expenses</value>
  </data>
  <data name="NtclientRcpt" xml:space="preserve">
    <value>Net Client Receipt</value>
  </data>
  <data name="NtClientRecvry" xml:space="preserve">
    <value>Net Client Recovery</value>
  </data>
  <data name="NtClmRecovery" xml:space="preserve">
    <value>Net Claim Recovery</value>
  </data>
  <data name="Others1" xml:space="preserve">
    <value>Others (1)</value>
  </data>
  <data name="Others2" xml:space="preserve">
    <value>Others (2)</value>
  </data>
  <data name="OverClmRecovery" xml:space="preserve">
    <value>Over/Under Claim Recovery</value>
  </data>
  <data name="Ovr_UndrClientRcvryScora" xml:space="preserve">
    <value>Over/(Under) Client Recovery</value>
  </data>
  <data name="OwnerHirer" xml:space="preserve">
    <value>Owner/Hirer</value>
  </data>
  <data name="PrftShrTxSora" xml:space="preserve">
    <value>Profit Sharing For Taxi</value>
  </data>
  <data name="PrftShrTxTlCases" xml:space="preserve">
    <value>Profit Sharing for Taxi</value>
  </data>
  <data name="ProfitSharingforTLCases" xml:space="preserve">
    <value>Profit Sharing for TL Cases</value>
  </data>
  <data name="SOCRA" xml:space="preserve">
    <value>Statement of Recovery Account (SOCRA)</value>
  </data>
  <data name="SORA" xml:space="preserve">
    <value>Statement of Recovery Account (SORA)</value>
  </data>
  <data name="SORASCORAClaim" xml:space="preserve">
    <value>SORA/SCORA Claim</value>
  </data>
  <data name="Sora_Socra" xml:space="preserve">
    <value>SORA/SCORA</value>
  </data>
  <data name="Sora_SocraSrlNo" xml:space="preserve">
    <value>SORA/SOCRA Serial No</value>
  </data>
  <data name="SreNtClmRecovery" xml:space="preserve">
    <value>Share Net Clm Recovery</value>
  </data>
  <data name="AddNewRecovery" xml:space="preserve">
    <value>Add New Recovery</value>
  </data>
  <data name="SurveyFee" xml:space="preserve">
    <value>Survey Fee</value>
  </data>
  <data name="Taxi2_3" xml:space="preserve">
    <value>Taxi (2/3)</value>
  </data>
  <data name="TClmExpensesClaimant" xml:space="preserve">
    <value>T.Clm Expenses - Claimant</value>
  </data>
  <data name="TClmExpIncidental" xml:space="preserve">
    <value>T. Clm Expenses - Incidental</value>
  </data>
  <data name="TCRecpt" xml:space="preserve">
    <value>Total Claim Receipts</value>
  </data>
  <data name="ThirdParty" xml:space="preserve">
    <value>Third Party</value>
  </data>
  <data name="TPGIAFee" xml:space="preserve">
    <value>TP/GIA Fee</value>
  </data>
  <data name="TPRecipt" xml:space="preserve">
    <value>TP Receipt</value>
  </data>
  <data name="TtlClmExpnse" xml:space="preserve">
    <value>Total Claim Expenses</value>
  </data>
  <data name="NewClaimRecovery" xml:space="preserve">
    <value>New Claim Recovery</value>
  </data>
  <data name="BreakdownofConfirmAmt" xml:space="preserve">
    <value>Breakdown of Confirm Amount</value>
  </data>
</root>