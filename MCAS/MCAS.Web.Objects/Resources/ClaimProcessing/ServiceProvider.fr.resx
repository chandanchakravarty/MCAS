<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddInsurer" xml:space="preserve">
    <value>Ajouter assureur</value>
  </data>
  <data name="Address1" xml:space="preserve">
    <value>Address1 du demandeur</value>
  </data>
  <data name="Address2" xml:space="preserve">
    <value>Address2 du demandeur</value>
  </data>
  <data name="Address3" xml:space="preserve">
    <value>Address3</value>
  </data>
  <data name="AppointedDate" xml:space="preserve">
    <value>date de la nomination</value>
  </data>
  <data name="BackToListAction" xml:space="preserve">
    <value>Retour à la liste</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>ville</value>
  </data>
  <data name="ClaimAdjustments" xml:space="preserve">
    <value>Ajustements de réclamation</value>
  </data>
  <data name="ClaimantNameId" xml:space="preserve">
    <value>Nom demandeur</value>
  </data>
  <data name="ClaimEnquiry" xml:space="preserve">
    <value>demande revendication</value>
  </data>
  <data name="ClaimPayment" xml:space="preserve">
    <value>réclamer le paiement</value>
  </data>
  <data name="ClaimPaymentProcessing" xml:space="preserve">
    <value>Revendication Payment Processing</value>
  </data>
  <data name="ClaimRecoveryProcessing" xml:space="preserve">
    <value>Traitement revendication Recovery</value>
  </data>
  <data name="ClaimsRecovery" xml:space="preserve">
    <value>Récupération revendications</value>
  </data>
  <data name="ClaimsRegistration" xml:space="preserve">
    <value>revendications inscription</value>
  </data>
  <data name="ClaimTypeId" xml:space="preserve">
    <value>type de revendication</value>
  </data>
  <data name="CompanyNameId" xml:space="preserve">
    <value>Nom de l'entreprise</value>
  </data>
  <data name="ContactPersonName" xml:space="preserve">
    <value>Nom du 1er Personne-ressource</value>
  </data>
  <data name="ContactPersonName2nd" xml:space="preserve">
    <value>Nom de 2ème Personne-ressource</value>
  </data>
  <data name="CountryId" xml:space="preserve">
    <value>pays</value>
  </data>
  <data name="CreateAction" xml:space="preserve">
    <value>créer</value>
  </data>
  <data name="Createdby" xml:space="preserve">
    <value>créé Par</value>
  </data>
  <data name="Createddate" xml:space="preserve">
    <value>date de création</value>
  </data>
  <data name="DeleteAction" xml:space="preserve">
    <value>effacer</value>
  </data>
  <data name="DeleteConfirmMessage" xml:space="preserve">
    <value>Êtes-vous sûr de vouloir supprimer ce ?</value>
  </data>
  <data name="EditAction" xml:space="preserve">
    <value>Sauvegarder</value>
  </data>
  <data name="EmailAddress" xml:space="preserve">
    <value>Adresse e-mail</value>
  </data>
  <data name="EmailAddress2nd" xml:space="preserve">
    <value>Adresse e-mail</value>
  </data>
  <data name="Fax" xml:space="preserve">
    <value>Fax No.</value>
  </data>
  <data name="Fax2nd" xml:space="preserve">
    <value>Fax No.</value>
  </data>
  <data name="IncompleteClaimRegistration" xml:space="preserve">
    <value>Les demandes incomplètes inscription</value>
  </data>
  <data name="ListActionCreate" xml:space="preserve">
    <value>Créer nouveau</value>
  </data>
  <data name="ListActionDelete" xml:space="preserve">
    <value>effacer</value>
  </data>
  <data name="ListActionDetails" xml:space="preserve">
    <value>détails</value>
  </data>
  <data name="ListActionEdit" xml:space="preserve">
    <value>Modifier</value>
  </data>
  <data name="Mobile" xml:space="preserve">
    <value>n ° mobile</value>
  </data>
  <data name="Mobile2nd" xml:space="preserve">
    <value>n ° mobile</value>
  </data>
  <data name="Modifiedby" xml:space="preserve">
    <value>modifié par</value>
  </data>
  <data name="Modifieddate" xml:space="preserve">
    <value>date de modification</value>
  </data>
  <data name="NewClaimRegistration" xml:space="preserve">
    <value>Nouvelle revendication inscription</value>
  </data>
  <data name="OfficeNo" xml:space="preserve">
    <value>Non Bureau</value>
  </data>
  <data name="OfficeNo2nd" xml:space="preserve">
    <value>Non Bureau</value>
  </data>
  <data name="PartyTypeId" xml:space="preserve">
    <value>type de partie</value>
  </data>
  <data name="PostalCode" xml:space="preserve">
    <value>Code Postal</value>
  </data>
  <data name="ProviderType" xml:space="preserve">
    <value>Type de fournisseur</value>
  </data>
  <data name="RecordNumber" xml:space="preserve">
    <value>Numéro du dossier</value>
  </data>
  <data name="Reference" xml:space="preserve">
    <value>Numéro De Référence</value>
  </data>
  <data name="Remarks" xml:space="preserve">
    <value>remarques</value>
  </data>
  <data name="RFVAppointedDate" xml:space="preserve">
    <value>Date de la nomination est requise .</value>
  </data>
  <data name="RFVClaimantAddress1" xml:space="preserve">
    <value>Address1 du demandeur est nécessaire .</value>
  </data>
  <data name="RFVClaimantName" xml:space="preserve">
    <value>Nom demandeur est tenu .</value>
  </data>
  <data name="RFVClaimType" xml:space="preserve">
    <value>Type de revendication est nécessaire .</value>
  </data>
  <data name="RFVCompanyName" xml:space="preserve">
    <value>Nom de la société est nécessaire .</value>
  </data>
  <data name="RFVCountry" xml:space="preserve">
    <value>Pays est nécessaire .</value>
  </data>
  <data name="RFVPartyType" xml:space="preserve">
    <value>Type de Partie est tenue .</value>
  </data>
  <data name="RFVPostalCode" xml:space="preserve">
    <value>Code postal est nécessaire .</value>
  </data>
  <data name="RFVReference" xml:space="preserve">
    <value>Référence est nécessaire .</value>
  </data>
  <data name="RFVServiceProviderType" xml:space="preserve">
    <value>Type de fournisseur de services est nécessaire .</value>
  </data>
  <data name="RFVStatusId" xml:space="preserve">
    <value>Statut est nécessaire .</value>
  </data>
  <data name="ServiceProviderName" xml:space="preserve">
    <value>Prestataire de services Nom</value>
  </data>
  <data name="ServiceProviders" xml:space="preserve">
    <value>Fournisseur de services</value>
  </data>
  <data name="ServiceProviderTypeId" xml:space="preserve">
    <value>Service Type de fournisseur</value>
  </data>
  <data name="State" xml:space="preserve">
    <value>état</value>
  </data>
  <data name="StatusId" xml:space="preserve">
    <value>statut</value>
  </data>
  <data name="ThirdPartyHeaderFirst" xml:space="preserve">
    <value>3rd Party / propre prestataire de services d'information</value>
  </data>
  <data name="ThirdPartyHeaderSecond" xml:space="preserve">
    <value>Ajouter 3rd Party / propre prestataire de services</value>
  </data>
  <data name="Own" xml:space="preserve">
    <value>propre</value>
  </data>
  <data name="ThirdParty" xml:space="preserve">
    <value>Tierce personne</value>
  </data>
  <data name="TPVehicleNo" xml:space="preserve">
    <value>TP Véhicule Aucune</value>
  </data>
  <data name="RFVTPVehicleNo" xml:space="preserve">
    <value>TP véhicule est Non nécessaire.</value>
  </data>
</root>