<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CreatedBy" xml:space="preserve">
    <value>Created By</value>
  </data>
  <data name="CreatedDate" xml:space="preserve">
    <value>Created Date</value>
  </data>
  <data name="Dairiestobereassigned" xml:space="preserve">
    <value>Alerts To Be Reassigned</value>
  </data>
  <data name="EmailBody" xml:space="preserve">
    <value>Email Body</value>
  </data>
  <data name="ENDTIME" xml:space="preserve">
    <value>Completed Date</value>
  </data>
  <data name="Escalation" xml:space="preserve">
    <value>Escalation ?</value>
  </data>
  <data name="EscalationTo" xml:space="preserve">
    <value>Escalation To</value>
  </data>
  <data name="ExpectedPaymentDate" xml:space="preserve">
    <value>Expected Payment Date</value>
  </data>
  <data name="FOLLOWUPDATE" xml:space="preserve">
    <value>FollowUp Date</value>
  </data>
  <data name="FROMUSERID" xml:space="preserve">
    <value>Created By</value>
  </data>
  <data name="LISTTYPEID" xml:space="preserve">
    <value>Alerts Description</value>
  </data>
  <data name="ModifiedBy" xml:space="preserve">
    <value>Modified By</value>
  </data>
  <data name="ModifiedDate" xml:space="preserve">
    <value>Modified Date</value>
  </data>
  <data name="NOTE" xml:space="preserve">
    <value>Remarks</value>
  </data>
  <data name="ReAssignDateFrom" xml:space="preserve">
    <value>Reassignment Date From</value>
  </data>
  <data name="ReAssignTo" xml:space="preserve">
    <value>Reassignment To</value>
  </data>
  <data name="Remark" xml:space="preserve">
    <value>Remarks</value>
  </data>
  <data name="ReminderBeforeCompletion" xml:space="preserve">
    <value>Reminder Before Completion Date (Days)</value>
  </data>
  <data name="STARTTIME" xml:space="preserve">
    <value>Estimated Completion Date</value>
  </data>
  <data name="SUBJECTLINE" xml:space="preserve">
    <value>Email Subject</value>
  </data>
  <data name="TOUSERID" xml:space="preserve">
    <value>Assigned To</value>
  </data>
  <data name="ReassignedDiary" xml:space="preserve">
    <value>Reassigned Alerts</value>
  </data>
  <data name="ReassignedDiaryDate" xml:space="preserve">
    <value>Reassigned Alerts Date</value>
  </data>
  <data name="AddNewAlert" xml:space="preserve">
    <value>Add New Alert</value>
  </data>
  <data name="Alerts" xml:space="preserve">
    <value>Alerts</value>
  </data>
  <data name="AlertsInformation" xml:space="preserve">
    <value>Alerts Information</value>
  </data>
  <data name="AlertsReassignment" xml:space="preserve">
    <value>Alerts Reassignment</value>
  </data>
  <data name="ReassignAlerts" xml:space="preserve">
    <value>Reassign Alerts</value>
  </data>
  <data name="ReassignedDate" xml:space="preserve">
    <value>Reassigned Date</value>
  </data>
  <data name="SelectOneChk" xml:space="preserve">
    <value>Please select at least one of the checkbox</value>
  </data>
  <data name="RFVAlertsDescription" xml:space="preserve">
    <value>Alerts Description is required.</value>
  </data>
  <data name="RFVAssignedTo" xml:space="preserve">
    <value>Assigned To is required.</value>
  </data>
  <data name="RFVCreatedBy" xml:space="preserve">
    <value>Created By is required.</value>
  </data>
  <data name="RFVEmailSubject" xml:space="preserve">
    <value>Email Subject is required.</value>
  </data>
  <data name="RFVEscalationTo" xml:space="preserve">
    <value>Escalation To is required.</value>
  </data>
  <data name="RFVEstimatedCompletionDate" xml:space="preserve">
    <value>Estimated Completion Date is required.</value>
  </data>
  <data name="RFVFollowUpDate" xml:space="preserve">
    <value>Follow Up Date is required.</value>
  </data>
  <data name="RFVReminderBefNot" xml:space="preserve">
    <value>Reminder Before Completion Date can not be Zero.</value>
  </data>
  <data name="RFVReminderBeforeCompDate" xml:space="preserve">
    <value>Reminder Before Completion Date is required.</value>
  </data>
  <data name="AlertsHaveBeenSuccessfullyReassigned" xml:space="preserve">
    <value>Alerts Have Been Successfully Reassigned</value>
  </data>
  <data name="DiariesToBeReassigned" xml:space="preserve">
    <value>Diaries To Be Reassigned</value>
  </data>
  <data name="ReAssignmentDateFrom" xml:space="preserve">
    <value>Re Assignment Date From</value>
  </data>
  <data name="ReAssignmentDateTo" xml:space="preserve">
    <value>Re Assignment Date To</value>
  </data>
  <data name="ReAssignmentDiary" xml:space="preserve">
    <value>Re-Assignment Diary</value>
  </data>
  <data name="ReAssignmentTo" xml:space="preserve">
    <value>Re Assignment To</value>
  </data>
  <data name="TypeofAssignment" xml:space="preserve">
    <value>Type of Assignment</value>
  </data>
  <data name="Unabletosave" xml:space="preserve">
    <value>Unable to save</value>
  </data>
</root>