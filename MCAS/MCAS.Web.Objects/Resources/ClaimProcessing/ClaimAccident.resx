<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BackToListAction" xml:space="preserve">
    <value>Back to List</value>
  </data>
  <data name="CreateAction" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="DeleteConfirmMessage" xml:space="preserve">
    <value>Are you sure you want to delete this?</value>
  </data>
  <data name="DeleteAction" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="EditAction" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="ListActionCreate" xml:space="preserve">
    <value>Create New</value>
  </data>
  <data name="ListActionEdit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="ListActionDetails" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="ListActionDelete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="ClaimAdjustments" xml:space="preserve">
    <value>Claim Adjustments</value>
  </data>
  <data name="ClaimEnquiry" xml:space="preserve">
    <value>Claim Enquiry</value>
  </data>
  <data name="ClaimPaymentProcessing" xml:space="preserve">
    <value>Claim Payment Processing</value>
  </data>
  <data name="ClaimRecoveryProcessing" xml:space="preserve">
    <value>Claim Recovery Processing</value>
  </data>
  <data name="NewClaimRegistration" xml:space="preserve">
    <value>New Claim Registration</value>
  </data>
  <data name="Accident" xml:space="preserve">
    <value>Accident</value>
  </data>
  <data name="ClaimPayment" xml:space="preserve">
    <value>Claim Payment</value>
  </data>
  <data name="ClaimsRecovery" xml:space="preserve">
    <value>Claims Recovery</value>
  </data>
  <data name="ClaimsRegistration" xml:space="preserve">
    <value>Claims Registration</value>
  </data>
  <data name="AccidentDate" xml:space="preserve">
    <value>Accident Date</value>
  </data>
  <data name="AccidentLoc" xml:space="preserve">
    <value>Accident Location</value>
  </data>
  <data name="AccidentTime" xml:space="preserve">
    <value>Accident Time</value>
  </data>
  <data name="BusServiceNo" xml:space="preserve">
    <value>Bus Service No</value>
  </data>
  <data name="ClaimNo" xml:space="preserve">
    <value>Claim No</value>
  </data>
  <data name="Createdby" xml:space="preserve">
    <value>Created By</value>
  </data>
  <data name="CreatedDate" xml:space="preserve">
    <value>Created Date</value>
  </data>
  <data name="Damages" xml:space="preserve">
    <value>Damages</value>
  </data>
  <data name="DateJoined" xml:space="preserve">
    <value>Date Joined</value>
  </data>
  <data name="DateofFinding" xml:space="preserve">
    <value>Date of Final Finding</value>
  </data>
  <data name="DateResigned" xml:space="preserve">
    <value>Date Resigned</value>
  </data>
  <data name="DriverEmployeeNo" xml:space="preserve">
    <value>Bus Captain code</value>
  </data>
  <data name="DriverName" xml:space="preserve">
    <value>Bus Captain Name</value>
  </data>
  <data name="DriverNRICNo" xml:space="preserve">
    <value>NRIC No</value>
  </data>
  <data name="DutyIO" xml:space="preserve">
    <value>Duty IO</value>
  </data>
  <data name="Facts" xml:space="preserve">
    <value>Insured's Report</value>
  </data>
  <data name="FinalLiability" xml:space="preserve">
    <value>Final Liability</value>
  </data>
  <data name="Interchange" xml:space="preserve">
    <value>Interchange</value>
  </data>
  <data name="IPNo" xml:space="preserve">
    <value>IP No.</value>
  </data>
  <data name="IsRecoveryBI" xml:space="preserve">
    <value>Recoverable From Insurer (BI)</value>
  </data>
  <data name="IsRecoveryOD" xml:space="preserve">
    <value>Recoverable (OD)</value>
  </data>
  <data name="Make" xml:space="preserve">
    <value>Make</value>
  </data>
  <data name="ModelNo" xml:space="preserve">
    <value>Model</value>
  </data>
  <data name="ModifiedBy" xml:space="preserve">
    <value>Modified By</value>
  </data>
  <data name="ModifiedDate" xml:space="preserve">
    <value>Modified Date</value>
  </data>
  <data name="ODStatus" xml:space="preserve">
    <value>Any Own Damage</value>
  </data>
  <data name="OperatingHours" xml:space="preserve">
    <value>Operating Hours</value>
  </data>
  <data name="Organization" xml:space="preserve">
    <value>Organization</value>
  </data>
  <data name="ReportedDate" xml:space="preserve">
    <value>Reported Dates</value>
  </data>
  <data name="Results" xml:space="preserve">
    <value>IO's Final Finding</value>
  </data>
  <data name="TPClaimentStatus" xml:space="preserve">
    <value>Any Property Damage / Bodily Injury</value>
  </data>
  <data name="VehicleNo" xml:space="preserve">
    <value>Vehicle No</value>
  </data>
  <data name="IncompleteClaimRegistration" xml:space="preserve">
    <value>Incomplete Claim Registration</value>
  </data>
  <data name="AccidentDetails" xml:space="preserve">
    <value>Accident Details</value>
  </data>
  <data name="ClaimAccidentEntry" xml:space="preserve">
    <value>Claim Accident Entry</value>
  </data>
  <data name="CVAccidentTime" xml:space="preserve">
    <value>Accident Time can not be greater then current time.</value>
  </data>
  <data name="Driver" xml:space="preserve">
    <value>Driver</value>
  </data>
  <data name="InitialFindings" xml:space="preserve">
    <value>Initial Findings</value>
  </data>
  <data name="lblAccidentDate" xml:space="preserve">
    <value>Accident Date</value>
  </data>
  <data name="lblDateOfFinding" xml:space="preserve">
    <value>Date of Finding</value>
  </data>
  <data name="lblReportedDate" xml:space="preserve">
    <value>Reported Date</value>
  </data>
  <data name="MsgAccidentClaimCanceled" xml:space="preserve">
    <value>Accident claim has been canceled.</value>
  </data>
  <data name="MsgBeforeComplete" xml:space="preserve">
    <value>Please input values for Accident screen and create one Claim first before clicking on the complete button.</value>
  </data>
  <data name="MsgBusCaptainCode" xml:space="preserve">
    <value>Please enter correct Bus Captain Code</value>
  </data>
  <data name="MsgConfirmCancel" xml:space="preserve">
    <value>Do you want to cancel this accident claim?</value>
  </data>
  <data name="MsgConfirmComplete" xml:space="preserve">
    <value>Proceed to complete this claim?</value>
  </data>
  <data name="MsgDate" xml:space="preserve">
    <value>can not be greater then current date</value>
  </data>
  <data name="MsgDateFormat" xml:space="preserve">
    <value>Date must be in 'dd/mm/yyyy' format.</value>
  </data>
  <data name="MsgDateOfFinding" xml:space="preserve">
    <value>Date of Finding cannot be less than Accident Date.</value>
  </data>
  <data name="MsgHourFormat" xml:space="preserve">
    <value>Please enter correct 24 hours clock format</value>
  </data>
  <data name="MsgMobileNo" xml:space="preserve">
    <value>Mobile No should be in proper format.</value>
  </data>
  <data name="MsgReportedDate" xml:space="preserve">
    <value>Reported Date cannot be less than Accident Date.</value>
  </data>
  <data name="MsgVehicleNumber" xml:space="preserve">
    <value>Please enter correct vehicle number</value>
  </data>
  <data name="RFVAccidentDate" xml:space="preserve">
    <value>Accident Date is required.</value>
  </data>
  <data name="RFVAccidentTime" xml:space="preserve">
    <value>Accident Time is required.</value>
  </data>
  <data name="RFVBusServiceNumber" xml:space="preserve">
    <value>Bus Service Number is required.</value>
  </data>
  <data name="RFVOD" xml:space="preserve">
    <value>OD is required.</value>
  </data>
  <data name="RFVOrganization" xml:space="preserve">
    <value>Organization is required.</value>
  </data>
  <data name="RFVPDBI" xml:space="preserve">
    <value>PD/BI is required.</value>
  </data>
  <data name="RFVReportedDate" xml:space="preserve">
    <value>Reported Date is required.</value>
  </data>
  <data name="Vehicle" xml:space="preserve">
    <value>Vehicle</value>
  </data>
  <data name="CollisionType" xml:space="preserve">
    <value>Collision Type</value>
  </data>
  <data name="InitialLiability" xml:space="preserve">
    <value>Initial Liability</value>
  </data>
  <data name="District" xml:space="preserve">
    <value>District</value>
  </data>
  <data name="Fatal" xml:space="preserve">
    <value>Fatal</value>
  </data>
  <data name="MinorInjury" xml:space="preserve">
    <value>Minor Injury</value>
  </data>
  <data name="RoadName" xml:space="preserve">
    <value>Road Name</value>
  </data>
  <data name="SeriousInjury" xml:space="preserve">
    <value>Serious Injury</value>
  </data>
  <data name="RFVInputDate" xml:space="preserve">
    <value>Input Date is required.</value>
  </data>
  <data name="Address1" xml:space="preserve">
    <value>Address1</value>
  </data>
  <data name="Address2" xml:space="preserve">
    <value>Address2</value>
  </data>
  <data name="Address3" xml:space="preserve">
    <value>Address3</value>
  </data>
  <data name="AnyRecoveryClaim" xml:space="preserve">
    <value>Any Recovery Claim</value>
  </data>
  <data name="CDGEClaimRef" xml:space="preserve">
    <value>CDGE Claim Ref</value>
  </data>
  <data name="ContactNo" xml:space="preserve">
    <value>Contact No</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="DriverType" xml:space="preserve">
    <value>Driver Type</value>
  </data>
  <data name="EmailAddress" xml:space="preserve">
    <value>Email Address</value>
  </data>
  <data name="FaxNo" xml:space="preserve">
    <value>Fax No</value>
  </data>
  <data name="Gender" xml:space="preserve">
    <value>Gender</value>
  </data>
  <data name="InputDate" xml:space="preserve">
    <value>Input Date</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NRICPPNo" xml:space="preserve">
    <value>NRIC/PP No</value>
  </data>
  <data name="OwnerName" xml:space="preserve">
    <value>Owner Name</value>
  </data>
  <data name="OwnInsurer" xml:space="preserve">
    <value>Own Insurer</value>
  </data>
  <data name="PostalCode" xml:space="preserve">
    <value>Postal Code</value>
  </data>
  <data name="ReportedDate2" xml:space="preserve">
    <value>Reported Date</value>
  </data>
  <data name="Hirer" xml:space="preserve">
    <value>Hirer</value>
  </data>
  <data name="Owner" xml:space="preserve">
    <value>Owner</value>
  </data>
</root>