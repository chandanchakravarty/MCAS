@model MCAS.Web.Objects.MastersHelper.ClaimOfficerDutyModel
@using MCAS.Web.Objects.CommonHelper
@{
    ViewBag.Title = "ClaimOfficerDutyEditor";
    Layout = "~/Views/Shared/_SystemAdminLayout.cshtml";
    var pageMode = Request.QueryString["pageMode"];
    var btndisplay = "yes";
    if (pageMode == "View")
    {
        btndisplay = "none";
    }
    SecurityPermissions myPemissions = (SecurityPermissions)ViewData["UserPermissions"]; 
}

<link href="@Url.Content("~/Content/themes/base/jquery.ui.all.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/jquery-2.1.0.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/globalize/globalize.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/globalize/cultures/globalize.culture.en-GB.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery-ui-v1.10.3.js")" type="text/javascript"></script>



<div class="dashboard-wrapper">
    <div class="container">
       <div class="row page-title">
            <div class="col-lg-12">
                <h2>
                    System Admin</h2>
                <ul class="breadcrumb">
                    <li>Claim Officer Duty Details</li>
                </ul>
            </div>
        </div>
        <hr />
        <div class="row">
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                <div class="panel panel-info">
                    <div class="panel-heading clearfix">
                        <i class="icon-check-sign"></i>
                        <h3 class="panel-title">
                            Claims Officer Duty Details</h3>
                    </div>
                    <div style="color: Red; font-weight: bold;" class="has-error" id="error">
                        <p align="center">
                            @if (TempData["result"] != null)
                            {
                                @TempData["result"]
                            }
                        </p>
                    </div>
                    <div id="t2">
                    <div class="panel-body">
                        @using (Html.BeginForm("ClaimOfficerDutyEditor", "Masters", FormMethod.Post, new { role = "form", @class = "form-horizontal", id = "ClaimOfficerDutyEditor", name = "ClaimOfficerDutyEditor" }))
                        {
                            @Html.ValidationSummary(true)
                            @Html.HiddenFor(m => m.TranId)
                            <div class="row">
                                <div class="row top-buffer">
                                    <div class="clearfix igr col-md-12">
                                        <div class="col-md-2">
                                            <label for="inputGroupCode">
                                                Claim Officer Name&nbsp;<span class="text-danger">*</span></label>
                                        </div>
                                        <div class="col-md-3">
                                            @Html.TextBoxFor(m => m.ClaimOfficerName, new { id = "ClaimOfficerName", @class = "form-control",@maxlength=30 })
                                            @Html.ValidationMessageFor(m => m.ClaimOfficerName)<br />
                                        </div>
                                        <div class="col-md-2">
                                            <label for="inputGroupCode">
                                                User Group&nbsp;<span class="text-danger">*</span></label>
                                        </div>
                                        <div class="col-md-3">
                                            @Html.DropDownListFor(m => m.UserGroup, new SelectList(Model.UserGroupList, "GroupCode", "GroupName"), new { id = "ddlMainClass", @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.UserGroup)<br />
                                        </div>
                                    </div>
                                </div>
                                <div class="row top-buffer">
                                    <div class="clearfix igr col-md-12">
                                        <div class="col-md-2">
                                            <label for="inputGroupCode">
                                                Department&nbsp;<span class="text-danger">*</span></label>
                                        </div>
                                        <div class="col-md-3">
                                            @Html.DropDownListFor(m => m.ddlDeptCode, new SelectList(Model.DeptGroupList, "DeptCode", "DeptName"), new { id = "ddlMainClass", @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.ddlDeptCode)<br />
                                        </div>
                                        <div class="col-md-2">
                                            <label for="inputGroupCode">
                                                Last Assignment Date&nbsp;<span class="text-danger">*</span></label>
                                        </div>
                                        <div class="col-md-3">
                                            @Html.TextBoxFor(m => m.LastAssignmentdate, "{0:d}", new { id = "LastAssignmentdate", @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.LastAssignmentdate)<br />
                                        </div>
                                    </div>
                                </div>
                                <div class="row top-buffer">
                                    <div class="clearfix igr col-md-12">
                                        <div class="col-md-2">
                                            <label for="inputGroupCode">
                                                Type&nbsp;<span class="text-danger">*</span></label>
                                        </div>
                                        <div class="col-md-3">
                                            <select id="Type" name="Type" aria-invalid="false" class="form-control">
                                                <option selected="selected" value="OD">OD</option>
                                                <option selected="selected" value="TP">TP</option>
                                            </select><br />
                                        </div>
                                        <div class="col-md-2">
                                            <label for="inputGroupCode">
                                                Claim Number&nbsp;<span class="text-danger">*</span></label>
                                        </div>
                                        <div class="col-md-3">
                                            @Html.TextBoxFor(m => m.ClaimNumber, new { id = "ClaimNumber", @class = "form-control",@maxlength=15 })
                                            @Html.ValidationMessageFor(m => m.ClaimNumber)<br />
                                        </div>
                                    </div>
                                </div>
                                <div class="row top-buffer">
                                    <div class="clearfix igr col-md-12 text-center">
                                     @if (@myPemissions.Write)
                                     {
                                       <button id="Save" style="display:@btndisplay" class="btn btn-info">
                                            Save</button>
                                     }  &nbsp;&nbsp;&nbsp;&nbsp;

                                        @Html.ActionLink("Back", "ClaimOfficerDutyIndex", null, new { @class = "btn btn-info" })&nbsp;&nbsp;&nbsp;&nbsp;
                                       
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                    </div>
                </div>
            </div>
        </div>
      </div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        $.culture = Globalize.culture("en-GB");
        $.validator.methods.date = function (value, element) {
            return this.optional(element)
                    || Globalize.parseDate(value, "dd/MM/yyyy", "en-GB")
                    || Globalize.parseDate(value, "yyyy-mm-dd");
        }
        if ('@pageMode' == 'View') {
            $('#t2').find('input, textarea, button, select').attr('disabled', 'disabled');

        }
        $("#ClaimOfficerName").keypress(function () {
            $(this);
            var a = a || event,
            a = 32 == a.keyCode ? !0 : /[a-z]+$/i.test(String.fromCharCode(a.keyCode || a.which));
            return !1 == a ? !1 : a
        })
        $("input[type=text]").each(function () {
            if (void 0 !== $(this).attr("data-val-date") && "The field " == $(this).attr("data-val-date").substring(0, 10)) {
                var a = $(this).attr("data-val-date").substring(10, $(this).attr("data-val-date").length).replace("must be a date.", "must be in 'dd/mm/yyyy' format.");
                $(this).removeAttr("data-val-date");
                $(this).attr("data-val-date", a)
            }
        });
    });
    
    function loadusergrouplist() {
        $.ajax({
            url: '@(Url.Action("FillUserGroup"))',
            cache: !1,
            success: function (a) {
                $("#UserGroup").empty();
                $.each(a, function (a, c) {
                    $("#UserGroup").append("<option value='" + c.GroupCode + "'>" + c.GroupName + "</option>")
                })
            },
            error: function (a) {
                alert("error : " + a)
            }
        })
    }
    function getQueryVariable(a) {
        for (var b = "@MenuListItem.ClaimTabs.GetQueryStringVal()".replace(/amp;/ig, "").split("&"), c = 0; c < b.length; c++) {
            var d = b[c].split("=");
            if (d[0] == a) return d[1]
        }
    }
    function onclickcancel() {
        $("#ClaimOfficerDutyEditor")[0].reset()
    };
</script>

<script type="text/javascript">
    $(function () {
       $("#LastAssignmentdate").datepicker({
            dateFormat: "dd/mm/yy",
            showStatus: !0,
            showWeeks: !0,
            currentText: "Now",
            autoSize: !0,
            gotoCurrent: !0,
            showAnim: "blind",
            yearRange: "1951:2050",
            highlightWeek: !0,
            changeMonth: !0,
            changeYear: !0,
            onSelect: function (b) {
                $(this).valid();
            }
        });
     })
</script>

<script type="text/javascript" language = "Javascript">
    /**
    * DHTML date validation script for dd/mm/yyyy. Courtesy of SmartWebby.com (http://www.smartwebby.com/dhtml/datevalidation.asp)
    */
    // Declaring valid date character, minimum year and maximum year
    var dtCh = "/";
    var minYear = 1900;
    var maxYear = 2100;

    function isInteger(s) {
        var i;
        for (i = 0; i < s.length; i++) {
            // Check that current character is number.
            var c = s.charAt(i);
            if (((c < "0") || (c > "9"))) return false;
        }
        // All characters are numbers.
        return true;
    }

    function stripCharsInBag(s, bag) {
        var i;
        var returnString = "";
        // Search through string's characters one by one.
        // If character is not in bag, append to returnString.
        for (i = 0; i < s.length; i++) {
            var c = s.charAt(i);
            if (bag.indexOf(c) == -1) returnString += c;
        }
        return returnString;
    }

    function daysInFebruary(year) {
        // February has 29 days in any year evenly divisible by four,
        // EXCEPT for centurial years which are not also divisible by 400.
        return (((year % 4 == 0) && ((!(year % 100 == 0)) || (year % 400 == 0))) ? 29 : 28);
    }
    function DaysArray(n) {
        for (var i = 1; i <= n; i++) {
            this[i] = 31
            if (i == 4 || i == 6 || i == 9 || i == 11) { this[i] = 30 }
            if (i == 2) { this[i] = 29 }
        }
        return this
    }

    function isDate(dtStr) {
        var daysInMonth = DaysArray(12)
        var pos1 = dtStr.indexOf(dtCh)
        var pos2 = dtStr.indexOf(dtCh, pos1 + 1)
        var strDay = dtStr.substring(0, pos1)
        var strMonth = dtStr.substring(pos1 + 1, pos2)
        var strYear = dtStr.substring(pos2 + 1)
        strYr = strYear
        if (strDay.charAt(0) == "0" && strDay.length > 1) strDay = strDay.substring(1)
        if (strMonth.charAt(0) == "0" && strMonth.length > 1) strMonth = strMonth.substring(1)
        for (var i = 1; i <= 3; i++) {
            if (strYr.charAt(0) == "0" && strYr.length > 1) strYr = strYr.substring(1)
        }
        month = parseInt(strMonth)
        day = parseInt(strDay)
        year = parseInt(strYr)
        if (pos1 == -1 || pos2 == -1) {
            alert("Last Assignment date format should be : dd/mm/yyyy.")
            return false
        }
        if (strMonth.length < 1 || month < 1 || month > 12) {
            alert("Please enter a valid month.")
            return false
        }
        if (strDay.length < 1 || day < 1 || day > 31 || (month == 2 && day > daysInFebruary(year)) || day > daysInMonth[month]) {
            alert("Please enter a valid day.")
            return false
        }
        if (strYear.length != 4 || year == 0 || year < minYear || year > maxYear) {
            alert("Please enter a valid 4 digit year between " + minYear + " and " + maxYear)
            return false
        }
        if (dtStr.indexOf(dtCh, pos2 + 1) != -1 || isInteger(stripCharsInBag(dtStr, dtCh)) == false) {
            alert("Please enter a valid date.")
            return false
        }
        return true
    }

    function ValidateForm() {
        var dt = document.ClaimOfficerDutyEditor.LastAssignmentdate
//        if (dt.value == "") {
//            alert("Please enter date.");
//            dt.focus()
//            return false
        //        }
        if (dt.value != "") {

            if (isDate(dt.value) == false) {
                dt.focus()
                return false
            }
        }
        return true
    }

</script>




