@using MCAS.Globalisation
@model IEnumerable<MCAS.Web.Objects.ClaimObjectHelper.ClaimReserveCrTxModelCollection>
@using MCAS.Web.Objects.Resources.ClaimProcessing;
@using MCAS.Web.Objects.Resources.Common;
@{
    ViewBag.Title = "ClaimCrTxEditorList";
    Layout = null;
    var mMCASQueryString = Html.MCASQueryString(Request.QueryString);
    var claimMode = mMCASQueryString["claimMode"] == null ? "" : Convert.ToString(mMCASQueryString["claimMode"]);
    var mode = mMCASQueryString["mode"] == null ? "" : Convert.ToString(mMCASQueryString["mode"]);
}
 <style type="text/css">
.m_title {
    text-transform: capitalize;
}
</style>
<link href="@Url.Content("~/Content/EbixGrid.css")" rel="Stylesheet" media="screen" />
<link href="@Url.Content("~/Content/jquery-ui.css")" rel="Stylesheet" media="screen" />

<div class="table-responsive">
    <div class="ui-ebixgrid">
        @Html.RenderGrid((from m in Model
                          select new
                          {
                              m.ClaimType,
                              m.ClaimTypeCode,
                              m.ClaimTypeDesc
                         }).Distinct(),
            new EbixGrid.EbixGrid
                {
                    Columns = new List<EbixGrid.EGColumn> 
                                 {
                                     new EbixGrid.EGColumn { DataField = "ClaimType"   ,
                                                        HeaderText = ClaimReserve.ClaimType,
                                                        PrimaryKey = true ,
                                                        Hidden = true,
                                                        Width = "0%" },
                                     new EbixGrid.EGColumn { DataField = "ClaimTypeDesc"   ,
                                                        HeaderText = ClaimReserve.ClaimType,
                                                        PrimaryKey = false ,
                                                        Width = "100%" }
                                 },
                    Width = "650",
                    Height = "350",

                    ID = "ClaimGrid",
                    IsChildRequired = true,
                    childGrid = new EbixGrid.EbixGrid
                    {
                        Columns = new List<EbixGrid.EGColumn> 
                                 {
                                     new EbixGrid.EGColumn { DataField = "ClaimType",
                                                        HeaderText = ClaimReserve.ClaimType,
                                                        PrimaryKey = false,
                                                        ForeinKey = true,
                                                        Hidden = true,
                                                        Width = "0%" },
                                     new EbixGrid.EGColumn { DataField = "RecordNumber",  HeaderText = ClaimReserve.RecordNumber,  Width = "19%"},
                                     new EbixGrid.EGColumn { DataField = "ClaimantName",  HeaderText = ClaimReserve.ClaimantName, Width = "19%" },
                                     new EbixGrid.EGColumn { DataField = "Total_O",  HeaderText = ClaimReserve.CurrentReserve,  Width = "19%"},
                                     new EbixGrid.EGColumn { DataField = "",  HeaderText = Common.Edit, Width = "14%",
                                         Columntype = new EbixGrid.EGColumnType
                                                             { Columntype = EbixGrid.ColumnType.LinkButton,
                                                                 ColumnCell = new EbixGrid.EGCell{ Caption =Common.Edit, Href = @Url.Content("~/ClaimProcessing/ClaimReserveEditor"), CssClass ="btn btn-xs btn-info"}  
                                                             } 
                                       , QueryStringFields =  new List<string> {"PolicyId", "ClaimID","ReserveId", "AccidentClaimId","ClaimType","HClaimantStatus","mode="+@mode, "claimMode=" + @claimMode,"Viewmode=Edit"}
                                      }
                                      , 
                                      new EbixGrid.EGColumn { DataField = "",  HeaderText = ClaimReserve.ReserveHistory, Width = "15%",
                                         Columntype = new EbixGrid.EGColumnType
                                                             { Columntype = EbixGrid.ColumnType.LinkButton,
                                                                 ColumnCell = new EbixGrid.EGCell{ Caption =Common.View, Href = @Url.Content("~/ClaimProcessing/ClaimReserveEditor"), CssClass ="btn btn-xs btn-info"}  
                                                             } 
                                       , QueryStringFields =  new List<string> {"PolicyId","ClaimID","ReserveId", "AccidentClaimId","ClaimType"}
                                      },
                                      new EbixGrid.EGColumn 
                                      { 
                                         DataField = "",  HeaderText = Common.Print, Width = "14%",
                                         Columntype = new EbixGrid.EGColumnType
                                                             { 
                                                                 Columntype = EbixGrid.ColumnType.LinkButton,
                                                                 ColumnCell = new EbixGrid.EGCell{ Caption =Common.Print, Href = @Url.Content("~/ClaimMasters/PreviewDocumentIndex"), CssClass ="Print btn btn-xs btn-info"}  
                                                             } 
                                       , QueryStringFields =  new List<string> {"PolicyId","ClaimID","ReserveId"}
                                      }                                                       
                                   },
                        Width = "650",
                        Height = "350",

                        ID = "ClaimSubGrid",
                        DataSource = Model.OrderByDescending(x => x.ReserveId)
                    }

                }
  )
    </div>
</div>
<script type="text/javascript">
    var do_on_load = function () {
        setTabActive('ReverseEditor');
    };
    $(document).ready(do_on_load);
    $(window).bind('page:change', do_on_load);

    function showChildGrid(id, spanid) {
        $('#' + id).slideToggle();
        if ($('#span_' + id).hasClass('ui-icon-plus'))
            $('#span_' + id).removeClass('ui-icon-plus').addClass('ui-icon-minus');
        else
            $('#span_' + id).removeClass('ui-icon-minus').addClass('ui-icon-plus');
    }
    
</script>