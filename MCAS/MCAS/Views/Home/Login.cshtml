@using MCAS.Globalisation
@using MCAS.Web.Resources
@model MCAS.Web.Objects.CommonHelper.UserLogin
@{
    ViewBag.Title = "Login";
    Layout = "~/Views/Shared/_loginPartial.cshtml";
}
<style>
    .inputdisplay
    {
        background-color: transparent;
        border-style: none;
        color: Gray;
        padding: 0px 0px 0px 10px;
        margin: 0px;
        width: 120px;
        height: 20px;
        color: #31708f;
        font-size: smaller;
        font-weight: bolder;
    }
</style>
<script src='@Url.Content("~/Scripts/jquery-2.1.0.min.js")' type="text/javascript"></script>
<script src='@Url.Content("~/Scripts/jquery.validate.min.js")' type="text/javascript"></script>
<script src='@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")' type="text/javascript"></script>
<div class="login-container">
    <div class="flat-form">
        <div id="login" class="form-action show animated bounceInDown" style="padding: 20px 20px 10px 20px;">
            <h1 align="center" class="text-info">
                <strong>Login to CRIS+ </strong>
            </h1>
            <div style="color: Red; font-weight: bold;" class="has-error" id="error">
                <p align="center">
                    @if (ViewData["Loginresult"] != null)
                    {
                        @ViewData["Loginresult"]
                    }
                </p>
            </div>
            @using (Html.BeginForm("Login", "Home"))
            {
                @Html.AntiForgeryToken()
@*@Html.ValidationSummary()*@

                <ul>
                    <li>@* <input type="text" placeholder="User ID">*@
                        @Html.TextBoxFor(m => m.LoggedInUserId, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.LoggedInUserId)
                    </li>
                    <li>@* <input type="password" placeholder="Password">*@
                        @Html.PasswordFor(m => m.LoggedInUserPwd, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.LoggedInUserPwd)
                    </li>
                </ul> 
@* <a class="button" href='@Url.Action("Index", "Home")'>Login</a>*@
                <input type="submit" class="button" value="Login" style="width: 100%" /><br />
                if (@Model.AllowRetrievePwd == "Y")
                { 
                <div style="text-align: center;">
                    <a url="#" class="btn btn-xs" style="text-decoration: underline;">Retrieve Password</a>
                </div>
                }              
                <div class="form-group">
                    <div class="row top-buffer">
                        <div class="clearfix igr col-md-12">
                            <label class="col-sm-3 control-label" for="inputVerNo" style="color: #31708f; padding: 0px 0px 0px 10px;
                                width: 11%; font-size: smaller; font-weight: bolder;">
                                Ver:&nbsp;&nbsp;&nbsp;</label>
                            <div class="col-sm-3 inputdisplay" id="inputAppVer">
                                @Html.DisplayFor(m => m.appVer, new { id = "inputAppVer" })
                            </div>
                            <label class="col-sm-3 control-label" for="inputVerDate" style="color: #31708f; padding: 0px 0px 0px 10px;
                                width: 13%; font-size: smaller; font-weight: bolder;">
                                Date:&nbsp;&nbsp;&nbsp;</label>
                            <div class="col-sm-3 inputdisplay" id="inputAppVerDate">
                                @Html.DisplayFor(m => m.ReleaseDate, new { id = "inputAppVerDate" })
                            </div>
                        </div>
                    </div>
                </div>               
            }
        </div>
        <!--/#login.form-action-->
        <div id="dialog">
            <div style="color: Red; font-weight: bold; height: 25px; font-size: small;" class="has-error"
                id="errorRetrievePwd">
                <p align="center">
                </p>
            </div>
            <div class="row top-buffer">
                <div class="col-md-4">
                    <label for="inputUserID" style="font-size: small;">
                        User ID&nbsp;<span class="text-danger">*</span></label>
                </div>
                <div class="col-md-7">
                    <input type="text" id="txtUserId" class="form-control" />
                    <div class="has-error" style="display: none; color: #e80c4d; font-weight: bold; font-size: small;"
                        id="error1">
                        <p align="left">
                            User ID is required.
                        </p>
                    </div>
                </div>
            </div>
            <div class="row top-buffer">
                <div class="col-md-4">
                    <label for="inputEmailAddress" style="font-size: small;">
                        Email Address&nbsp;<span class="text-danger">*</span></label>
                </div>
                <div class="col-md-7">
                    @*@Html.TextBoxFor(m => m.EmailId, new { id = "inputEmail", @class = "form-control" })
                @Html.ValidationMessageFor(m => m.EmailId)<br />*@
                    <input type="text" id="txtEmail" class="form-control" />
                    <div class="has-error" style="display: none; color: #e80c4d; font-weight: bold; font-size: small;"
                        id="error2">
                        <p align="left">
                            Email Address is required.
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script language="javascript" type="text/javascript">
    $("#dialog").hide();
    $("#txtEmail").blur(function (b) {
        var emailId = $("#txtEmail").val();
        if (emailId != "" && !isValidEmailAddress(emailId)) {
            $('#error2 p').html('Please enter Email in proper format.');
            $('#error2').show();
        }
    });
    function isValidEmailAddress(emailAddress) {
        var pattern = new RegExp(/^(("[\w-\s]+")|([\w-]+(?:\.[\w-]+)*)|("[\w-\s]+")([\w-]+(?:\.[\w-]+)*))(@@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$)|(@@\[?((25[0-5]\.|2[0-4][0-9]\.|1[0-9]{2}\.|[0-9]{1,2}\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\]?$)/i);
        return pattern.test(emailAddress);
    }
    $("#txtEmail").click(function () {
        $("#errorRetrievePwd p").html('');
        $('#error2').hide();
    });
    $("#txtUserId").click(function () {
        $("#errorRetrievePwd p").html('');
        $('#error1').hide();
    });
    $("body").delegate("a.btn.btn-xs", "click", function () {
        $('#dialog').dialog({
            autoOpen: true,
            width: $('#login').width(),
            height: $('#login').height(),
            resizable: true,
            draggable: true,
            title: 'Retrieve Password',
            modal: true,
            open: function (event, ui) {
                $("#txtUserId").val("");
                $("#txtEmail").val("");
                $("#errorRetrievePwd p").html('');
                $('#error1z').hide();
                $('#error2').hide();
                $('#dialog').css('overflow', 'hidden');
                $('.ui-dialog-buttonpane').find('button:contains("Submit")').removeClass('ui-state-default ui-state-focus').addClass('button');
                $('.ui-dialog-buttonpane').find('button:contains("Cancel")').removeClass('ui-state-default ui-state-focus').addClass('button');
                $("button").mouseover(function () {
                    $('button').removeClass("ui-state-hover");
                });
            },
            buttons: {
                "Submit": function () {
                    RetrievePassword();
                    $("#errorRetrievePwd").click();
                    $('#dialog').css('overflow', 'hidden');
                    $('.ui-dialog-buttonpane').find('button:contains("Submit")').removeClass('ui-state-default ui-state-focus').addClass('button');
                    $('.ui-dialog-buttonpane').find('button:contains("Cancel")').removeClass('ui-state-default ui-state-focus').addClass('button');
                    $("button").mouseover(function () {
                        $('button').removeClass("ui-state-hover");
                    });
                },
                "Cancel": function () {
                    $(this).dialog("close");
                }
            }
        });
    });

    function RetrievePassword() {
        var userId = $("#txtUserId").val();
        var emailId = $("#txtEmail").val();
        if (emailId == "" || userId == "") {
            if (emailId == "") {
                $('#error2 p').html('Email Address is required.');
                $('#error2').show();
            }
            if (userId == "") {
                $('#error1 p').html('User ID is required.');
                $('#error1').show();
            }
        }
        else if (!isValidEmailAddress(emailId)) {
            $('#error2 p').html('Please enter Email in proper format.');
            $('#error2').show();
        }
        else {
            $.ajax({
                url: '@Url.Action("RetrievePassword", "Home")',
                type: 'POST',
                data: { UserId: userId, EmailAddress: emailId },
                success: function (data) {
                    if (data.result) {
                        $("#txtUserId").val("");
                        $("#txtEmail").val("");
                        $("#errorRetrievePwd p").html('Password will be sent to your email address shortly.');
                    }
                    else {
                        $("#errorRetrievePwd p").html(data.responseText);
                    }
                }
            });
        }
    }
</script>
