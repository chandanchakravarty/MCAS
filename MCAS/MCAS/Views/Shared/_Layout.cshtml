@using MCAS.Globalisation
@using MCAS.Web.Objects.Resources.Home
@using MCAS.Web.Objects.CommonHelper
@using MCAS.Web.Objects.Resources.Common;
@using System.Web.Mvc
@{
    System.Resources.ResourceManager MenuResource = (new MCAS.Web.Objects.MastersHelper.TransactionModel()).GetResourceManager("MCAS.Web.Objects.Resources.Common.Menu");
    var culture = new BaseModel().GetCulture();
    string isEncryptedParams = System.Configuration.ConfigurationManager.AppSettings["EncryptQueryParams"].ToUpper();
}
<!DOCTYPE html>
<html>
<head>
    <title>ComfortDelGro Insurance Brokers Pte Ltd</title>
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <meta content="" charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="author" content="Ebix Software Pvt. Ltd." />
    <link rel="shortcut icon" href="~/favicon.ico" />
    <link href="@Url.Content("~/Content/import.css")" rel="Stylesheet" media="screen" />
    <link rel="stylesheet" media="all" type="text/css" href="@Url.Content("~/Content/jquery-ui.css")" />
    <link href="@Url.Content("~/fonts/font-awesome.css")" rel="stylesheet" type="text/css" />
    <link rel="stylesheet" media="all" type="text/css" href="@Url.Content("~/Content/jquery-ui-timepicker-addon.css")" />
    <style type="text/css">
        
        .breadcrumb>li+li:before 
        {
        font-size: 16px !important;
        color:Black !important;
        }

        .ui-button-icon-primary.ui-icon.ui-icon-closethick
        {
            margin: -7px 0 0 -7px;
        }
        div.ui-dialog.ui-widget.ui-widget-content.ui-corner-all.alert.ui-draggable, div.ui-dialog.ui-widget.ui-widget-content.ui-corner-all.ui-front.alert.ui-draggable
        {
            top: 130px !important;
        }
        .top-buffer
        {
            margin-top: 10px;
        }
        .field-validation-error
        {
            color: #e80c4d;
            font-weight: 700;
        }
        .field-validation-valid
        {
            display: none;
        }
        .validation-summary-errors
        {
            color: #e80c4d;
            font-weight: 700;
            font-size: 1.1em;
        }
        .validation-summary-valid
        {
            display: none;
        }
        .rightJustified
        {
            text-align: right;
        }
        ul.breadcrumb li
        {
            text-transform: capitalize;
        }
        fieldset
        {
            padding: 5px;
            margin: 1px;
            border: 1px solid;
            border-color: #DAD7D7;
            border-radius: 3px;
        }
        legend
        {
            display: block;
            width: auto;
            padding: 1px;
            margin-bottom: 2px;
            font-size: 14px;
            line-height: inherit;
            color: #1e91cf !important;
            border: 0;
        }
        .form-horizontal .control-label
        {
            text-align: left;
        }
        .ui-timepicker-div .ui-widget-header
        {
            margin-bottom: 8px;
        }
        .ui-timepicker-div dl
        {
            text-align: left;
        }
        .ui-timepicker-div dl dt
        {
            float: left;
            clear: left;
            padding: 0 0 0 5px;
        }
        .ui-timepicker-div dl dd
        {
            margin: 0 10px 10px 45%;
        }
        .ui-timepicker-div td
        {
            font-size: 90%;
        }
        .ui-tpicker-grid-label
        {
            background: none;
            border: none;
            margin: 0;
            padding: 0;
        }
        
        .ui-timepicker-rtl
        {
            direction: rtl;
        }
        .ui-timepicker-rtl dl
        {
            text-align: right;
            padding: 0 5px 0 0;
        }
        .ui-timepicker-rtl dl dt
        {
            float: right;
            clear: right;
        }
        .ui-timepicker-rtl dl dd
        {
            margin: 0 45% 10px 10px;
        }
        #ui-datepicker-div
        {
            z-index: 999999 !important;
        }
        
        #Hormenu,#Hormenuwizard {display:none;}
        .Systemmenu {display:none;}
        #header > a { display: none; } 
        @@media (max-width:767px) 
        {
        .Systemmenu {display:block;}
        #reg2{width:100%}
        .custom-search {display:none;}
        .dashboard-wrapper {margin-left:220px;}
        aside#sidebar {left:-220px;}
        #wizard { display: none; } 
        
        ul#mini-nav-right li.list-box {margin-left: 0px;}
        ul#mini-nav-right {
        margin: 15px 0px 0 0;
        }
        .top-bar .logo{width:80px;}
        .top-bar > a > img 
        {
        max-width: 60px;
        max-height: 14px;}
        }
  
        @@media screen and (min-width: 768px) 
        {
         #header > a { display: block; } 
        .Systemmenu {display:block;}
        .custom-search {display:block;}
        .logo {background:""}
        .Claimmenu {display:block;}
        .Systemmenu {display:none;}
        aside#sidebar {left:0px;}
        .dashboard-wrapper {margin-left:220px;}
        aside#sidebar {left:0px;}
        #wizard { display: block; } 
        }

    </style>
    <script type="text/javascript">
        (function () {
            var method;
            var noop = function () { };
            var methods = ['assert', 'clear', 'count', 'debug', 'dir', 'dirxml', 'error', 'exception', 'group', 'groupCollapsed', 'groupEnd', 'info', 'log', 'markTimeline', 'profile', 'profileEnd', 'table', 'time', 'timeEnd', 'timeStamp', 'trace', 'warn'];
            var length = methods.length;
            var console = (window.console = window.console || {});
            while (length--) {
                method = methods[length];

                if (!console[method]) {
                    console[method] = noop;
                }
            }
        } ());
        var guid = (function () {
            function s4() {
                return Math.floor((1 + Math.random()) * 0x10000)
               .toString(16)
               .substring(1);
            }
            return function () {
                return s4() + s4() + '-' + s4() + '-' + s4() + '-' +
           s4() + '-' + s4() + s4() + s4();
            };
        })();
    </script>
</head>
<body id="mainbody">
    <div class="top-bar" id="header">
        <a anchorid="DASH" url='@Url.Action("Index", "Home")' href="#" class="logo">
            <img alt="" src="@Url.Content("~/Images/brand-logo.png")"/></a>
        <ul id="mini-nav" class="hidden-xs">
            <li class="arrow-box list-box"><a href="#"><i class="icon-exchange text-warning"></i>
            </a></li>
        </ul>
        <ul id="mini-nav-right">
            @*<li class="list-box hidden-xs">@Html.GlobalisedRouteLink("English", "en", ViewContext.RouteData, new { @class = "btn-primary", @style = "color: #c4c4c4;" })
            </li>*@
            <li class="list-box hidden-xs"><a anchorid="DASH" url='@Url.Action("Index", "Home")' href="#" class="btn btn-info dropdown-toggle">
                <i class="icon-home"></i>@Index.Home</a> </li>
            <li class="list-box hidden-lg hidden-md hidden-sm" id="mob-nav"><a href="#" class="btn">
                Menu</a> </li>
            <li class="dropdown list-box hidden-xs"><a href="#" class="btn btn-info dropdown-toggle"
                data-toggle="dropdown"><i class="icon-user"></i>System Admin</a>
                <div id="mainuitop" class="dropdown-menu animated fadeInLeft quick-actions">
                    <div id="mainui">
                        <ul class="animated fadeInLeft quick-actions">
                            @if (Session != null && Session["menuList"] != null)
                            {
                                string[] Group = { "A", "B" };
                                string[] GroupName = { "Daily Operations", "GI Brokering" };
                                for (int i = 0; i < Group.Length; i++)
                                {
                                <ul>
                                    <li id="@Convert.ToString(GroupName[i]).Replace(" ", "")" style="padding: 0 10px; border: 0 !important; width: 100%; font-weight: 600; display: block; font-size: 14px; background: transparent; text-align: left !important;">@MenuResource.GetString(Convert.ToString(@Convert.ToString(GroupName[i]).Replace(" ", "")))</li>
                                    @{
                                    var myMenuList = (List<MenuListItem>)Session["menuList"];
                                    var group1list = myMenuList.Where(x => x.TabId == "S_ADMN" && x.IsMenu.Equals("Y") && x.Group.Contains(Convert.ToString(Group[i])));
                                    foreach (MenuListItem item in group1list)
                                    {
                                        var id = "S_admin" + @item.MenuId;
                                        var b = "~" + @item.LinkAddress;
                                        <li><a url="@Url.Content(b)" href="#" aid="@item.MenuId" gid="@Group[i]" style="display: block;">
                                            <i class='@item.DisplayImage'></i>
                                            <p id='@id'>@MenuResource.GetString(Convert.ToString(@item.MenuId))</p>
                                        </a></li>
                                    }
                                    }
                                </ul>
                                }
                            }
                        </ul>
                    </div>
                </div>
            </li>
            <li id="SystemadminLi" class="list-box visible-xs"><a id="Systemadminanchor" class="btn">
                <i class="icon-user"></i>System Admin</a></li>
            <li class="list-box"><a href='@Url.Action("Login", "Home")' class="btn btn-warning" style="background-color:#F27819;">
                <i class="icon-signout"></i>Sign Out</a> </li>
        </ul>
    </div>
    <div class="container visible-xs" id="textsearch">
        <div class="row">
            <div class="col-lg-12">
                <div class="custom-search">
                    <input type="text" class="search-query" placeholder="Search here" />
                    <i class="icon-search"></i>
                </div>
            </div>
        </div>
    </div>
    <aside id="sidebar" style="left: 0px;">
        <div id='menu'>
            <ul class="Claimmenu">
                @{
                    if (Session != null && Session["menuList"] != null)
                    {
                        TempData["scid"] = Session["screenID"];
                        TempData["subscid"] = Session["ScreenNameDash"];
                        TempData["GroupName"] = Session["GroupName"];
                        TempData["SetSystemAdminScreenName"] = Session["SetSystemAdminScreenName"];
                        var myMenuList = (List<MenuListItem>)Session["menuList"];
                        var myInClause = new string[] { "DASH", "CLM_UPL", "CLM_REG", "CLM_PAY", "CLM_REC", "CLM_ENQ", "CLM_LOG" };
                        var listC = (from x in myMenuList where myInClause.Contains(x.TabId) && x.IsActive.Equals("Y") select x).ToList();

                        foreach (MenuListItem item in listC)
                        {
                            if (@item.IsHeader.Equals("Y") && @item.IsMenu.Equals("Y"))
                            {
                                if (@item.TabId == "DASH")
                                {
                                    var emclass = TempData["scid"] == null || Convert.ToString(TempData["scid"]) == "DASH" ? "arrow-active" : "";
                                    var liclass = TempData["scid"] == null || Convert.ToString(TempData["scid"]) == "DASH" ? "highlight active" : "";
                                    var b = "~" + @item.LinkAddress;
                    <li liid='@item.TabId' class="@liclass"><a anchorid='@item.TabId' url="@Url.Content(b)" href="#">
                        <i class="@item.DisplayImage"></i><span spanid='@item.TabId' submenuid='@item.MenuId'>@MenuResource.GetString(Convert.ToString(@item.MenuId))</span>
                        <em emid='@item.TabId' class="@emclass"></em></a></li>
                                }
                                else
                                {
                                    var ulidshow = TempData["scid"] != null && Convert.ToString(TempData["scid"]) == item.TabId ? "block" : "none";
                                    var liidclass = TempData["scid"] != null && Convert.ToString(TempData["scid"]) == item.TabId ? "has-sub highlight active" : "";
                                    
                    <li liid='@item.TabId'  class="@liidclass"><a anchorid='@item.TabId' href='#'><i class='@item.DisplayImage'>
                    </i><span spanid='@item.TabId' submenuid='@item.MenuId'>@MenuResource.GetString(Convert.ToString(@item.MenuId))</span>
                    </a>
                        <ul ulid='@item.TabId' style="display:@ulidshow;">
                            @foreach (var subitem in listC.Where(s => (s.MainHeaderId == item.MenuId && s.TabId == item.TabId)))
                            {
                                var emidclass = TempData["scid"] != null && Convert.ToString(TempData["scid"]) == item.TabId && Convert.ToInt32(TempData["subscid"]) == subitem.MenuId ? "arrow-active" : "";
                                var b = "~" + @subitem.LinkAddress;
                                string url = @subitem.LinkAddress;
                                string RouteString = String.Empty;
                                var values = ((RouteTable.Routes.GetRouteData(new HttpContextWrapper(((new HttpContext(((new HttpRequest(null, (new Uri(Request.Url, "..")).ToString() + url.Split('?')[0], url.Split('?')[1]))), ((new HttpResponse(new StringWriter())))))))))).Values;
                                var controller = Convert.ToString(values["controller"]);
                                var action = Convert.ToString(values["action"]);
                                UrlHelper urls = new UrlHelper(Request.RequestContext);
                                RouteString = RouteEncryptDecrypt.Encrypt(url.Split('?')[1].EndsWith("&") ? url.Split('?')[1].Substring(0, url.Split('?')[1].Length - 1).Replace("&", "?") : url.Split('?')[1].Replace("&", "?"));
                                //var menuUrl = MCAS.Web.Objects.MastersHelper.DiaryModel.GetEncryptedURl(action, controller, RouteString);
                                var menuUrl = isEncryptedParams.ToString() == "NO" ? b : MCAS.Web.Objects.MastersHelper.DiaryModel.GetEncryptedURl(action, controller, RouteString);
                               <li><a anchorid='@item.TabId' url="@Url.Content(menuUrl)" href="#" class="encryptUrl"><i class="@subitem.DisplayImage">
                                </i><span spanid='@item.TabId' submenuid='@subitem.MenuId'>@MenuResource.GetString(Convert.ToString(@subitem.MenuId))</span>
                                    <em emid='@item.TabId@subitem.MenuId' class="@emidclass"></em></a></li>
                            }
                        </ul>
                    </li>
                                }
                            }
                        }
                    }

                }
            </ul>
            @if (Session != null && Session["menuList"] != null)
            {
                string[] Group = { "A", "B" };
                string[] GroupName = { "Daily Operations", "GI Brokering" };
                for (int i = 0; i < Group.Length; i++)
                {
                <ul class="Systemmenu Sysmmenu">
                    <li liid="@Group[i]" class="has-sub"><a href='#'><i class="icon-cog text-success"></i>
                        <span>@MenuResource.GetString(Convert.ToString(@Convert.ToString(GroupName[i]).Replace(" ", "")))</span>
                        <em class="arrow"></em></a>
                        <ul ulid="@Group[i]">
                            @{
                    var myMenuList = (List<MenuListItem>)Session["menuList"];
                    var group1list = myMenuList.Where(x => x.TabId == "S_ADMN" && x.IsMenu.Equals("Y") && x.Group.Contains(Convert.ToString(Group[i])));
                    foreach (MenuListItem item in group1list)
                    {
                        var b = "~" + @item.LinkAddress;
                                <li><a url="@Url.Content(b)" href="#" aid="@item.MenuId" gid="@Group[i]" style="display:block;">
                                    <i class="icon-double-angle-right"></i><span>@MenuResource.GetString(Convert.ToString(@item.MenuId))</span><em emid="@item.MenuId" class="arrow"></em></a></li> 
                    }
                            }
                        </ul>
                    </li>
                </ul>
                }
            }
        </div>
    </aside>
    <div id="body">
        @RenderSection("featured", required: false)
        <section class="content-wrapper main-content clear-fix">@RenderBody()</section>
    </div>
    <div class="container">
        <div class="row">
            <div class="col-lg-12 text-right text-white">
                <h5>
                    Powered by <a href="http://www.ebix.com/" target="_blank">
                        <img alt="" src="@Url.Content("~/images/ebix.png")" style="vertical-align:text-top"/></a></h5>
            </div>
        </div>
    </div>
    <script type="text/javascript">

        window.rootUrl = '@Url.Content("~/")';
        $("#menu > ul > li > a").click(function () {
            $('#menu > ul > li:not([liid="' + $(this).attr("anchorid") + '"])').removeClass("active");
            $('#menu ul[ulid="' + $(this).attr("anchorid") + '"]').toggle("normal");
            $('#menu > ul > li[liid="' + $(this).attr("anchorid") + '"]').toggleClass("active");
            $('#menu > ul > li > ul:not([ulid="' + $(this).attr("anchorid") + '"])').slideUp("normal");
        });

        $("div#menu > ul.Claimmenu > li > ul > li > a").on('click', function () {
            var a, c, sPageURL = $(this).attr('url'), b = '@(Url.Action("SetScreenName", "ClaimProcessing"))';
            void 0 !== $(this).attr("anchorid") && (a = $(this).children("span").attr("submenuid")) && (c = $(this).attr('anchorid'));
            if (void 0 !== $(this).attr("anchorid")) {
                $.ajax({
                    type: "GET",
                    url: b,
                    data: {
                        ScreenNameDash: a,
                        screenid: c,
                        uid: guid()
                    },
                    dataType: "json",
                    success: function (result) {
                        window.location.href = sPageURL;
                    }
                });
            };
        });
        $("div#menu > ul.Sysmmenu > li > ul > li > a").one('click', function () {
            var a, c, sPageURL, b = '@(Url.Action("SetSystemAdminScreenName", "ClaimProcessing"))';
            void 0 !== $(this).attr("aid") && (a = $(this).attr("gid")) && (c = $(this).attr('aid')) && (sPageURL = $(this).attr('url'));
            if (void 0 !== $(this).attr("aid")) {
                $.ajax({
                    type: "GET",
                    url: b,
                    data: {
                        ScreenNameDash: a,
                        screenid: c,
                        uid: guid()
                    },
                    dataType: "json",
                    success: function (result) {
                        window.location.href = sPageURL;
                    }
                });
            };
        });


        $('a[anchorid = "DASH"]').one('click', function () {
            var a, sPageURL = $(this).attr('url'), b = '@(Url.Action("SetMenuArrow", "ClaimProcessing"))';
            void 0 !== $(this).attr("anchorid") && (a = $(this).attr("anchorid"));
            if (void 0 !== $(this).attr("anchorid")) {
                $.ajax({
                    type: "GET",
                    url: b,
                    data: {
                        screenid: a,
                        uid: guid()
                    },
                    dataType: "json",
                    success: function (result) {
                        window.location.href = sPageURL;
                    }
                });
            };

        });
        $("div#mainui > ul > ul > li > a").one('click', function () {
            var a, c, sPageURL, b = '@(Url.Action("SetSystemAdminScreenName", "ClaimProcessing"))';
            void 0 !== $(this).attr("aid") && (a = $(this).attr("gid")) && (c = $(this).attr('aid')) && (sPageURL = $(this).attr('url'));
            if (void 0 !== $(this).attr("aid")) {
                $.ajax({
                    type: "GET",
                    url: b,
                    data: {
                        ScreenNameDash: a,
                        screenid: c,
                        uid: guid()
                    },
                    dataType: "json",
                    success: function (result) {
                        window.location.href = sPageURL;
                    }
                });
            };
        }); 
           
    </script>
    <script src="@Url.Content("~/Scripts/jquery.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.datetimepicker.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/globalize/globalize.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/globalize/cultures/globalize.culture.en-GB.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/bootstrap.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery-ui-v1.10.3.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.datatables.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/daterange/daterangepicker.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jvectormap/jquery-jvectormap-1.2.2.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jvectormap/jquery-jvectormap-usa.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/custom.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery-ui-timepicker-addon.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.maskedinput.js")" type="text/javascript"></script>
    <script type="text/javascript">
        var vNoChange = "@Html.Raw(Common.NoChangeHaveBeenMade)";
        var vDateFormat = "@Html.Raw(Common.MsgDateFormat)";
        $("p").each(function () { $(this).text().toString().contains("<br>") && $(this).html($(this).text()); });

        String.prototype.contains = function (a) {
            return -1 != this.indexOf(a)
        };

        document.onkeypress = function (event) {
            event = (event || window.event);
            if (event.keyCode == 123) {
                return false;
            }
        }
        document.onmousedown = function (event) {
            event = (event || window.event);
            if (event.keyCode == 123) {
                return false;
            }
        }
        document.onkeydown = function (event) {
            event = (event || window.event);
            if (event.keyCode == 123) {
                return false;
            }
        }
        function IsTabOrBrowserClosed() {
            var validNavigation = false;
            $(document).bind('keypress', function (e) {
                if (e.keyCode == 116 || e.keyCode == 13) {
                    validNavigation = true;
                }
            });
            // User presses F5 to refresh
            $(window).keydown(function (event) {
                if (event.keyCode == 116) {
                    refresh = true;
                }
            });
            // Attach the event click for all links in the page

            $("a").bind("click", function () {
                validNavigation = true;
            });
            $("body").delegate("a.btn.btn-xs.btn-info.orgCatAccess", "click", function () {
                validNavigation = true;
            });

            // Attach the event submit for all forms in the page
            $("form").bind("submit", function () {
                validNavigation = true;
            });

            // Attach the event click for all inputs in the page
            $("input[type=submit]").bind("click", function () {
                validNavigation = true;
            });

            // check for Tab/Browser closed

            var refresh = false;  //Control variable to control refresh access
            $(window).bind('beforeunload', function () {
                if (refresh == false) {
                    if (!validNavigation) {
                        endSession();
                    }
                }
            });
            //  Insert LogOutTime
            function endSession() {
                var UserId;
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("InsertLogOutTime", "Base")',
                    success: function (resultdata) {
                    }
                });
            }
        }
        $(document).ready(function () {
            IsTabOrBrowserClosed();
        });
        var culture_ = '@culture';
    </script>
    <div class="PrintDialogue" style="overflow: hidden; overflow: auto;" />
    <div class="ViewDialogue" style="overflow: hidden; overflow: auto;" />
    <div class="GenerateDialogue" style="overflow: hidden; overflow: auto;" />
</body>
</html>
