@using MCAS.Globalisation
@using MCAS.Web.Resources
@using MCAS.Web.Objects.CommonHelper
@using MCAS.Web.Objects.Resources.ClaimProcessing;
@using MCAS.Web.Objects.Resources.Common;
@using MCAS.Globalisation;
@model IEnumerable<MCAS.Web.Objects.MastersHelper.DiaryModel>
@{
    ViewBag.Title = "ToDoList";
    Layout = null;
    var mMCASQueryString = Html.MCASQueryString(Request.QueryString);
    var mode = mMCASQueryString["mode"] == null ? "" : Convert.ToString(mMCASQueryString["mode"]);
    var claimMode = mMCASQueryString["claimMode"] == null ? "Read" : mMCASQueryString["claimMode"];
    var loginid = Convert.ToString(HttpContext.Current.Session["LoggedInUserId"]);
    var RoleCode = (new MCAS.Controllers.BaseController()).RoleCode(loginid);
    SecurityPermissions myPemissions = (SecurityPermissions)ViewData["UserPermissions"];
}
@Html.Hidden("oldgroup", 1)
<style type="text/css">
/* Sortable tables */
table.sortable thead {
    background-color:#eee;
    color:#666666;
    font-weight: bold;
    cursor: default;
}   
</style>

<script src="@Url.Content("~/Scripts/jquery-2.1.0.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/sorttable.js")" type="text/javascript"></script>
<div class="panel-body" style="padding: 10px 0px 20px 0px!important;">
    <div class="col-lg-12">
        <div class="table-responsive">
            <table class="table table-striped table-hover sortable">
                <thead>
                    <tr>
                        <th class="sorttable_nosort" style="width: 2%;">
                            <input onclick="CheckedAll(this);" class="chk" name="kk" id="select-all" type="checkbox" />
                        </th>
                        <th style="width: 18%;">
                            @DiaryTaskEditor.LISTTYPEID
                        </th>
                        <th style="width: 10%;">
                            @DiaryTaskEditor.CreatedBy
                        </th>
                        <th style="width: 10%;">
                            @DiaryTaskEditor.TOUSERID
                        </th>
                        <th style="width: 15%;">
                            @DiaryTaskEditor.STARTTIME
                        </th>
                        <th style="width: 10%;">
                            @DiaryTaskEditor.ENDTIME
                        </th>
                       <th style="width: 13%;">
                            @DiaryTaskEditor.EscalationTo
                        </th>
                        <th style="width: 10%;">
                            @DiaryTaskEditor.SUBJECTLINE
                        </th>
                        <th style="width: 10%;">
                            @DiaryTaskEditor.ReassignedDiary
                        </th>
                        <th style="width: 10%;">
                            @DiaryTaskEditor.ReassignedDate
                        </th>
                        <th class="sorttable_nosort" style="width: 10%; text-align: center" colspan="3">
                            Action
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        int trid = 1;
                        int rowmatch = 0;
                        var display = "";

                        foreach (var item in Model)
                        {
                            var Tdays = (Convert.ToDateTime(item.StartTime).Date - DateTime.Now.Date).TotalDays;
                            var colour = "";
                            var fclour = "black";
                            if (item.EndTime.ToString() != "")
                            {
                                colour = "#f9f9f9;";
                            }
                            else
                            {
                                if (Math.Round(Tdays) >= 0 && Math.Round(Tdays) <= 3)
                                {
                                    colour = "yellow;";
                                    fclour = "black";
                                }
                                else if (Math.Round(Tdays) < 0)
                                {
                                    colour = "red;";
                                    fclour = "#FFFFFF !important";
                                }
                            }
                            rowmatch += 1;
                            var dd = item.ReassignedDiaryDate == null ? "" : item.ReassignedDiaryDate.ToString().Substring(0, 10);
                        <tr group='@(trid)' style="display:@display;">
                            <td style="color:@fclour;background-color:@colour">
                                @if ((loginid == @item.Uname) || (RoleCode == "COSP") || (RoleCode == "SP"))
                                {
                                    if (myPemissions.SplPermission)
                                    {
                                    <input type="checkbox" class="chk ignoreAlert" value="@item.ListId" SNO="@item.AssignTo" name="DiaryToReassignment"/>
                                    }
                                }
                            </td>
                            <td onclick="showDiary('@Url.ActionEncoded("DiaryTaskEditor", "ClaimProcessing", new { PolicyId = item.PolicyId, ClaimId = item.AccidentId, ListId = item.ListId, AccidentClaimId = item.AccidentId, claimMode = @claimMode, mode = @mode })')" style="color:@fclour;background-color:@colour">
                                @Html.DisplayFor(modelItem => item.ListType)
                            </td>
                            <td style="color:@fclour;background-color:@colour">
                                @Html.DisplayFor(modelItem => item.CreatedBy)
                            </td>
                            <td style="color:@fclour;background-color:@colour">
                                @Html.DisplayFor(modelItem => item.ToUserId)
                            </td>
                            <td style="color:@fclour;background-color:@colour">
                                @Html.DisplayFor(modelItem => item.StartTime)
                            </td>
                            <td style="color:@fclour;background-color:@colour">
                                @Html.DisplayFor(modelItem => item.EndTime)
                            </td>
                            <td style="color:@fclour;background-color:@colour" class="tableRowForeColor">
                                @Html.DisplayFor(modelItem => item.EscalationTo)
                            </td>
                            <td style="text-transform: capitalize; color:@fclour;background-color:@colour">
                                @Html.DisplayFor(modelItem => item.SubjectLine)
                            </td>
                            <td style="color:@fclour;background-color:@colour">
                                @Html.DisplayFor(modelItem => item.ReassignedDiary)
                            </td>
                            <td style="color:@fclour;background-color:@colour">
                                @dd
                            </td>
                            <td  style="color:@fclour;background-color:@colour">
                                @if (@loginid == @item.Uname)
                                {
                                    if (@myPemissions.SplPermission)
                                    {
                                        if (@item.EndTime.ToString() == "")
                                        {   
                                    @Html.EncodedActionLink(Common.Edit, "DiaryTaskEditor", "ClaimProcessing", new { PolicyId = item.PolicyId, ClaimId = item.AccidentId, ListId = item.ListId, AccidentClaimId = item.AccidentId, claimMode = @claimMode, mode = @mode, ViewMode = "Edit" }, new { @class = "btn btn-xs btn-info" })
                                        }
                                    }
                                }
                            </td>
                            <td  style="color:@fclour;background-color:@colour">
                                @Html.EncodedActionLink(Common.Select, "DiaryTaskEditor","ClaimProcessing", new { PolicyId = item.PolicyId, ClaimId = item.AccidentId, ListId = item.ListId, AccidentClaimId = item.AccidentId, claimMode = @claimMode, mode = @mode, ViewMode = "ReadOnly" }, new { @class = "btn btn-xs btn-info" })
                            </td>
                        </tr>
                        
                                if (rowmatch > 9)
                                {
                                    rowmatch = 0;
                                    trid += 1;
                                    display = "none";
                                }
                        }}
                </tbody>
            </table>
        </div>
    </div>
    @{
        decimal count = (decimal)Model.Count() / 10;
        int totalcount = (int)Math.Ceiling(count);
        <div class="row">
            <div class="clearfix igr col-md-1 text-center">
            </div>
            <div class="col-lg-10 text-center">
                <ul class="pagination no-margin">
                    <li id="liprevious" onclick="Pagination('liprevious');"><a href="#">«</a> </li>
                    @for (int j = 0; j < totalcount; j++)
                    {
                        if (j == 0)
                        { 
                        <li id="li@(j + 1)" class="active" onclick="Pagination('li@(j + 1)');"><a href="#">@(j + 1)</a> </li>
                        }
                        else
                        {
                            if (j > 4)
                            {
                        <li id="li@(j + 1)" style="display: none;" onclick="Pagination('li@(j + 1)');" ><a href="#">@(j + 1)</a></li>
                            }
                            else
                            { 
                        <li id="li@(j + 1)" onclick="Pagination('li@(j + 1)');" ><a href="#">@(j + 1)</a></li>
                            }
                        }
                    }
                    <li id="linext" onclick="Pagination('linext');"><a href="#">»</a> </li>
                </ul>
            </div>
            <div class="clearfix igr col-md-1 text-center">
            </div>
        </div>
    }
</div>
@*    }
</div>*@
<script type="text/javascript">


    function getValueUsingClass() {
        var chkArray = [];
        $(".chk:checked").each(function () {
            if (this.id != "select-all")
                chkArray.push($(this).val());
        });
        var selected;
        selected = chkArray.join(',') + ",";
        selected = selected.slice(0, -1);
        if ((selected.length > 0)) {
            return selected;
        } else {
            alert("Please select at least one of the checkbox");
            return null;
        }
    }
    function showDiary(url) {
        window.location.href = url;
    }

    function CheckedAll(elem) {
        $(":checkbox").each(function () {
            this.checked = elem.checked ? true : false;
        });
    };
    function Pagination(id) {
        var totalcount = Math.ceil(parseFloat('@Model.Count()' / 10));
        if (id == "linext") {
            id = "li" + (parseInt($("#oldgroup").val()) == totalcount ? totalcount : (parseInt($("#oldgroup").val()) + 1));
        }
        if (id == "liprevious") {
            id = "li" + (parseInt($("#oldgroup").val()) == 1 ? 1 : (parseInt($("#oldgroup").val()) - 1));
        }
        var oldgroup_id = $("#oldgroup").val();
        var tabid_id = id.replace("li", "");
        $("#oldgroup").val(tabid_id);
        $("table tr[group=" + oldgroup_id + "]").css("display", "none");
        $("table tr[group=" + tabid_id + "]").css("display", "");
        $('.active').removeClass();
        $('#' + id).addClass("active");

        if (totalcount > 0) {
            for (i = 1; i <= totalcount; i++) {
                $("#li" + i).css("display", "none");
            }
            if (tabid_id > 1) {

                if (parseFloat(tabid_id) + 2 <= parseFloat(totalcount)) {
                    for (i = parseFloat(tabid_id == 2 ? 3 : tabid_id) - 2; i <= parseFloat(tabid_id == 2 ? 3 : tabid_id) + 2; i++) {
                        if (i <= totalcount) {
                            $("#li" + i).css("display", "");
                        }
                    }
                }
                else {
                    for (i = parseFloat(totalcount) - 4; i <= parseFloat(totalcount); i++) {

                        $("#li" + i).css("display", "");
                    }
                }
            }
            else {
                for (i = parseFloat(1); i <= parseFloat(5); i++) {
                    $("#li" + i).css("display", "");
                }
            }
        }
        setTabActive('ToDoTab');
    };

    sorttable.sort_alpha = function (a, b) { return a[0].localeCompare(b[0]); }
</script>
