@model IEnumerable<MCAS.Web.Objects.ClaimObjectHelper.ClaimAttachmentsModel>
@using MCAS.Web.Objects.Resources.ClaimProcessing;
@using MCAS.Web.Objects.Resources.Common;
@using MCAS.Globalisation;
@using MCAS.Web.Objects.CommonHelper
@using MCAS.Globalisation
@{
    @Html.Hidden("oldgroup", 1)
    ViewBag.Title = "ClaimAttachmentsList";
    var mMCASQueryString = Html.MCASQueryString(Request.QueryString);
    Layout = null;
    var policyid = mMCASQueryString["PolicyId"];
    var claimMode = mMCASQueryString["claimMode"] == null ? "Read" : mMCASQueryString["claimMode"];
    var accidentClaimIdNew = mMCASQueryString["AccidentClaimId"];
    var str = Convert.ToString(TempData["folderoption"]);
    str = str == "" ? str : str.Substring(1, str.Length - 1);
    string[] str1 = str.Split('~');
    var val1 = Convert.ToString(TempData["folderoption"]).Where(val => val.ToString() != "").ToArray();
    var writeper = TempData["UserPermissions.Write"] == null ? false : Convert.ToBoolean(TempData["UserPermissions.Write"]);
    SecurityPermissions myPemissions = (SecurityPermissions)ViewData["UserPermissions"];
    var extrapar = TempData["extrapar"] == null ? "" : Convert.ToString(TempData["extrapar"]);
    var claimId1 = @Model.Count() != 0 ? @Model.FirstOrDefault().ClaimId : mMCASQueryString["ClaimId"] == null ? 0 : Convert.ToInt32(mMCASQueryString["ClaimId"]);
    string[] delper1 = Convert.ToString(TempData["delper"]).Split('~').Where(val => val.ToString() != "").ToArray();
    string[] readper1 = Convert.ToString(TempData["readper"]).Split('~').Where(val => val.ToString() != "").ToArray();
    string[] writeper1 = Convert.ToString(TempData["writeper"]).Split('~').Where(val => val.ToString() != "").ToArray();
    var lebmode = mMCASQueryString["mode"] != null ? Convert.ToString(mMCASQueryString["mode"]) : "";
}
<style type="text/css">
/* Sortable tables */
table.sortable thead {
    background-color:#eee;
    color:#666666;
    font-weight: bold;
    cursor: default;
}   
</style>

<script src="@Url.Content("~/Scripts/sorttable.js")" type="text/javascript"></script>

<div class="panel-body">
    <div class="col-lg-12">
        <div class="table-responsive">
            <table class="table table-striped table-hover sortable" style="table-layout: fixed;">
                <thead>
                    <tr>
                        <th style="width: 2%">
                        </th>
                        <th style="width: 18%; padding-left: 9px">
                            @ClaimAttachmentsEditor.AttachEntityType
                        </th>
                        <th style="width: 12%; padding-left: 9px">
                            @{
                                if ((Convert.ToString(Session["OrganisationType"]).ToLower() == "tx") || (Convert.ToString(Session["OrganisationType"]).ToLower() == "pc"))
                                {
                                @ClaimAttachmentsEditor.TPVehicleNo
                                }
                                else
                                { 
                                @ClaimAttachmentsEditor.ClaimantName
                                }
                            }
                        </th>
                        <th style="width: 15%; padding-left: 9px">
                            @ClaimAttachmentsEditor.FileName
                        </th>
                        <th style="width: 8%; padding-left: 9px">
                            @ClaimAttachmentsEditor.FileType
                        </th>
                        <th style="width: 15%; padding-left: 9px">
                            @ClaimAttachmentsEditor.DateTimeAttached
                        </th>
                        <th style="width: 20%; padding-left: 9px">
                            @ClaimAttachmentsEditor.AttachFileDesc
                        </th>
                        @if (@myPemissions.Read)
                        {
                            <th class="sorttable_nosort" style="width: 10%">
                                @Common.Select
                            </th>
                        }
                    </tr>
                </thead>
                <tbody>
                    @{
                        int trid = 1;
                        int delc = 0;
                        int rowmatch = 0;
                        var display = "";
                        foreach (var item in Model)
                        {
                            var newstr = String.Join("", item.AttachType.Where(c => !char.IsWhiteSpace(c)));
                            var time = item.AttachDateTime.ToString();

                            rowmatch += 1;
                            var permission = "";
                            if (str1.Contains(newstr) || readper1.Contains(newstr))
                            {
                                permission = "Write";
                            }

                        <tr group='@(trid)' style="display:@display;">
                            <td style="word-wrap: break-word;">
                                <input type="checkbox" class="chk" value="@item.AttachId" name="AttachDelete"/>
                            </td>
                            <td style="word-wrap: break-word;">
                                @Html.DisplayFor(modelItem => item.AttachType)
                            </td>
                            <td style="word-wrap: break-word;">
                                @Html.DisplayFor(modelItem => item.ClaimantName)
                            </td>
                            <td style="word-wrap: break-word;">
                                @Html.DisplayFor(modelItem => item.AttachFileName)
                            </td>
                            <td style="word-wrap: break-word;">
                                @Html.DisplayFor(modelItem => item.AttachFileType)
                            </td>
                            <td style="word-wrap: break-word;">
                                @time
                            </td>
                            <td style="word-wrap: break-word;">
                                @Html.DisplayFor(modelItem => item.AttachFileDesc)
                            </td>
                            <td style="word-wrap: break-word;">
                                @Html.EncodedActionLink(Common.Select, "ClaimAttachmentsEditor", "ClaimProcessing", new { PolicyId = @policyid, ClaimId = item.AttachEntId, AttachId = item.AttachId, AccidentClaimId = @accidentClaimIdNew, claimMode = @claimMode, mode = @lebmode, permission = permission }, new { @class = "btn btn-xs btn-info DonotDiableControl" })
                            </td>
                        </tr>
                            if (rowmatch > 9)
                            {
                                rowmatch = 0;
                                trid += 1;
                                display = "none";
                            }
                        }}
                </tbody>
            </table>
        </div>
    </div>
    @{
        decimal count = (decimal)Model.Count() / 10;
        int totalcount = (int)Math.Ceiling(count);
        <div class="row">
            <div class="col-lg-1 text-center">
                <div class="form-group">
                    <a class="btn btn-info" id="Previous">@Common.Previous</a>
                </div>
            </div>
            <div class="col-lg-10 text-center">
                <ul class="pagination no-margin">
                    <li id="liprevious" onclick="Pagination('liprevious');"><a href="#">«</a> </li>
                    @for (int j = 0; j < totalcount; j++)
                    {
                        if (j == 0)
                        { 
                        <li id="li@(j + 1)" class="active" onclick="Pagination('li@(j + 1)');"><a href="#">@(j + 1)</a>
                        </li>
                        }
                        else
                        {
                            if (j > 4)
                            {
                        <li id="li@(j + 1)" style="display: none;" onclick="Pagination('li@(j + 1)');" ><a
                            href="#">@(j + 1)</a></li>
                            }
                            else
                            { 
                        <li id="li@(j + 1)" onclick="Pagination('li@(j + 1)');" ><a href="#">@(j + 1)</a></li>
                            }
                        }
                    }
                    <li id="linext" onclick="Pagination('linext');"><a href="#">»</a> </li>
                </ul>
            </div>
            <div class="col-lg-1 text-center">
                <div class="form-group">
                    <a class="btn btn-info" id="Next">@Common.Next</a>
                </div>
            </div>
        </div>
                      
                
    }
    <div class="row">
        <div class="col-lg-1 text-left">
            <div class="form-group">
                @if (@myPemissions.Write)
                { 
                    @Html.EncodedActionLink(ClaimAttachmentsEditor.AddAttachments, "ClaimAttachmentsEditor", "ClaimProcessing", new { PolicyId = @policyid, ClaimId = @claimId1, AccidentClaimId = @accidentClaimIdNew, claimMode = @claimMode, @Viewmode = "AddNewAttachment", mode = @lebmode }, new { @id = "NewNote", @class = "btn btn-info" })                    
                }
            </div>
        </div>
        <div class="col-lg-10 text-left">
        </div>
        <div class="col-lg-1 text-right">
            <div class="form-group">
                <div class="col-lg-1 text-right">
                    @if (@myPemissions.Delete)
                    {
                        if (delc != 0)
                        {
                        <input type="button" class="btn btn-info" id="buttonClass" value="Delete " />
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        setTabActive('AttachmentsTab');
        $("#chkall").change(function () {
            if ($(this).is(':checked')) {
                $('input[type=checkbox]').each(function () {
                    $(this).prop('checked', true);
                });
            }
            else {
                $('input[type=checkbox]').each(function () {
                    $(this).removeAttr("checked");
                });

            }
        });
    });
</script>
<script type="text/javascript">

    function Pagination(id) {

        var totalcount = Math.ceil(parseFloat('@Model.Count()' / 10));
        if (id == "linext") {
            id = "li" + (parseInt($("#oldgroup").val()) == totalcount ? totalcount : (parseInt($("#oldgroup").val()) + 1));
        }
        if (id == "liprevious") {
            id = "li" + (parseInt($("#oldgroup").val()) == 1 ? 1 : (parseInt($("#oldgroup").val()) - 1));
        }
        var oldgroup_id = $("#oldgroup").val();
        var tabid_id = id.replace("li", "");
        $("#oldgroup").val(tabid_id);
        $("table tr[group=" + oldgroup_id + "]").css("display", "none");
        $("table tr[group=" + tabid_id + "]").css("display", "");
        $('.active').removeClass();
        $('#' + id).addClass("active");

        if (totalcount > 0) {
            for (i = 1; i <= totalcount; i++) {
                $("#li" + i).css("display", "none");
            }
            if (tabid_id > 1) {

                if (parseFloat(tabid_id) + 2 <= parseFloat(totalcount)) {
                    for (i = parseFloat(tabid_id == 2 ? 3 : tabid_id) - 2; i <= parseFloat(tabid_id == 2 ? 3 : tabid_id) + 2; i++) {
                        if (i <= totalcount) {
                            $("#li" + i).css("display", "");
                        }
                    }
                }
                else {
                    for (i = parseFloat(totalcount) - 4; i <= parseFloat(totalcount); i++) {

                        $("#li" + i).css("display", "");
                    }
                }
            }
            else {
                for (i = parseFloat(1); i <= parseFloat(5); i++) {
                    $("#li" + i).css("display", "");
                }
            }
        }
        setTabActive('AttachmentsTab');
    }

    sorttable.sort_alpha = function (a, b) { return a[0].localeCompare(b[0]); }
</script>
<script type="text/javascript">
    $(function () {
        $("#buttonClass").click(function () {
            getValueUsingClass();
        });

        function getValueUsingClass() {
            var chkArray = [];
            $(".chk:checked").each(function () {
                chkArray.push($(this).val());
            });
            /* we join the array separated by the comma */
            var selected;
            selected = chkArray.join(',') + ",";
            selected = selected.slice(0, -1);
            if ((selected.length > 0)) {
                var didconfirm = confirm("Are you sure you want to delete ?");
                if (didconfirm == true) {
                    $.ajax({
                        url: '@(Url.ActionEncoded("DeleteAttach"))',
                        type: "POST",
                        data: { AttachmentToDelete: selected },
                        dataType: "json",
                        success: function (data) {
                            alert("Records deleted Successfully");
                            window.document.location.href = window.document.location.href;

                        },
                        error: function (request) {
                            alert("Error:" + request.responseText);

                        }
                    });
                }

            } else {
                alert("Please select at least one of the checkbox.");
            }
        }
    })

    function showDiary(url) {

        window.location.href = url;

    }
    function CheckedAll(elem) {
        if (elem.checked) {
            // Iterate each checkbox
            $(":checkbox").each(function () {
                this.checked = true;
            });
        }
        else {
            $(":checkbox").each(function () {
                this.checked = false;
            });
        }
    }

</script>
