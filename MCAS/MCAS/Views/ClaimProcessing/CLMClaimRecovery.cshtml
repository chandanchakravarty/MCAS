@model MCAS.Web.Objects.MastersHelper.CLMClaimRecoveryModel
@{
Layout = null;
var ClaimId = Request.QueryString["ClaimId"];
}
<link href="@Url.Content("~/Content/jquery-ui.css")" rel="Stylesheet" media="screen" />
<style type="text/css">
   div.ui-dialog.ui-widget.ui-widget-content.ui-corner-all.alert.ui-draggable, div.ui-dialog.ui-widget.ui-widget-content.ui-corner-all.alert.ui-draggable
   {
   top: 140px !important;
   }
   #ajaxSpinnerContainer
   {
   height: 11px;
   }
   #ajaxSpinnerImage
   {
   display: none;
   }
   .ajax-loader
   {
   position: absolute;
   left: 50%;
   top: 50%;
   margin-left: -32px;
   margin-top: -32px;
   display: block;
   z-index: 999999999999999;
   }
   [type="text"]
   {
   text-transform: capitalize;
   }
   label {
    font: bold 12px Arial !important;
    color : #717171;
     }
</style>
<script src='@Url.Content("~/Scripts/jquery-1.8.0.js")' type="text/javascript"></script>
<script src='@Url.Content("~/Scripts/jquery-ui-1.8.23.js")' type="text/javascript"></script>
@using (Html.BeginForm("CLMClaimRecovery", "ClaimProcessing", FormMethod.Post, new { role = "form", @class = "form-horizontal", id = "CLMClaimRecovery", name = "CLMClaimRecovery" }))
{      
<div class="row">
   <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
      <div class="panel panel-info">
         <div class="panel-heading clearfix">
            <i class="icon-check-sign"></i>
            <h3 class="panel-title">
               Claim Recovery
            </h3>
         </div>
         <div id="Result" style="color: Red; font-weight: bold; display: none;" class="row has-error">
            <p align="center" id="result1">
               Saved Successfully
            </p>
         </div>
         <div class="row" style="padding-top: .3cm;">
            <div>
               <div class="clearfix igr col-md-11" style="margin-left: 60px;">
                  <div class="col-md-4">
                     <label for="inputGroupCode" class="control-label">
                     Recovery From&nbsp;<span class="text-danger">*</span></label>
                  </div>
                  <div class="col-md-5">
                     @Html.TextBoxFor(m => m.UserName, new { id = "UserName", TabIndex = 1, @class = "form-control" })
                  </div>
               </div>
            </div>
         </div>
         <div class="row" style="padding-top: .3cm;">
            <div>
               <div class="clearfix igr col-md-11" style="margin-left: 60px;">
                  <div class="col-md-4">
                     <label for="inputGroupCode">
                     Address&nbsp;<span class="text-danger">*</span></label>
                  </div>
                  <div class="col-md-7">
                     @Html.TextBoxFor(m => m.Address, new { id = "Address", TabIndex = 2, @class = "form-control" })
                  </div>
               </div>
            </div>
         </div>
         <div id="ajaxSpinnerContainer">
            <img alt="" src="../../Images/ajax-loader.gif" id="ajaxSpinnerImage" class="ajax-loader" />
         </div>
         <div class="row" style="padding-top: .3cm;">
            <div>
               <div class="clearfix igr col-md-11" style="margin-left: 60px;">
                  <div class="col-md-4">
                     <label for="inputGroupCode">
                     Reason For Recovery&nbsp;<span class="text-danger">*</span></label>
                  </div>
                  <div class="col-md-7">
                     @Html.TextBoxFor(m => m.RecoveryReason, new { id = "RecoveryReason", TabIndex = 3, @class = "form-control" })
                  </div>
               </div>
            </div>
         </div>
         <div class="row" style="padding-top: .3cm;">
            <div>
               <div class="clearfix igr col-md-11" style="margin-left: 60px;">
                  <div class="col-md-4">
                     <label for="inputGroupCode">
                     Currency&nbsp;<span class="text-danger">*</span></label>
                  </div>
                  <div class="col-md-3" style="padding-right: 32px;">
                     @Html.DropDownListFor(m => m.CurrCode, new SelectList(Model.CurrCode_List, "CurrencyCode", "Description", "SGD"), new { id = "CurrCode", TabIndex = 4, @class = "form-control" })
                  </div>
                  <div class="col-md-2" style="padding-left: 0px; width: 80px;">
                     <label for="inputGroupCode">
                     Ex.Rate</label>
                  </div>
                  <div class="col-md-4" style="padding-left: 0px; width: 150px;">
                     @Html.TextBoxFor(m => m.ExchangeRate, new { id = "ExchangeRate", @format="" , TabIndex = 5, @class = "form-control", @Value = "1.00" })
                  </div>
               </div>
            </div>
         </div>
         <div class="row" style="padding-top: .3cm;">
            <div>
               <div class="clearfix igr col-md-11" style="margin-left: 60px;">
                  <div class="col-md-4">
                     <label for="inputGroupCode">
                     Amount(Local Currency)&nbsp;<span class="text-danger">*</span></label>
                  </div>
                  <div class="col-md-5">
                     @Html.TextBoxFor(m => m.LocalCurrAmt, new { id = "LocalCurrAmt", format="", numlen="11" ,TabIndex = 6, @class = "form-control", @Value = "0.00" })
                  </div>
               </div>
            </div>
         </div>
         <div class="row" style="padding-top: .3cm;">
            <div>
               <div class="clearfix igr col-md-11" style="margin-left: 60px;">
                  <div class="col-md-4">
                     <label for="inputGroupCode">
                     Status&nbsp;<span class="text-danger">*</span></label>
                  </div>
                  <div class="col-md-5">
                     @Html.DropDownListFor(m => m.Status, new SelectList(Model.Status_List, "StatusList_Id", "StatusList_Name", "Pending"), new { id = "Status", TabIndex = 7, @class = "form-control" })
                  </div>
               </div>
            </div>
         </div>
         <div id="PaymentDet" class="row" style="padding-top: .3cm; display: none;">
            <div>
               <div class="clearfix igr col-md-11" style="margin-left: 60px;">
                  <div class="col-md-4">
                     <label for="inputGroupCode">
                     Payment Details&nbsp;<span class="text-danger">*</span></label>
                  </div>
                  <div class="col-md-7">
                     @Html.TextBoxFor(m => m.PaymentDetails, new { id = "PaymentDetails", TabIndex = 8, @class = "form-control" })
                  </div>
               </div>
            </div>
         </div>
         <div class="row" style="padding-top: .3cm;">
            <div class="clearfix igr col-md-12 text-center">
               <label class="btn btn-info" id="labelbtnSave" tabindex="9">
               Save</label>
               <label id="labelbtnClear" class="btn btn-info" tabindex="10" >
               Clear</label>
               <label id="labelbtnCancel" class="btn btn-info" tabindex="11" >
               Cancel</label>
            </div>
         </div>
      </div>
   </div>
</div>
}
<script type="text/javascript">
    var CtrlN = {
        UserName: function () {
            return "Recovery From "
        },
        Address: function () {
            return "Address"
        },
        RecoveryReason: function () {
            return "Reason For Recovery"
        },
        CurrCode: function () {
            return "Currency"
        },
        LocalCurrAmt: function () {
            return "Amount(Local Currency) "
        },
        Status: function () {
            return "Status"
        },
        PaymentDetails: function () {
            return "Payment Details"
        }
    };
    $(document).ready(function () {
        $(document).on("focus", ":input", function () {
            $(this).attr("autocomplete", "off")
        });
        $("input[type=text]").css("cursor", "pointer").change(function () {
            $("#Result").hide()
        });
        $("select").change(function () {
            $("#Result").hide()
        });
        $("#Status").change(function () {
            1 == $("#Status").val() ? $("#PaymentDet").show() : $("#PaymentDet").hide()
        });
        $("#Address,#RecoveryReason,#PaymentDetails,#UserName").keypress(function () {
            var a = $("#" + this.id).val().length;
            if ("Address" == this.id) return 500 < parseInt(a) ? !1 : !0;
            if (parseInt("UserName" == this.id ? "25" : "50") > parseInt(a)) {
                $(this);
                var b = b || event,
           a = 32 == b.keyCode ? !0 : /[a-z]+$/i.test(String.fromCharCode(b.keyCode || b.which));
                return !1 == a ? !1 : a
            }
            return !1
        });
//        $("#ExchangeRate,#LocalCurrAmt").keypress(function () {
//            var t = $(this).id;
//            var n = event.type;
//            var r = n.which ? n.which : event.keyCode;
//            var a = $("#" + this.id).val().length;
//            if ($("#" + this.id).val().charAt(a - 3) == ".") {
//                return false;
//            }
//            else {
//                if (12 > parseInt(a)) {
//                    if (r != 46 && r > 31 && (r < 48 || r > 57)) {
//                        $("#" + this.id).focus();
//                        return false
//                    } else {
//                        return true
//                    }
//                }
//                else {
//                    return false;
//                }
//            };
//        });
        $("#LocalCurrAmt,#ExchangeRate").change(function () {
            var a = "#" + this.id;
            $(a).val("" == $(a).val() ? $(a).val() : $(a).val().contains(".") ? $(a).val() : numberWithCommas(parseInt($(a).val())) + ".00")
        });
        $("#CurrCode").change(function () {
            var a = $(this).val();
            $.ajax({
                type: "POST",
                url: '@Url.Action("ExpensesType", "ClaimProcessing")',
                data: {
                    CurrencyCode: a
                },
                success: function (a) {
                    $("#ExchangeRate").val(dotwoplace(a));
                    $("#Result").hide();
                    $("#ajaxSpinnerImage").hide()
                },
                error: function (a) {
                    alert("error : " + a);
                    $("#Result").hide();
                    $("#ajaxSpinnerImage").hide()
                }
            })
        });


        $("#labelbtnSave").click(function () {
            for (var arr = [], arr = ["UserName", "Address", "RecoveryReason", "LocalCurrAmt", "PaymentDetails"], i = 0; i < arr.length; i++) if ("PaymentDetails" != arr[i]) {
                var id = arr[i],
       id1 = "#" + id;
                if ("" == $(id1).val().replace(/0/g, "").replace(/\./g, " ").replace(/ /g, "")) return alert("Please Enter " + CtrlN[id]()), $(id1).focus(), !1;
                if ("1" == $("#Status").val() && "" == $("#PaymentDetails").val().replace(/0/g, "").replace(/\./g, " ")) return alert("Please Enter " + CtrlN.PaymentDetails()), $("#PaymentDetails").focus(), !1
            }
            if ("" == $("#CurrCode").val() || "0" == $("#CurrCode").val()) return alert("Please Select " + CtrlN.CurrCode()), $("#CurrCode").focus(), !1;
            else $("#ajaxSpinnerImage").show(), $.ajax({
                type: "POST",
                url: '@Url.Action("CLMClaimRecoverySave", "ClaimProcessing")',
                data: {
                    UserName: $("#UserName").val(),
                    Address: $("#Address").val(),
                    RecoveryReason: $("#RecoveryReason").val(),
                    CurrCode: $("#CurrCode").val(),
                    ClaimID: "@ClaimId",
                    ExchangeRate: $("#ExchangeRate").val(),
                    LocalCurrAmt: removecomma($("#LocalCurrAmt").val()),
                    Status: $("#Status").val(),
                    PaymentDetails: $("#PaymentDetails").val()
                },
                success: function (a) {
                    $("#Result").show();
                    $("#ajaxSpinnerImage").hide()
                },
                error: function (a) {
                    alert("error : " + a);
                    $("#Result").hide();
                    $("#ajaxSpinnerImage").hide()
                }
            });
        });
        $("#labelbtnClear").click(function () {
            $("select").prop("selectedIndex", 0);
            $("input[type=text]").val("");
            $('#CurrCode').val("SGD");
            $('#Status').val("Pending");
            $('#ExchangeRate').val("1.00");
            $('#LocalCurrAmt').val("0.00");
            $('#Result').hide();
            $('#PaymentDet').hide();
            $('#UserName').focus();
        });
        $("#labelbtnCancel").click(function () {
            $('div.ui-dialog.ui-widget.ui-widget-content.ui-corner-all.ui-front.alert.ui-draggable').remove();
            $('div.ui-dialog.ui-widget.ui-widget-content.ui-corner-all.alert.ui-draggable').remove();
        });
        $("#AccidentTab,#ClaimTab,#ThirdPartyTab,#NotesTab,#ReserveTab,#TransactionsTab,#AttachmentsTab,#ToDoTab,#PaymentEditor").removeClass("active");
        $("#PaymentEditor").addClass("active");
    });


    function getQueryVariable(a) {
        for (var e = "@MCAS.Web.Objects.CommonHelper.MenuListItem.ClaimTabs.GetQueryStringVal()".replace(/amp;/ig, "").split("&"), d = 0; d < e.length; d++) {
            var b = e[d].split("=");
            if (b[0] == a) return b[1]
        }
    };
    function numberWithCommas(a) {
        a = a.toString();
        for (var b = /(-?\d+)(\d{3})/; b.test(a); ) a = a.replace(b, "$1,$2");
        return a
    };
    function dotwoplace(a) {
        if (null != a || "" != a) {
            if (a = a.split("."), 2 == a.length) return a[0] + "." + a[1].substring(0, 2)
        } else return ""
    };

    function removecomma(a) {
        return parseInt(a.substring(0, a.indexOf(".")).replace(/,/g, ""))
    };
    String.prototype.contains = function (a) {
        return -1 != this.indexOf(a)
    };
    function setTabActive(elementid) {
        $('#myTab1').children().each(function (el, value) {
            if (value.id == elementid)
                $(value).removeClass("active").addClass("active");
            else
                $(value).removeClass("active");
        }
       );
    }
    setTabActive('PaymentEditor');          
</script>