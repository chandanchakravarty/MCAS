@using MCAS.Web.Objects.Resources.ClaimProcessing;
@using MCAS.Web.Objects.Resources.Common;
@using MCAS.Web.Objects.CommonHelper;
@using System;
@using System.Globalization;
@using MCAS.Web.Objects.Resources.ClaimProcessing;
@using MCAS.Web.Objects.Resources.Common
@using MCAS.Globalisation;
@model MCAS.Web.Objects.ClaimObjectHelper.ClaimAccidentDetailsModel
@{
    ViewBag.Title = "ClaimAccidentEditor";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var mMCASQueryString = Html.MCASQueryString(Request.QueryString);
    var caller = mMCASQueryString["claimMode"] != null ? Convert.ToString(mMCASQueryString["claimMode"]) : "";
    var pagemode = mMCASQueryString["mode"] != null ? Convert.ToString(mMCASQueryString["mode"]) : "";
    var accidentClaimIdNew = Model.AccidentClaimId != null ? Convert.ToString(Model.AccidentClaimId) : "0";
    var SubMenu = !string.IsNullOrEmpty(Convert.ToString((HttpContext.Current.Session["ScreenNameDash"]))) ? MenuListItem.ClaimTabs.GetClaimLabel(Convert.ToString((HttpContext.Current.Session["ScreenNameDash"]))) : ClaimAccident.ResourceManager.GetString(MenuListItem.ClaimTabs.SubMenuString(@caller, @accidentClaimIdNew, @pagemode, ""));
    var policyid = mMCASQueryString["PolicyId"];
    var accidentClaimId = Model.AccidentClaimId == null ? "0" : Convert.ToString(Model.AccidentClaimId);
    var iscompleted = @Model.IsComplete;
    var isreported = @Model.IsReported;
    var isreadonly = @Model.ReadOnly;
    SecurityPermissions myPemissions = (SecurityPermissions)ViewData["UserPermissions"];
    var clmstate = mMCASQueryString["clmstatus"] != null ? Convert.ToString(mMCASQueryString["clmstatus"]) : "";
    var busvalcheck = Model.Organization == null ? "N" : "Y";
    string ListTrain = String.Join(",", (from l in Model.OrgCatList where l.Description.EndsWith("-Train") select l.OrgType).ToArray().Select(x => x.ToString()).ToArray());
    var AccidentDate = Model.AccidentDate == null ? "" : Model.AccidentDate.Value.ToString(System.Configuration.ConfigurationManager.AppSettings["DateFormat"]);
    var ReportedDate = Model.ReportedDate == null ? "" : Model.ReportedDate.Value.ToString(System.Configuration.ConfigurationManager.AppSettings["DateFormat"]);
    var DateResigned = Model.DateResigned == null ? "" : Model.DateResigned.Value.ToString(System.Configuration.ConfigurationManager.AppSettings["DateFormat"]);
    var DateJoined = Model.DateJoined == null ? "" : Model.DateJoined.Value.ToString(System.Configuration.ConfigurationManager.AppSettings["DateFormat"]);
    var DateofFinding = Model.DateofFinding == null ? "" : Model.DateofFinding.Value.ToString(System.Configuration.ConfigurationManager.AppSettings["DateFormat"]);
}
<script src="@Url.Content("~/Scripts/jquery-2.1.0.min.js")" type="text/javascript"></script>
<div class="dashboard-wrapper">
    <div class="container">
        <!-- Page title start -->
        <div class="page-title" id="reg">
            <div class="col-lg-12" id="reg2" style="background-color: white; position: fixed;
                z-index: 1;">
                <h2>@ClaimAccident.ResourceManager.GetString(MenuListItem.ClaimTabs.PreBreadCrumbString(@pagemode))</h2>
                <ul class="breadcrumb">
                    <li>@SubMenu</li>
                    <li>@ClaimAccident.Accident</li>
                </ul>
            </div>
            <div style="position: relative!important">
                @Html.Action("_ClaimDetails", "ClaimProcessing", new { PolicyId = @policyid, AccidentDetailId = @accidentClaimIdNew })
            </div>
        </div>
        <hr />
        <div class="row" id="toprow">
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                <div class="panel panel-info" id="mainfieldset">
                    @if (Convert.ToBoolean(TempData["AccidentPermission"]))
                    {
                        <div class="panel-heading clearfix">
                            <i class="icon-check-sign"></i>
                            <h3 class="panel-title">
                                @ClaimAccident.ClaimAccidentEntry</h3>
                        </div>
                        <div class="panel-body">
                            @using (Html.BeginForm("ClaimAccidentEditor", "ClaimProcessing", new { PolicyId = @policyid, mode = @pagemode }, FormMethod.Post, new { role = "form", @class = "form-horizontal", id = "claimaccidententryform", name = "claimaccidententryform" }))
                            {
                                @Html.ValidationSummary(true) 
                                <div style="color: Red; font-weight: bold;" class="has-error" id="error">
                                    <p align="center">
                                        @if (TempData["notice"] != null)
                                        {
                                            @TempData["notice"]
                                        }
                                    </p>
                                </div>
                                <div style="color: Red; font-weight: bold;" class="has-error" id="error">
                                    <p align="center" id="SuccessMessage">
                                        @if (@ViewData["SuccessMsg"] != null)
                                        {
                                            @ViewData["SuccessMsg"]
                                        }
                                    </p>
                                </div>
                                
                                <fieldset>
                                    <legend>@ClaimAccident.AccidentDetails</legend>
                                    <div class="panel-body">
                                        <div class="form-group">
                                            <div class="col-lg-6">
                                                <div class="form-group">
                                                    @Html.HiddenFor(m => m.AccidentClaimId)
                                                    @Html.HiddenFor(m => m.PolicyId)
                                                    @Html.HiddenFor(m => m.ViewMode)
                                                    @Html.HiddenFor(m => m.Prop1, new { @Value = "0" })
                                                    @Html.HiddenFor(m => m.hidprop)
                                                    @Html.HiddenFor(m => m.OrganizationType)
                                                    @Html.HiddenFor(m => m.ChckClaimComplete)
                                                    @Html.HiddenFor(m => m.ChkODStatus)
                                                    @Html.HiddenFor(m => m.ChkTPStatus)
                                                    @Html.HiddenFor(m => m.HChkApprovedPayment)
                                                    @Html.HiddenFor(m => m.HClaimId)
                                                    @Html.HiddenFor(m => m.hidOrgprop)
                                                    @*@Html.HiddenFor(m => m.InputDate, new { @Value = "2010-01-01 00:00:00.000" })*@
                                                    <label class="col-sm-4 control-label" for="inputIPNo">
                                                        @ClaimAccident.IPNo</label>
                                                    <div class="col-sm-8">
                                                        @Html.TextBoxFor(m => m.IPNo, new { id = "inputIPNo", @class = "form-control", @maxlength = "10" })
                                                        @Html.ValidationMessageFor(m => m.IPNo)
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-6">
                                                <div class="form-group">
                                                    <label class="col-sm-4 control-label">
                                                        @ClaimAccident.ClaimNo</label>
                                                    <div class="col-sm-8">
                                                        @Html.TextBoxFor(m => m.ClaimNo, new { id = "inputClaimNo", @readOnly = true, @class = "form-control", @maxlength = "50" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="col-lg-6">
                                                <div class="form-group">
                                                    <label class="col-sm-4 control-label">
                                                        @ClaimAccident.Organization &nbsp;<span class="text-danger">*</span></label>
                                                    <div class="col-sm-8">
                                                        @Html.DropDownListFor(m => m.Organization, new SelectList(Model.OrgCatList, "OrgType", "Description", "[Select...]"), new { @class = "col-lg-12 form-control" })
                                                        @Html.ValidationMessageFor(m => m.Organization)
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-6">
                                                <div class="form-group">
                                                    <label class="col-sm-4 control-label">
                                                        @ClaimAccident.BusServiceNo&nbsp;<span id="lblBusServiceNo" class="text-danger">*</span>
                                                    </label>
                                                    <div class="col-sm-8" id="DivBusServiceNo">
                                                        @Html.TextBoxFor(m => m.BusServiceNo, new { id = "BusServiceNo", @class = "form-control", @maxlength = 8 })
                                                        @Html.ValidationMessageFor(m => m.BusServiceNo)
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="col-lg-6">
                                                <div class="form-group">
                                                    <label class="col-sm-4 control-label">
                                                        @ClaimAccident.VehicleNo @*&nbsp;<span class="text-danger">*</span>*@
                                                    </label>
                                                    <div class="col-sm-8">
                                                        @Html.TextBoxFor(m => m.VehicleNo, new { id = "inputVehicleNumber", @class = "form-control", @maxlength = 10 })
                                                        @*@Html.ValidationMessageFor(m => m.VehicleNo)*@
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-6">
                                                <div class="form-group">
                                                    <label class="col-sm-4 control-label">
                                                        @ClaimAccident.AccidentDate &nbsp;<span class="text-danger">*</span></label>
                                                    <div class="col-sm-8">
                                                        @Html.TextBoxFor(m => m.AccidentDate, "{0:d}", new { id = "inputAccidentDate", @class = "form-control", maxlength = 10 })
                                                        @Html.ValidationMessageFor(m => m.AccidentDate)
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="col-lg-6">
                                                <div class="form-group">
                                                    <label class="col-sm-4 control-label">
                                                        @ClaimAccident.AccidentTime &nbsp;<span class="text-danger">*</span>
                                                    </label>
                                                    <div class="col-sm-8">
                                                        @Html.TextBoxFor(m => m.AccidentTime, new { id = "inputAccidentTime", @class = "form-control", @maxlength = 5 })
                                                        @Html.ValidationMessageFor(m => m.AccidentTime)
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-6">
                                                <div class="form-group">
                                                    <label class="col-sm-4  control-label">
                                                        @ClaimAccident.Interchange</label>
                                                    <div class="col-sm-8">
                                                        @Html.DropDownListFor(m => m.Interchange, new SelectList(Model.InterchangeList, "Interchange_Id", "Interchange_Name", "0"), new { @class = "col-lg-12 form-control" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="col-sm-6">
                                                <div class="form-group">
                                                    <label class="col-sm-4 control-label">
                                                        @ClaimAccident.ReportedDate&nbsp;<span class="text-danger">*</span></label>
                                                    <div class="col-sm-8">
                                                        @Html.TextBoxFor(m => m.ReportedDate, "{0:d}", new { id = "inputReportedDate", @class = "form-control", maxlength = 10 })
                                                        @Html.ValidationMessageFor(m => m.ReportedDate)
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-sm-6">
                                                <div class="form-group">
                                                    <label class="col-sm-4 control-label">
                                                        @ClaimAccident.Facts</label>
                                                    <div class="col-sm-8">
                                                        @Html.TextAreaFor(m => m.Facts, new { id = "inputFacts", @class = "form-control", @maxlength = 800 })
                                                        @Html.ValidationMessageFor(m => m.Facts)
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="col-sm-6">
                                                <div class="form-group">
                                                    <label class="col-sm-4 control-label">
                                                        @ClaimAccident.Damages</label>
                                                    <div class="col-sm-8">
                                                        @Html.TextAreaFor(m => m.Damages, new { id = "inputDamages", @class = "form-control", @maxlength = 500 })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-sm-6">
                                                <div class="form-group">
                                                    <label for="inputAccidentLoc" class="col-sm-4 control-label">
                                                        @ClaimAccident.AccidentLoc</label>
                                                    <div class="col-sm-8">
                                                        @Html.TextAreaFor(m => m.AccidentLoc, new { id = "inputAccidentLoc", @class = "form-control", @maxlength = 200 })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="col-sm-6">
                                                <div class="form-group">
                                                    <label for="inputDistrict"  class="col-sm-4 control-label">
                                                        @ClaimAccident.District</label>
                                                    <div class="col-sm-8">
                                                         @Html.DropDownListFor(m => m.District, new SelectList(Model.DistrictCodeList, "Lookup_value", "Lookup_desc"), new { @class = "col-lg-12 form-control" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-sm-6">
                                                <div class="form-group">
                                                    <label for="inputAccidentLoc" class="col-sm-4 control-label">
                                                        @ClaimAccident.SeriousInjury</label>
                                                    <div class="col-sm-8">
                                                        @Html.TextBoxFor(m => m.SeriousInjury, new { id = "inputSeriousInjury", @class = "form-control", @maxlength = 50 })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="col-sm-6">
                                                <div class="form-group">
                                                    <label for="inputDistrict"  class="col-sm-4 control-label">
                                                        @ClaimAccident.RoadName</label>
                                                    <div class="col-sm-8">
                                                       @Html.TextBoxFor(m => m.RoadName, new { id = "inputRoadName", @class = "form-control", @maxlength = 100 })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-sm-6">
                                                <div class="form-group">
                                                    <label for="inputAccidentLoc" class="col-sm-4 control-label">
                                                        @ClaimAccident.Fatal</label>
                                                    <div class="col-sm-8">
                                                         @Html.TextBoxFor(m => m.Fatal, new { id = "inputFatal", @class = "form-control", @maxlength = 50 })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="col-sm-6">
                                                <div class="form-group">
                                                    <label for="inputDistrict"  class="col-sm-4 control-label">
                                                        @ClaimAccident.MinorInjury</label>
                                                    <div class="col-sm-8">
                                                         @Html.TextBoxFor(m => m.MinorInjury, new { id = "inputMinorInjury", @class = "form-control", @maxlength = 50 })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-sm-6">
                                                <div class="form-group">
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-lg-6 col-md-6 col-sm-6
                                col-xs-12">
                                                <div class="form-group">
                                                    <label class="col-sm-4 control-label">
                                                        @ClaimAccident.IsRecoveryOD</label>
                                                    <div class="col-sm-8">
                                                        @Html.RadioButtonForSelectList(m => m.IsRecoveryOD, Model.generallookupvalue)
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                                                <div class="form-group">
                                                    <label class="col-sm-4 control-label">
                                                        @ClaimAccident.IsRecoveryBI</label>
                                                    <div class="col-sm-8">
                                                        @Html.RadioButtonForSelectList(m => m.IsRecoveryBI, Model.generallookupvalue)
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                                                <div class="form-group" id="DivODStatus">
                                                    <label class="col-sm-4  control-label">
                                                        @ClaimAccident.ODStatus&nbsp;<span class="text-danger">*</span></label>
                                                    <div class="col-sm-8">
                                                        @Html.RadioButtonForSelectList(m => m.ODStatus, Model.generallookupvalue)
                                                    </div>
                                                    <label for="inputODClaiment" class="col-sm-4  control-label">
                                                    </label>
                                                    <div class="col-sm-8">
                                                        @Html.ValidationMessageFor(m => m.ODStatus)
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                                                <div class="form-group" id="DivTPClaimentStatus">
                                                    <label class="col-sm-4 control-label">
                                                        @ClaimAccident.TPClaimentStatus &nbsp;<span class="text-danger">*</span></label>
                                                    <div class="col-sm-8">
                                                        @Html.RadioButtonForSelectList(m => m.TPClaimentStatus, Model.generallookupvalue)
                                                    </div>
                                                    <label for="inputTPClaiment" class="col-sm-4  control-label">
                                                    </label>
                                                    <div class="col-sm-8">
                                                        @Html.ValidationMessageFor(m => m.TPClaimentStatus)
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </fieldset>
                                <fieldset>
                                    <legend>@ClaimAccident.InitialFindings</legend>
                                    <div class="panel-body">
                                        <div class="row">
                                            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                                                <div class="form-group">
                                                    <label class="col-sm-4 control-label">
                                                        @ClaimAccident.DateofFinding</label>
                                                    <div class="col-sm-8">
                                                        @Html.TextBoxFor(m => DateofFinding, new { id = "inputDateofFinding", @class = "form-control datepicker validateDateFormare ", maxlength = 10 })
                                                        @Html.ValidationMessageFor(m => m.DateofFinding)
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                                                <div class="form-group">
                                                    <label class="col-sm-4  control-label">
                                                        @ClaimAccident.OperatingHours</label>
                                                    <div class="col-sm-8">
                                                        @Html.DropDownListFor(m => m.OperatingHours, new SelectList(Model.OperatingHoursList, "Lookup_value", "Lookup_desc"), new { @class = "col-lg-12 form-control" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                                                <div class="form-group">
                                                    <label class="col-sm-4 control-label">
                                                        @ClaimAccident.Results</label>
                                                    <div class="col-sm-8">
                                                        @Html.TextAreaFor(m => m.Results, new { id = "inputResults", @class = "form-control", maxlength = 100 })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-6 col-md-6 col-sm-6
                                col-xs-12">
                                                <div class="form-group">
                                                    <label class="col-sm-4 control-label">
                                                        @ClaimAccident.InitialLiability</label>
                                                    <div class="col-sm-8">
                                                        @* @Html.TextBoxFor(m => m.InitialLiability, new { id = "inputInitialLiabIO", @class = "form-control", @maxlength = 10 })*@
                                                        @Html.DropDownListFor(m => m.InitialLiability, new SelectList(Model.FinalLiabilityList, "Lookup_value", "Lookup_desc"), new { @class = "col-lg-12 form-control" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                                                <div class="form-group">
                                                    <label class="col-sm-4 control-label">
                                                        @ClaimAccident.DutyIO</label>
                                                    <div class="col-sm-8">
                                                        @Html.TextBoxFor(m => m.DutyIO, new { id = "inputDutyIO", @class = "form-control", @maxlength = 250 })
                                                        @Html.ValidationMessageFor(m => m.DutyIO)
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                                                <div class="form-group">
                                                    <label class="col-sm-4 control-label">
                                                        @ClaimAccident.FinalLiability</label>
                                                    <div class="col-sm-8">
                                                        @Html.DropDownListFor(m => m.FinalLiability, new SelectList(Model.FinalLiabilityList, "Lookup_value", "Lookup_desc"), new { @class = "col-lg-12 form-control" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                                                <div class="form-group">
                                                    <label class="col-sm-4 control-label">
                                                        @ClaimAccident.CollisionType</label>
                                                    <div class="col-sm-8">
                                                        @*@Html.TextBoxFor(m => m.CollisionType, new { id = "inputCollisionTypeIO", @class = "form-control", @maxlength = 500 })*@
                                                        @Html.DropDownListFor(m => m.CollisionType, new SelectList(Model.CollisionTypeList, "Lookup_value", "Lookup_desc"), new { @class = "col-lg-12 form-control" })
                                                    </div>
                                                </div>
                                                <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </fieldset>
                                <fieldset>
                                    <legend>Vehicle</legend>
                                    <div class="panel-body">
                                        <div class="row">
                                            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                                                <div class="form-group">
                                                    <label class="col-sm-4 control-label">
                                                        @ClaimAccident.Make</label>
                                                    <div class="col-sm-8">
                                                        @Html.TextBoxFor(m => m.Make, new { id = "inputMake", @class = "form-control", maxlength = 30 })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                                                <div class="form-group">
                                                    <label class="col-sm-4 control-label" for="inputModel">
                                                        @ClaimAccident.ModelNo</label>
                                                    <div class="col-sm-8">
                                                        @Html.TextBoxFor(m => m.ModelNo, new { id = "inputModel", @class = "form-control", maxlength = 20 })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                                                <div class="form-group">
                                                    <input id="btnRetrieve" class="btn btn-info" type="button" value="Retrieve" />
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </fieldset>
                                <fieldset>
                                    <legend>@ClaimAccident.Driver</legend>
                                    <div class="panel-body">
                                        <div class="row">
                                            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                                                <div class="form-group">
                                                    <label class="col-sm-4 control-label">
                                                        @ClaimAccident.DriverEmployeeNo @*&nbsp;<span class="text-danger">*</span>*@</label>
                                                    <div class="col-sm-8">
                                                        @Html.TextBoxFor(m => m.DriverEmployeeNo, new { id = "txtBusCaptainCode", @class = "form-control", @maxlength = 10 })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                                                <div class="form-group">
                                                    <label class="col-sm-4 control-label">
                                                        @ClaimAccident.DriverName</label>
                                                    <div class="col-sm-8">
                                                        @Html.TextBoxFor(m => m.DriverName, new { id = "inputBusCaptainname", @class = "form-control", maxlength = 50 })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                                                <div class="form-group">
                                                    <label class="col-sm-4 control-label">
                                                        @ClaimAccident.DriverNRICNo</label>
                                                    <div class="col-sm-8">
                                                        @Html.TextBoxFor(m => m.DriverNRICNo, new { id = "inputNRICNo", @class = "form-control", maxlength = 20 })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                                                <div class="form-group">
                                                    <label class="col-sm-4 control-label">
                                                        @ClaimAccident.DateJoined</label>
                                                    <div class="col-sm-8">
                                                        @Html.TextBoxFor(m => DateJoined, new { @class = "form-control datepicker validateDateFormare", maxlength = 10 })
                                                        @Html.ValidationMessageFor(m => m.DateJoined)
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                                                <div class="form-group">
                                                    <label class="col-sm-4 control-label">
                                                        @ClaimAccident.DateResigned</label>
                                                    <div class="col-sm-8">
                                                        @Html.TextBoxFor(m => DateResigned, new { @class = "form-control datepicker validateDateFormare", maxlength = 10 })
                                                        @Html.ValidationMessageFor(m => m.DateResigned)
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                                                <div class="form-group">
                                                    <label class="col-sm-4 control-label">
                                                    </label>
                                                    <div class="col-sm-8">
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </fieldset>
                                <div class="row" style="margin-top: 10px">
                                    <div class="clearfix igr col-md-11 text-center">
                                        @if (@myPemissions.Write)
                                        {
                                            if (@pagemode != "Payment" && @pagemode != "Enq")
                                            {
                                            <button type="submit" class="btn btn-info" id="btnSave" name="Save">
                                                @Common.Save</button>
                                                if (@accidentClaimIdNew == "0" || @accidentClaimIdNew == null)
                                                {
                                             <a name="Cancel" id="btnReset" class="btn btn-info" href="@Url.ActionEncoded("ClaimAccidentEditorNew", "ClaimProcessing", new {policyId=0,claimMode="New" })">@Common.Reset</a> 
                                                }
                                                else
                                                {
                                                 <a name="btnReset1" id="btnReset1" class="btn btn-info">@Common.Reset</a> 
                                                }
                                             if (@iscompleted == 1 || @iscompleted == null)
                                             {
                                            <a name="Complete" id="btnComplete" class="btn  btn-info" href="#">@Common.Complete</a> 
                                             }
                                            }
                                            <a name="btnCancel" id="btnCancel" class="btn  btn-info" href="#">@Common.Cancel</a> 
                                        }
                                    </div>
                                    <div class="clearfix igr col-md-1 text-center">
                                        <a class="btn btn-info" id="Next">@Common.Next</a>
                                    </div>
                                </div>
                                <fieldset>
                                    <div class="panel-body">
                                        <div class="row">
                                            <div>
                                                @Html.Partial("~/Views/Shared/_TimeStamp.cshtml", Model)
                                            </div>
                                        </div>
                                    </div>
                                </fieldset>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="row-fluid bg2 blue-bt-bdr">
                            <br />
                            <br />
                            <br />
                            <div class="container text-center">
                                <div class="errorInfo">
                                    <p>
                                        <b>@Common.DontHavePermissionForThisScreen</b></p>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    setTabActive('AccidentTab'); 
    $(".validateDateFormare").blur(function (event) {
        if ($(this).val() != "" && $(this).val() != 'DD/MM/YYYY') {
            var errMessage = "";
            var dob = $(this).val();
            var pattern = /^(?:(?:31(\/|-|\.)(?:0?[13578]|1[02]))\1|(?:(?:29|30)(\/|-|\.)(?:0?[1,3-9]|1[0-2])\2))(?:(?:1[6-9]|[2-9]\d)?\d{2})$|^(?:29(\/|-|\.)0?2\3(?:(?:(?:1[6-9]|[2-9]\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\d|2[0-8])(\/|-|\.)(?:(?:0?[1-9])|(?:1[0-2]))\4(?:(?:1[6-9]|[2-9]\d)?\d{2})$/;
            if (!pattern.test(dob)) {
                errMessage += "Date must be in 'dd/mm/yyyy' format.\n";
                alert(errMessage);
                $(this).val("");
                event.preventDefault();
                return false;
            }
        }
    });

    try {
        var DateVal = {
            "inputAccidentDate": function () {
                return "@Html.Raw(ClaimAccident.lblAccidentDate)";
            },
            "inputReportedDate": function () {
                return "@Html.Raw(ClaimAccident.lblReportedDate)";
            },
            "inputDateofFinding": function () {
                return "@Html.Raw(ClaimAccident.lblDateOfFinding)";
            }
        };

        var do_on_load = function () {
            $('.ui-wrapper').css("padding", 0);
            $('textarea').resizable({handles: 's'});
            var pattern1 = /^(?:(?:31(\/|-|\.)(?:0?[13578]|1[02]))\1|(?:(?:29|30)(\/|-|\.)(?:0?[1,3-9]|1[0-2])\2))(?:(?:1[6-9]|[2-9]\d)?\d{2})$|^(?:29(\/|-|\.)0?2\3(?:(?:(?:1[6-9]|[2-9]\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\d|2[0-8])(\/|-|\.)(?:(?:0?[1-9])|(?:1[0-2]))\4(?:(?:1[6-9]|[2-9]\d)?\d{2})$/;

            $.validator.addMethod("greaterThan", function (a, b, c) {
                return "DD/MM/YYYY" == a || !pattern1.test(a) || /Invalid|NaN/.test(new Date(a.split("/")["1"] + "/" + a.split("/")["0"] + "/" + a.split("/")["2"])) ? isNaN(a.split("/")["1"] + "/" + a.split("/")["0"] + "/" + a.split("/")["2"]) || parseFloat(a.split("/")["1"] + "/" + a.split("/")["0"] + "/" + a.split("/")["2"]) < parseFloat() : new Date(a.split("/")["1"] + "/" + a.split("/")["0"] + "/" + a.split("/")["2"]) < new Date
            }, "");
            $.validator.unobtrusive.adapters.add("futuredate", {}, function (a) {
                a.rules.greaterThan = !0;
                a.messages.greaterThan = a.message
            });
            $.validator.unobtrusive.adapters.add("isfuturetime", ["other"], function (a) { a.rules.greaterThanCurrentTime = !0; a.messages.greaterThanCurrentTime = a.message });
            $.validator.addMethod("greaterThanCurrentTime", function (a, b, c) {
                b = new Date;
                b = ChKValidAccidentDate() ? GetCurrentDate() + " " + b.toTimeString().substr(0, 5) + ":00" : "01/01/2001 " + b.toTimeString().substr(0, 5) + ":00";
                b = Date.parse(b);
                c = ChKValidAccidentDate() ? GetDate($("#inputAccidentDate").val().split('/')[0], $("#inputAccidentDate").val().split('/')[1], $("#inputAccidentDate").val().split('/')[2]) + " " + a + ":00" : "01/01/2001 " + a + ":00";
                c = Date.parse(c);

                return "" != a && a.match(/^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$/) && "24:00" != a ? b == c ? !0 : c < b : !0
            }, "");

            $("#btnRetrieve").click(function () {
                $("#inputVehicleNumber").val() != "" && $.ajax({
                    type: "GET",
                    url: '@(Url.ActionEncoded("FillMakeAndModel"))',
                    data: {
                        VehNo: $("#inputVehicleNumber").val(),
                        Uid: guid()
                    },
                    dataType: "json",
                    success: function (result) {
                        if (result) {
                            $('#inputMake').val(result.Data.VehicleMakeCode);
                            $('#inputModel').val(result.Data.VehicleModelCode);
                        }
                    }
                });
            });

            if ("Y" == "@busvalcheck") {
                if (-1 < $.inArray("@Model.Organization", "@ListTrain".split(","))) {
                    var a = !1;
                    $("span").each(function () {
                        void 0 !== $(this).attr("data-valmsg-for") && "BusServiceNo" == $(this).attr("data-valmsg-for") && $(this).remove();
                    });
                    $("#BusServiceNo").removeAttr("data-val-required").removeAttr("aria-required").attr("data-val", "false");
                    try {

                        $("#BusServiceNo").settings != undefined && $("#BusServiceNo").rules("remove", "required");
                    }
                    catch (Ex) {
                    }
                    $("#lblBusServiceNo").hide()
                } else ($("#BusServiceNo").settings != undefined && $("#BusServiceNo").rules("add", "required")), $("span").each(function () {
                    void 0 !== $(this).attr("data-valmsg-for") && "BusServiceNo" == $(this).attr("data-valmsg-for") && (a = !0)
                }), !a && $("#DivBusServiceNo").append('<span class="field-validation-valid" data-valmsg-for="BusServiceNo" data-valmsg-replace="true"></span>'), $("#BusServiceNo").attr("data-val-required", "@Html.Raw(ClaimAccident.RFVBusServiceNumber)"), $("#lblBusServiceNo").show();
            }
            "@Model.ChkODStatus" != "0" && $("#DivODStatus :radio:not(:checked)").attr("disabled", !0);
            "@Model.ChkTPStatus" != "0" && $("#DivTPClaimentStatus :radio:not(:checked)").attr("disabled", !0);
            "@Model.ChckClaimComplete" == "2" && $("#Organization").css({ "pointer-events": "none", cursor: "default" }).css("background-color", "#eee").children('option:not(:selected)').remove();
            //added by shikha
            "New" == "@caller" && ($.each($("form").serializeArray(), function (b, a) { $('[name="' + a.name + '"]:not(#Organization)').attr("readonly", "readonly").attr("disabled", true)}), $(":radio:not(:checked)").attr("disabled", !0), $("#btnCancel").hide());
            "New" != "@caller" && $("#Organization").css({"pointer-events": "none",cursor: "default"}).css("background-color", "#eee").children("option:not(:selected)").remove();

            var urlid = "";
            var url = "";
            $("#inputAccidentTime").timepicker({
                onSelect: function () {
                    $(this).valid();
                }
            });
            $('.datepicker').datepicker({
                dateFormat: "dd/mm/yy",
                showStatus: true,
                showWeeks: true,
                currentText: 'Now',
                autoSize: true,
                gotoCurrent: true,
                showAnim: 'blind',
                highlightWeek: true,
                changeMonth: !0,
                changeYear: !0,
                yearRange: "1951:2050",
                onSelect: function (b) {
                    $(this).valid();
                }
            });
            $('#inputAccidentDate,#inputReportedDate,#inputDateofFinding').datepicker({ dateFormat: "dd/mm/yy",
                showStatus: true,
                showWeeks: true,
                currentText: 'Now',
                autoSize: true,
                gotoCurrent: true,
                showAnim: 'blind',
                highlightWeek: true,
                changeMonth: !0,
                changeYear: !0,
                yearRange: "1951:2050",
                maxDate: 0,
                onSelect: function (b) {
                    $(this).valid();
                    ("inputAccidentDate" == (this.id || this.context.id)) && $("#inputAccidentTime").valid();
                }
            }).change(function () {
                "" == $(this).val() && ("inputAccidentDate" == (this.id || this.context.id)) && $("#inputAccidentTime").val("");
                if ($(this).val() != "" && isFutureDate($(this).val())) return ($("#" + this.id).val("")), (("inputAccidentDate" == (this.id || this.context.id)) && $("#inputAccidentTime").val("")), alert(DateVal[this.id]() + " @Html.Raw(ClaimAccident.MsgDate)", this.id), !1;
            });
            $.culture = Globalize.culture("en-GB");
            $.validator.methods.date = function (a, b) {
                return this.optional(b) || Globalize.parseDate(a, "@System.Configuration.ConfigurationManager.AppSettings["DateFormat"]", "en-GB") || Globalize.parseDate(a, "yyyy-mm-dd")
            };
            $.validator.unobtrusive.adapters.add("notequalto", ["other"], function (a) {
                a.rules.notEqualTo = "#" + a.params.other;
                a.message && (a.messages.notEqualTo = a.message)
            });
            $.validator.addMethod("notEqualTo", function (a, b, c) {
                return this.optional(b) || a != $(c).val()
            }, "");
            $("div").each(function () {
                if ($(this).hasClass("RadioButton")) {
                    $(this).removeAttr("style");
                }
            });
            "@accidentClaimId" == "0" && $('#Previewdocuments').show().css('color', 'white').attr('disabled', 'disabled');
            $('#inputMobileNo').blur(function () { MobileNumberLengthCheck("inputMobileNo", "@Html.Raw(ClaimAccident.MsgMobileNo)"); });
            $("#inputVehicleNumber").autocomplete({
                source: '@Url.ActionEncoded("Autocomplete")'
            }).blur(function () {
                "" != $("#inputVehicleNumber").val() && $.ajax({
                    type: "POST",
                    url: '@Url.ActionEncoded("CheckVechile", "ClaimProcessing")',
                    data: {
                        Vechileval: $("#inputVehicleNumber").val()
                    },
                    success: function (a) {
                        "F" == a && (alert("@Html.Raw(ClaimAccident.MsgVehicleNumber)"), $("#inputVehicleNumber,#inputVehicleNo2,#inputMake,#inputModel").val(""), $("#inputVehicleNumber").focus())
                    }
                })
            })
            DatepickerLen();
            

            $("#inputAccidentTime").keypress(function (e) {

                var evt = e || window.event, a = evt.which ? evt.which : evt.keyCode, keytoallow = [], keytoallow = ["45", "8", "46", "118", "37", "38", "39", "40", "58"], maxlen = parseInt($(this).attr("maxlength"));
                if ((1 == evt.ctrlKey && ("118" == a || "86" == a)) || (-1 < $.inArray(a.toString(), keytoallow))) return true;
                var c = maxlen, b = $(this).val().length;
                return isTextSelected(document.getElementById($(this).context.id)) || c >= parseInt(b) ? 31 < a && (48 > a || 57 < a) ? (b = "#" + this.id, $(b).focus(), !1) : !0 : !1;

            }).blur(function () {
                var a = $("#inputAccidentTime").val();
                if ("" != a && !a.match(/^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$/) && "24:00" != a) return alert("@Html.Raw(ClaimAccident.MsgHourFormat)", "inputAccidentTime"), $("#NoteTime").focus(), $("#inputAccidentTime").val(""), !1
            });

            $('#inputVehicleNumber').blur(function () {
                var txtvehicleno = ($(this).val());
                $.ajax({
                    type: "GET",
                    url: '@(Url.ActionEncoded("FillMakeAndModel"))',
                    data: {
                        VehNo: txtvehicleno,
                        Uid: guid()
                    },
                    dataType: "json",
                    success: function (result) {
                        if (result) {
                            $('#inputMake').val(result.Data.VehicleMakeCode);
                            $('#inputModel').val(result.Data.VehicleModelCode);
                        }
                    }
                });
            });
            $('#txtBusCaptainCode').blur(function () {
                var captainCode = ($(this).val());
                $.ajax({
                    type: "GET",
                    url: '@(Url.ActionEncoded("FillDriverInfoCode"))',
                    data: {
                        CaptainCode: captainCode
                    },
                    dataType: "json",
                    success: function (result) {
                        if (result) {
                            $('#inputBusCaptainname').val(result.Data.BusCaptainName);
                            $('#inputNRICNo').val(result.Data.NRICPassportNo);
                            $('#DateJoined').val(result.Data.DateJoined1);
                            $('#DateResigned').val(result.Data.DateResigned1);
                        }
                    }
                });
            });
            $("#txtBusCaptainCode").autocomplete({
                source: '@Url.ActionEncoded("AutocompleteBusCaptaionCode")'
            }).blur(function () {
                "" != $("#txtBusCaptainCode").val() && $.ajax({
                    type: "POST",
                    url: '@Url.ActionEncoded("CheckBusCaptainCode", "ClaimProcessing")',
                    data: {
                        CaptainCode: $("#txtBusCaptainCode").val()
                    },
                    success: function (a) {
                        "F" == a && (alert("@Html.Raw(ClaimAccident.MsgBusCaptainCode)"), $("#txtBusCaptainCode,#inputBusCaptainname,#inputNRICNo,#DateJoined,#DateResigned").val(""), $("#txtBusCaptainCode").focus())
                    }
                })
            });
            $('#inputBusCaptainCode').change(function () {
                var captainCode = ($(this).val());
                $.ajax({
                    type: "GET",
                    url: '@(Url.ActionEncoded("FillDriverInfo"))',
                    data: {
                        CaptainCode: captainCode
                    },
                    dataType: "json",
                    success: function (result) {
                        if (result) {
                            $('#inputBusCaptainname').val(result.Data.BusCaptainName);
                            $('#inputNRICNo').val(result.Data.NRICPassportNo);
                            $('#DateJoined').val(result.Data.DateJoined1);
                            $('#DateResigned').val(result.Data.DateResigned1);
                        }
                    }
                });
            }).blur(function () {
                0 != $("#inputBusCaptainCode").val() ? $("span").each(function () {
                    void 0 === $(this).attr("for") || "inputBusCaptainCode" != $(this).attr("for") && "inputBusCaptainname" != $(this).attr("for") && "inputNRICNo" != $(this).attr("for") && "inputMobileNo" != $(this).attr("for") || $(this).hide()
                }) : $("span").each(function () {
                    void 0 === $(this).attr("for") || "inputBusCaptainCode" != $(this).attr("for") && "inputBusCaptainname" != $(this).attr("for") && "inputNRICNo" != $(this).attr("for") && "inputMobileNo" != $(this).attr("for") || $(this).show()
                })
            });

            $('#sb-site').removeAttr("style");
            if ("" != $("#inputAccidentDate").val()) {
                var arrDate = $("#inputAccidentDate").val().split(" ");
                $("#inputAccidentDate").val(arrDate[0])
            }
            "" != $("#inputReportedDate").val() && (arrDate = $("#inputReportedDate").val().split(" "), $("#inputReportedDate").val(arrDate[0]));
            "" != $("#inputDateofFinding").val() && (arrDate = $("#inputDateofFinding").val().split(" "), $("#inputDateofFinding").val(arrDate[0]));

            $("#btnComplete").click(function () {
                if ("" == '@Model.AccidentClaimId' || 0 == '@Model.HClaimId')
                    return alert("@Html.Raw(ClaimAccident.MsgBeforeComplete)"), !1;
                CreateDialog("@Html.Raw(ClaimAccident.MsgConfirmComplete)", "@Html.Raw(Common.Yes)", "@Html.Raw(Common.Cancel)", OnConfirmTrue);
                return false;
                e.preventDefault();
            });
            $("#btnCancel").click(function () {
                CreateDialog("@Html.Raw(ClaimAccident.MsgConfirmCancel)", "@Html.Raw(Common.Yes)", "@Html.Raw(Common.Cancel)", OnCancelClaim);
            });
            $("#Organization").change(function () {
                var orgID = $("#Organization").val();
                $.ajax({
                    type: "POST",
                    url: '@Url.ActionEncoded("GetOrganizationType", "ClaimProcessing")',
                    data: {
                        OrganizationID: orgID
                    },
                    success: function (orgID) {
                        $("#OrganizationType").val(orgID)
                        var myform = $('#claimaccidententryform');

                         // Find disabled inputs, and remove the "disabled" attribute
                        var disabled = myform.find(':input:disabled').removeAttr('disabled');

                         // serialize the form
                        var serialized = myform.serialize();

                         // re-disabled the set of inputs that you previously enabled
//                        disabled.attr('disabled','disabled');
                        $.each($('form').serializeArray(), function (index, value) {
                            $('[name="' + value.name + '"]:not(#inputClaimNo)').removeAttr('readonly', 'readonly');
                        });

                        $(':radio:not(:checked)').attr('disabled', false);
                    }
                });
                if (-1 < $.inArray(orgID, "@ListTrain".split(","))) {
                    var a = !1;
                    $("span").each(function () {
                        void 0 !== $(this).attr("data-valmsg-for") && "BusServiceNo" == $(this).attr("data-valmsg-for") && $(this).remove()
                    });
                    $("#BusServiceNo").removeAttr("data-val-required").removeAttr("aria-required").attr("data-val", "false");
                    $("#BusServiceNo").rules("remove", "required");
                    $("#lblBusServiceNo").hide()
                } else $("#BusServiceNo").rules("add", "required"), $("span").each(function () {
                    void 0 !== $(this).attr("data-valmsg-for") && "BusServiceNo" == $(this).attr("data-valmsg-for") && (a = !0)
                }), !a && $("#DivBusServiceNo").append('<span class="field-validation-valid" data-valmsg-for="BusServiceNo" data-valmsg-replace="true"></span>'), $("#BusServiceNo").attr("data-val-required", "@Html.Raw(ClaimAccident.RFVBusServiceNumber)"), $("#lblBusServiceNo").show();

                $.ajax({
                    type: "POST",
                    url: '@(Url.ActionEncoded("FillCollisionType"))',
                    data: {
                        OrgId: orgID
                    },
                    dataType: "json",
                    success: function(result)
                    {
                    $("#CollisionType").empty();
                    $.each(result, function (){
                        $("#CollisionType").append($("<option     />").val(this.Lookup_value).text(this.Lookup_desc));
                    });
                }
                });

                $.ajax({
                    type: "POST",
                    url: '@(Url.ActionEncoded("FillDistrict"))',
                    data: {
                        OrgId: orgID
                    },
                    dataType: "json",
                    success: function(result)
                    {
                    $("#District").empty();
                    $.each(result, function (){
                        $("#District").append($("<option     />").val(this.Lookup_value).text(this.Lookup_desc));
                    });
                    }
                });

            });

            $("#btnSave").click(function (a) {
                return "0" == $("#Organization").val() ? (alert("@Html.Raw(ClaimAccident.RFVOrganization)", "Organization"), a.preventDefault(), !1) : "" != $("#inputReportedDate").val() && "" != $("#inputAccidentDate").val() && $("#inputReportedDate").datepicker("getDate") < $("#inputAccidentDate").datepicker("getDate") ? (alert("@Html.Raw(ClaimAccident.MsgReportedDate)", "inputReportedDate"), a.preventDefault(), !1) : "" != $("#inputDateofFinding").val() && "" != $("#inputAccidentDate").val() && $("#inputDateofFinding").datepicker("getDate") < $("#inputAccidentDate").datepicker("getDate") ? (alert("@Html.Raw(ClaimAccident.MsgDateOfFinding)", "inputDateofFinding"), a.preventDefault(), !1) : !0
            });
            $('#Next').removeAttr('disabled').removeAttr('readonly');

            //            if ("@isreported" == null || "@isreported" == false) {
            //                $('#btnCancel').removeAttr('disabled').removeAttr('readonly');
            //            }
            //            else {
            //                $('#btnCancel').removeAttr('href').attr('disabled', 'disabled').click(function (e) {e.preventDefault();  return false; });
            //            }


             
// Added by Apurva for new resest functionality
              $("#btnReset1").click(function () {
              debugger;
                  var policyId = '@Model.PolicyId';
                  var accidentclaimId = '@Model.AccidentClaimId';
                  var a= parseInt(policyId);
                  var b= parseInt(accidentclaimId);
                  window.location.href = '@Url.Action("ClaimAccidentEditor", "ClaimProcessing")?policyId=' + a + '&AccidentClaimId=' + b +'&claimMode=Write';            
            });

                       

            ("@isreported" != "" && "@isreported" != null && "@isreported" == "True") || ("@Model.HChkApprovedPayment" == "1" || "@isreadonly" == "True") ? $('#btnCancel').attr('disabled', true) : $('#btnCancel').removeAttr('disabled').removeAttr('readonly');

            if ("@isreadonly" == "True") { $('#btnComplete').attr('disabled', 'disabled'); }

            $('textarea').each(function () {
                $(this).removeAttr('width')
                $(this).removeAttr('height');
            });
            SetDivPost();
        };
        $(document).ready(do_on_load);
        $(window).bind("page:change", do_on_load);

    }
    catch (Ex) { }
    function DatepickerLen() {
        $("input[type=text]").each(function () {
            (-1 < $.inArray(($(this).context.id || $(this).id), "inputAccidentDate inputReportedDate inputDateofFinding".split(" ")) || $(this).hasClass("datepicker")) && 10 < $(this).val().length && $(this).val($(this).val().substring(0, 10));
            if (void 0 !== $(this).attr("data-val-date") && "The field " == $(this).attr("data-val-date").substring(0, 10)) {
                var b = $(this).attr("data-val-date").substring(10, $(this).attr("data-val-date").length).replace("must be a date.", "@Html.Raw(Common.MsgDateFormat)");
                $(this).removeAttr("data-val-date");
                $(this).attr("data-val-date", b)
            };
        });
    };
    function OnCancelClaim() {
        var left = ($(window).width() / 2) - (900 / 2), top = ($(window).height() / 2) - (900 / 2);
        var accidentclaimId = '@Model.AccidentClaimId';
        var LoggedInUser = '@Model.CreatedBy'
        $.ajax({
            url: '@Url.ActionEncoded("CancelClaim", "ClaimProcessing")',
            type: 'POST',
            dataType: 'json',
            data: {
                accidentClaimId: accidentclaimId,
                LoggedInUserName: LoggedInUser
            },
            success: function (resultdata) {
                if (resultdata == 1) {
                    CreateDialogAccidentCancel("@Html.Raw(ClaimAccident.MsgAccidentClaimCanceled)", "@Html.Raw(Common.OK)", OnPressTrue);
                    $('#btnComplete').attr('disabled', 'disabled');
                }
            },
            error: function (textStatus, thrownError) {
                alert(thrownError);
            }
        });
    };

    function OnPressTrue() {
        window.location.reload();
    };

    function CreateDialogAccidentCancel(TexttoDisplay, okText, okCallback) {
        $("<div id='CreateDialog_id'></div>").text(TexttoDisplay).dialog({
            modal: true,
            title: 'CRIS+',
            draggable: false,
            buttons: [{
                id: 'btnDialogeOK',
                text: okText,
                click: function () {
                    $(this).dialog("close");
                    typeof (okCallback) == "function" && okCallback();
                }
            }]
        }).height('auto').attr('id', 'dialogId');
        var styles = {
            display: "block",
            margin: "0 auto",
            textAlign: "center",
            float: "none !important"
        };
        $("#btnDialogeOK").closest("div").css({
            "display": "block",
            "margin": "0 auto",
            "text-align": "center",
            "float": "none !important"
        });
    };
    function ChKValidAccidentDate() {
        return /^(?:(?:31(\/|-|\.)(?:0?[13578]|1[02]))\1|(?:(?:29|30)(\/|-|\.)(?:0?[1,3-9]|1[0-2])\2))(?:(?:1[6-9]|[2-9]\d)?\d{2})$|^(?:29(\/|-|\.)0?2\3(?:(?:(?:1[6-9]|[2-9]\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\d|2[0-8])(\/|-|\.)(?:(?:0?[1-9])|(?:1[0-2]))\4(?:(?:1[6-9]|[2-9]\d)?\d{2})$/.test($("#inputAccidentDate").val());
    };
    function OnConfirmTrue() {
        var left = ($(window).width() / 2) - (500 / 2), top = ($(window).height() / 2) - (200 / 2);
        var accidentclaimId = '@Model.AccidentClaimId';
        var Organization_Type = '@Model.Organization';
        var Claim_Prefix = 'UCLM';
        $.ajax({
            url: '@Url.ActionEncoded("CompleteClaim", "ClaimProcessing")',
            type: 'POST',
            dataType: 'json',
            data: {
                accidentClaimId: accidentclaimId,
                OrganizationType: Organization_Type,
                ClaimPrefix: Claim_Prefix
            },
            success: function (resultdata) {
                if (resultdata.Data.IsValid) {
                    // $('#inputClaimNo').val(resultdata.Data.ClaimNo);
                    $('#SuccessMessage').text(resultdata.Data.SuccessMsg);
                    $('#btnComplete').hide();
                    $('#btnSave').hide();
                    $('#btnReset').hide();
                    $('#DivMoDtBy').text('');
                    $('#DivMoDtBy').text(resultdata.Data.ModifiedBy);
                    var dt = new Date();
                    var time = dt.getHours() + ":" + dt.getMinutes() + ":" + dt.getSeconds() + ":" + dt.getMilliseconds();
                    // var CurrDt = (dt.getMonth() + 1) + "/" + dt.getDate() + "/" + dt.getFullYear();
                    var Cdt = (dt.getDate()).toString();
                    var Cmth = (dt.getMonth() + 1).toString();
                    if (Cdt.length == 1) {
                        Cdt = "0" + dt.getDate();
                    }
                    if (Cmth.length == 1) {
                        Cmth = "0" + (dt.getMonth() + 1);
                    }
                    var CurrDt = Cdt + "/" + Cmth + "/" + dt.getFullYear();
                    $('#DivUpDt').text('');
                    $('#DivUpDt').text(CurrDt);

                    $('#DivUpTime').text('');
                    $('#DivUpTime').text(time);

                    // $('#inputclaimno').text(resultdata.Data.ClaimNo);
                    $('*:not(.DonotDiableControl):not([id=Next]):not([id=Previous])', 'form').attr('disabled', 'disabled').attr('readonly', 'readonly');

                    $("html, body").animate({ scrollTop: 0 });
                }
                else {
                    var w = window.open("", "popup", "width=700, height=400, top=" + top + ", left=" + left);
                    $(w.document.body).html(resultdata.Data.ResultStr);
                }
            },
            error: function (textStatus, thrownError) {
                alert(thrownError);
            }
        });
    };

    function getQueryVariable(a) {
        for (var e = "@MenuListItem.ClaimTabs.GetQueryStringVal()".replace(/amp;/ig, "").split("&"), d = 0; d < e.length; d++) {
            var b = e[d].split("=");
            if (b[0] == a) return b[1]
        }
    };
    function onclickcancel() {
        clearform();
    }
    function clearform() {
        $("#mainfieldset").find(":input").each(function () {
            switch (this.type) {
                case "text":
                case "textarea":
                    $(this).val("");
                    break;
                case "checkbox":
                case "radio":
                    this.checked = !1
            }
        });
        $("#mainfieldset").find("select").each(function () {
            $(this).prop("selectedIndex", 0)
        });
        $("span.field-validation-error").removeClass("field-validation-error").addClass("field-validation-valid");
        $("#error").hide()
    }

    function GetCurrentDate() {
        var today = new Date();
        var dd = today.getDate();
        var mm = today.getMonth() + 1; //January is 0!

        var yyyy = today.getFullYear();
        if (dd < 10) {
            dd = '0' + dd
        }
        if (mm < 10) {
            mm = '0' + mm
        }
        return GetDate(dd, mm, yyyy);
    }

    function showclaimDocument(a) {
        window.open(a, "ClaimDocumentWindow", "scrollbars=yes, resizable=yes,top=10, left=10, width=700, height=600")
    }
    function GetDate(dd, mm, yyyy) {
        return Globalize.parseDate(dd + '/' + mm + '/' + yyyy, "@System.Configuration.ConfigurationManager.AppSettings["DateFormat"]", "en-GB") ? mm + '/' + dd + '/' + yyyy : dd + '/' + mm + '/' + yyyy;
    }
  
    function isFutureDate(idate) {
        var today = new Date().getTime(),
        idate = idate.split("/");
        idate = new Date(idate[2], idate[1] - 1, idate[0]).getTime();
        return (today - idate) < 0 ? true : false;
    };


    var organization = "";
    $('#Organization option:selected').each(function () {
        if ($(this).attr("selected", "selected")) {
            organization = "1";
            return false;
        }
    });
    if (organization != "1") {
        $("#Organization option[value='0']").attr('selected', true);

    }
    var operatingHours = "";
    $('#OperatingHours option:selected').each(function () {
        if ($(this).attr("selected", "selected")) {
            operatingHours = "1";
            return false;
        }
    });
    if (operatingHours != "1") {
        $("#OperatingHours option[value='0']").attr('selected', true);

    }
    var finalLiability = "";
    $('#FinalLiability option:selected').each(function () {
        if ($(this).attr("selected", "selected")) {
            finalLiability = "1";
            return false;
        }
    });
    if (finalLiability != "1") {
        $("#Organization option[value='0']").attr('selected', true);

    }
    $('#InitialLiability option:selected').attr("selected", "selected");
    $('#CollisionType option:selected').attr("selected", "selected");
    
</script>
