@model MCAS.Web.Objects.MastersHelper.PaymentEditortModel
@{
    var PayableLocalAmt = 0.00m;
    var PayableOrgAmt = 0.00m;
    var prop = "0.00";
    if (Model.PayableLocalAmt != null && Model.PayableLocalAmt != 0.00m)
    {
        PayableLocalAmt = Model.PayableLocalAmt;
    }
    if (Model.PayableOrgAmt != null && Model.PayableOrgAmt != 0.00m)
    {
        PayableOrgAmt = Model.PayableOrgAmt;
    }

    var Display = "none;";
    if (TempData["Display"] == "Display")
    {
        Display = "inline;";
    }
    else
    {
        Display = "none;";
    }
    var Date = "";

    if (Model.PaymentDueDate.ToString() != "")
    {
        Date = Model.PaymentDueDate.ToString().Substring(0, 10);
    }
    else
    {
        Date = DateTime.Now.ToString("dd/MM/yyyy");
    }

    var caller = "";
    if (Request.QueryString["claimMode"] != null)
    {
        caller = Request.QueryString["claimMode"].ToString();
    }

    var lebmode = "";
    if (Request.QueryString["mode"] != null)
    {
        lebmode = Request.QueryString["mode"].ToString();
    }

    ViewBag.Title = "PaymentEditor";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var policyid = Request.QueryString["PolicyId"];
    var Hclaimant = Request.QueryString["ClaimId"] == null ? "0" : Request.QueryString["ClaimId"];
    var AccId = Request.QueryString["AccidentClaimId"] == null ? "0" : Request.QueryString["AccidentClaimId"];
    var Cmode = Request.QueryString["claimMode"] == null ? "Read" : Request.QueryString["claimMode"];
    var accidentClaimIdNew = Request.QueryString["AccidentClaimId"];
}
@Html.Hidden("oldgroup", 1)
<link href="@Url.Content("~/Content/jquery-ui.css")" rel="Stylesheet" media="screen" />
<style type="text/css">
    .ui-button-icon-primary.ui-icon.ui-icon-closethick
    {
        margin: -7px 0 0 -7px;
    }
    div.ui-dialog.ui-widget.ui-widget-content.ui-corner-all.ui-front.alert.ui-draggable, div.ui-dialog.ui-widget.ui-widget-content.ui-corner-all.alert.ui-draggable
    {
        top: 130px !important;
    }
    
    fieldset
    {
        padding: 5px;
        margin: 1px;
        border: 1px solid;
        border-color: #DAD7D7;
    }
    
    legend
    {
        display: block;
        width: auto;
        padding: 1px;
        margin-bottom: 2px;
        font-size: 14px;
        line-height: inherit;
        color: #1e91cf !important;
        border: 0;
    }
</style>
<script src="@Url.Content("~/Scripts/jquery-2.1.0.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<div class="dashboard-wrapper">
    <div class="PaymentDialogue" style="overflow: hidden;">
    </div>
    <div class="container">
        <div class="row page-title" id="reg">
            <div class="col-lg-12" id="reg2" style="background-color: white;position:fixed;z-index: 1;">
                @{
                    if (@lebmode == "Payment")
                    {
                    <h2>
                        Claim Payment</h2>
                    }
                    else if (@lebmode == "Recovery")
                    {
                    <h2>
                        Claims Recovery</h2>
                    }
                    else
                    {
                    <h2>
                        Registration</h2>
                    }

                }
                <ul class="breadcrumb">
                    <li>Home</li>
                    @{
                        if (@caller == "Write" && @accidentClaimIdNew != null && @accidentClaimIdNew != "0")
                        {
                        <li>Incomplete Claim Registration</li>
                        }
                        else if (@caller == "Write")
                        {
                        <li>New Claim Registration</li>
                        }
                        else if (@caller == "Read" && @lebmode == "Adj")
                        {
                        <li>Claim Adjustments</li>
                        }
                        else if (@caller == "Read" && @lebmode == "Enq")
                        {
                        <li>Claim Enquiry</li>
                        }
                        else if (@caller == "Read" && @lebmode == "Payment")
                        {
                        <li>Claim Payment Processing</li>
                        }
                        else if (@caller == "Recovery")
                        {
                        <li>Claim Recovery</li>
                        }
                        else
                        {
                        <li>New Claim Registration</li>
                        }
                    }
                </ul>
            </div>
        </div>
        <hr />
         <div style="position: relative!important" >
        @Html.Action("_ClaimDetails", "ClaimProcessing", new { PolicyId = @policyid })
        </div>
        <div id="testdiv"></div>
        <div class="row" id="toprow">
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                <div class="panel panel-info">
                    <div class="panel-heading clearfix">
                        <i class="icon-check-sign"></i>
                        <h3 class="panel-title">
                            Claim Payment</h3>
                    </div>
                    @Html.Action("ClaimPayment", "ClaimProcessing", new { PolicyId = @policyid })
                    <div class="row">
                        <div class="col-lg-6 text-left">
                            <a class="btn btn-info" id="OpenNewPayment" href="#">Add New Payment</a>&nbsp;&nbsp;
                            <a class="btn btn-info" id="OpenRecovery" href="#">Add New Recovery</a>
                        </div>
                        <div class="col-lg-6 text-right">
                            <a class="btn btn-info" id="ViewCLMrecoveryHistory" href="#">View Claim Recovery History</a>&nbsp;
                            <a class="btn btn-info" id="ViewPaymentHistory" href="#">View Payment History</a>
                        </div>
                    </div>
                    <hr style='font-weight: bold' />
                    <div style="color: Red; font-weight: bold;" class="has-error" id="error">
                        <p align="center" id="result">
                            @if (TempData["result"] != null)
                            {
                                @TempData["result"]
                                TempData.Remove("result");

                            }
                        </p>
                    </div>
                    <div class="panel-body" id="NewPaymentEditor" style="display:@Display">
                        @using (Html.BeginForm("PaymentEditor", "ClaimProcessing", new { PolicyId = @policyid, AccidentClaimId = @AccId, ClaimId = @Hclaimant }, FormMethod.Post, new { role = "form", @class = "form-horizontal", id = "PaymentEditor", name = "PaymentEditor" }))
                        {
                          
                            <fieldset id="Payment_Details">
                                <legend>Payment Details</legend>
                                @Html.HiddenFor(m => m.ReadOnly)
                                <div class="panel-body">
                                    <div class="row">
                                        <div class="col-lg-6" id="re_Claimant_Type">
                                            <div class="form-group">
                                                <label class="col-sm-4 control-label" for="inputContactNo">
                                                    Claimant
                                                </label>
                                                <div class="col-sm-3" style="padding-right: 0px;">
                                                    @Html.DropDownListFor(m => m.Claimant, new SelectList(Model.Claimant_List, "TPartyId", "CompanyName", "Select"), new { id = "Claimant", @class = "form-control", TabIndex = 1 })
                                                </div>
                                                <div class="col-sm-4">
                                                    @Html.ValidationMessageFor(m => m.Claimant)
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-lg-6" id="re_Payment_Type" style="padding-right: 0px;">
                                            <div class="form-group">
                                                <label class="col-sm-4 control-label" for="inputEmailAdd">
                                                    Payee Type</label>
                                                <div class="col-sm-3">
                                                    @Html.DropDownListFor(m => m.PayeeType, new SelectList(Model.PayeeType_List, "PayeeType_Id", "PayeeType_Name", "Select"), new { id = "PayeeType", @class = "form-control", TabIndex = 1 })
                                                </div>
                                                <div class="col-sm-4">
                                                    @Html.ValidationMessageFor(m => m.PayeeType)
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-lg-6" id="TP_Payment_Type">
                                            <div class="form-group">
                                                <label class="col-sm-4 control-label" for="inputContactNo">
                                                    Payment Type
                                                </label>
                                                <div class="col-sm-3" style="padding-right: 0px;">
                                                    @Html.DropDownListFor(m => m.PaymentType, new SelectList(Model.PaymentType_List, "PaymentType_Id", "PaymentType_Name", "Select"), new { id = "ddlReserveType", @class = "form-control", TabIndex = 1 })
                                                </div>
                                                <div class="col-sm-5">
                                                    @Html.ValidationMessageFor(m => m.PaymentType)
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-lg-6">
                                            <div class="form-group" id="RE_Payment_Due_Date">
                                                <label class="col-sm-4 control-label" for="inputVehicleRegnNo">
                                                    Payment Due Date
                                                </label>
                                                <div class="col-sm-3" style="padding-right: 0px;">
                                                    @Html.TextBoxFor(m => m.PaymentDueDate, new { id = "PaymentDueDate", @class = "form-control", @Value = @Date })
                                                </div>
                                                <div class="col-sm-5">
                                                    @Html.ValidationMessageFor(m => m.PaymentDueDate, "The Date should be in DD/MM /YY format.")<br />
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-lg-12" id="re_Payee">
                                            <div class="form-group">
                                                <label class="col-sm-2 control-label" for="inputVehicleMake">
                                                    Payee &nbsp;<span class="text-danger">*</span></label>
                                                <div class="col-sm-5">
                                                    @Html.TextBoxFor(m => m.Payee, new
                                               {
                                                   id = "Payee",
                                                   @class = "form-control",
                                                   TabIndex = 6,
                                                   maxlenght =
                                                     30
                                               })
                                                    @Html.ValidationMessageFor(m => m.Payee)
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-lg-12" id="re_Payee_Address">
                                            <div class="form-group">
                                                <label class="col-sm-2 control-label" for="inputVehicleMake">
                                                    Payee Address&nbsp;<span class="text-danger">*</span></label>
                                                <div class="col-sm-8">
                                                    @Html.TextBoxFor(m => m.PayeeAdd, new
                                               {
                                                   id = "PayeeAdd",
                                                   @class = "form-control",
                                                   TabIndex = 6,
                                                   maxlenght =
                                                     30
                                               })
                                                    @Html.ValidationMessageFor(m => m.PayeeAdd)
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-lg-6" id="re_Payee_Currency">
                                            <div class="form-group">
                                                <label class="col-sm-4 control-label" for="inputContactNo">
                                                    Payment Currency&nbsp;<span class="text-danger">*</span>
                                                </label>
                                                <div class="col-sm-3">
                                                    @Html.DropDownListFor(m => m.PaymentCurr, new SelectList(Model.Payment_Type_List, "CurrencyCode", "Description", "SGD"), new { id = "PaymentCurr", TabIndex = 7, @class = "form-control" })
                                                    @Html.ValidationMessageFor(m => m.PaymentCurr)
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-lg-6" id="re_Claimant_Type_1">
                                            <div class="form-group">
                                                <div class="col-sm-4">
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </fieldset>
                            <fieldset id="Total_Amount_Payable">
                                <legend>Total Amount Payable</legend>
                                <div class="panel-body">
                                    <div class="row">
                                        <div class="col-lg-6" id="re_Original_Amount">
                                            <div class="form-group">
                                                <label class="col-sm-4 control-label" for="inputContactNo">
                                                    Original Currency &nbsp;<span class="text-danger">*</span>
                                                </label>
                                                <div class="col-sm-3">
                                                    @Html.DropDownListFor(m => m.PayableOrgID, new SelectList(Model.Payment_Type_List, "CurrencyCode", "Description", "SGD"), new { id = "PayableOrgID", TabIndex = 8, @class = "form-control" })
                                                    @Html.ValidationMessageFor(m => m.PayableOrgID)
                                                </div>
                                                <div class="col-lg-4" id="re_Original_Amount_Currency">
                                                    @Html.TextBoxFor(m => m.PayableOrgAmt, new { id = "PayableOrgAmt", @class = "form-control", TabIndex = 9, maxlenght = 30, @Value = @PayableOrgAmt })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-lg-6" id="re_Original_Amt_Cur">
                                            <div class="form-group">
                                                <label class="col-sm-8 control-label" style="margin-left: -140px;">
                                                    @Html.ValidationMessageFor(m => m.PayableOrgAmt)
                                                </label>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-lg-6" id="re_Base">
                                            <div class="form-group">
                                                <label class="col-sm-4 control-label" for="inputContactNo">
                                                    Local Currency&nbsp;<span class="text-danger">*</span>
                                                </label>
                                                <div class="col-sm-3">
                                                    @Html.DropDownListFor(m => m.PayableLocalID, new SelectList(Model.Payment_Type_List, "CurrencyCode", "Description", "SGD"), new { id = "PayableBaseID", TabIndex = 10, @class = "form-control" })
                                                    @Html.ValidationMessageFor(m => m.PayableLocalID)
                                                </div>
                                                <div class="col-lg-4" id="re_Base_Currency">
                                                    @Html.TextBoxFor(m => m.PayableLocalAmt, new { id = "PayableLocalAmt", @class = "form-control", TabIndex = 11, maxlenght = 30, @Value = @PayableLocalAmt })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-lg-6" id="re_B_Currency">
                                            <div class="form-group">
                                                <label class="col-sm-8 control-label" style="margin-left: -152px;">
                                                    @* @Html.ValidationMessageFor(m => m.PayableLocalAmt)*@
                                                </label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </fieldset>
                            @Html.HiddenFor(m => m.Prop1, new { id = "Prop1", @class = "form-control", maxlength = 30, @Value = @prop })
                            @Html.HiddenFor(m => m.Hclaimant, new { id = "Hclaimant", @class = "form-control", maxlength = 30, @Value = @Hclaimant })
                            <div class="row">
                                <div class="clearfix igr col-md-12 text-center">
                                    <button class="btn btn-info" id="btnSave" tabindex="12">
                                        Save</button>
                                    <button type="button" class="btn btn-info" onclick="onclickcancel();" tabindex="13">
                                        Reset</button>
                                    <a id="ClaimFinanceEditorTab" class="btn btn-info">Finance Breakdown</a>
                                </div>
                            </div> 
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        if (getQueryVariable("claimMode") == 'Recovery') {
            $("#OpenNewPayment,#ViewPaymentHistory").hide();
            $("#OpenRecovery,#ViewCLMrecoveryHistory").show();
        }
        else {
            $("#OpenRecovery,#ViewCLMrecoveryHistory").hide();
        }
        $("#PayableLocalAmt").prop("readonly", true);
        $("#PayableOrgAmt").blur(function () {
            $("#PayableLocalAmt").val($("#PayableOrgAmt").val() == "" ? "0.00" : $("#PayableOrgAmt").val());
        });
        $("#PaymentCurr option[value!='SGD']").remove();
        $("#PayableOrgID option[value!='SGD']").remove();
        $("#PayableBaseID option[value!='SGD']").remove();
        $("#PaymentCurr,#PayableOrgID,#PayableBaseID").css({ "pointer-events": "none", "cursor": "default" }).css('background-color', '#eee');
        $('div.ui-dialog.ui-widget.ui-widget-content.ui-corner-all.ui-front.alert.ui-draggable').css("top", "130px !important");
        $.validator.methods.date = function (value, element) {
            var isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);
            if (isChrome) {
                var d = new Date();
                return this.optional(element) || !/Invalid|NaN/.test(new Date(d.toLocaleDateString(value)));
            } else {
                return this.optional(element) || !/Invalid|NaN/.test(new Date(value));
            }
        };
        $.validator.unobtrusive.adapters.add("notequalto", ["other"], function (a) {
            a.rules.notEqualTo = "#" + a.params.other;
            a.message && (a.messages.notEqualTo = a.message)
        });
        $.validator.addMethod("notEqualTo", function (a, b, c) {
            return this.optional(b) || a != $(c).val()
        }, "");

        $("#ViewPaymentHistory,#OpenRecovery,#ViewCLMrecoveryHistory,#ClaimFinanceEditorTab").click(function (event) {
            var id = this.id, uuid = guid(), nuuid = "#" + uuid;
            var str = id == "ViewPaymentHistory" ? '<div id="' + uuid + '" title="Payment History" style="overflow: hidden;"></div>' : id == "OpenRecovery" ? '<div id="' + uuid + '" title="Claim Recovery" style="overflow: hidden;"></div>' : id == "ClaimFinanceEditorTab" ? '<div id="' + uuid + '" title="Claim Finance" style="overflow: hidden;"></div>' : '<div id="' + uuid + '" title="Claim Recovery History" style="overflow: hidden;"></div>';
            $(str).appendTo(".PaymentDialogue")
            InitializeDialog($(nuuid), id);
            event.preventDefault();
            $(nuuid).dialog("open");
            $('div.ui-dialog.ui-widget.ui-widget-content.ui-corner-all.ui-front.alert.ui-draggable').css("top", "130px !important");
            $('div.ui-dialog.ui-widget.ui-widget-content.ui-corner-all.alert.ui-draggable').css("top", "130px !important");
            return false;
        });

        function InitializeDialog($element, id) {
            $element.dialog({
                width: id == "OpenRecovery" ? "800" : "1300",
                resizable: false,
                draggable: true,
                show: { effect: 'drop', direction: "up" },
                title: id == "OpenRecovery" ? "Claim Recovery" : id == "ViewPaymentHistory" ? "Payment History" : id == "ClaimFinanceEditorTab" ? "Claim Finance" : "Claim Recovery History",
                model: true,
                show: 'slide',
                dialogClass: 'alert',
                closeOnEscape: true,
                open: function (event, ui) {
                    var path = id == "OpenRecovery" ? '@Url.Content("~/ClaimProcessing/CLMClaimRecovery")' : id == "ViewPaymentHistory" ? '@Url.Content("~/ClaimProcessing/ClaimPaymentall")' : id == "ClaimFinanceEditorTab" ? '@Url.Content("~/ClaimProcessing/ClaimFinanceEditor")' : '@Url.Content("~/ClaimProcessing/CLMClaimRecoveryALL")';
                    var path1 = "?ClaimId=" + getQueryVariable("ClaimId") + "&uid=" + guid();
                    var cid = path + path1;
                    $element.load(cid);
                },
                position: {
                    my: "center",
                    at: "center",
                    of: window
                },
                close: function () {
                    $element.dialog('destroy').remove();
                }

            });

        };

        $(function () {
            $(document).on("focus", ":input", function () {
                $(this).attr("autocomplete", "off")
            });
            $("#PaymentDueDate").datepicker({
                dateFormat: "dd/mm/yy",
                showStatus: !0,
                showWeeks: !0,
                currentText: "Now",
                autoSize: !0,
                gotoCurrent: !0,
                showAnim: "blind",
                highlightWeek: !0,
                changeMonth: !0,
                changeYear: !0,
                yearRange: "1951:2050",
                onSelect: function (date) {
                    $("#PaymentDueDate").focus();
                }
            })
        });
        $("input[type=text]").bind("copy paste cut", function (a) {
            a.preventDefault()
        }).css("cursor", "pointer").change(function () {
            $("#result").hide()
        }).blur(function () {
            var a = $(this).val();
            if ("" != a && !1 == /^[^.]+$/.test(a)) {
                var a = a.split("."),
        b = 2 < String(a[1]).length ? String(a[1]).substring(0, 2) : 1 == String(a[1]).length ? String(a[1]) + "0" : String(a[1]);
                $(this).val(String(a[0]) + "." + b)
            };
        });
        $("select").change(function () {
            $("#result").hide()
        });
       $("#OpenNewPayment").click(function () {
            $("#NewPaymentEditor").toggle();
            $("#OpenNewPayment").text(function (a, b) {
                return "block" == $("#NewPaymentEditor").css("display") || "inline" == $("#NewPaymentEditor").css("display") ? "Hide New Payment" : "Add New Payment"
            });
            $("#PayableOrgAmt,#PayableLocalAmt").val("0.00");
            $("#Payee,#PayeeAdd").val("");
            $("#result").hide();
            $("select").prop("selectedIndex", 0);
            $("#PaymentCurr option[value='SGD']").attr("selected", "selected");
            $("#PayableOrgID option[value='SGD']").attr("selected", "selected");
            $("#PayableBaseID option[value='SGD']").attr("selected", "selected");
            $('span.field-validation-error').removeClass('field-validation-error').addClass('field-validation-valid');
        });
        "block" == $("#NewPaymentEditor").css("display") || "inline" == $("#NewPaymentEditor").css("display") ? $("#OpenNewPayment").text("Hide New Payment") : $("#OpenNewPayment").text("Add New Payment");
        $("#PayableOrgAmt,#PayableLocalAmt").change(function () {
            var a = "#" + this.id;
            $(a).val("" == $(a).val() ? $(a).val() : $(a).val().contains(".") ? $(a).val() : numberWithCommas(parseInt($(a).val())) + ".00")
        }).keypress(function () {
            var a = $("#" + this.id).val().length;
            if (10 > parseInt(a)) {
                var a = "#" + this.id,
                b = event.type,
                b = b.which ? b.which : event.keyCode;
                return 46 != b && 31 < b && (48 > b || 57 < b) ? ($(a).focus(), !1) : !0
            }
            return !1
        });
        $("#Payee").keypress(function () {
            var a = $("#Payee").val().length;
            if (30 > parseInt(a)) {
                $(this);
                var b = b || event,
                a = 32 == b.keyCode ? !0 : /[a-z]+$/i.test(String.fromCharCode(b.keyCode || b.which));
                return !1 == a ? !1 : a
            }
            return !1
        });
        $("#PayeeAdd").keypress(function () {
            var a = $("#PayeeAdd").val().length;
            return 50 > parseInt(a) ? !0 : !1
        })
    });

    function onclickcancel() {
        $("#PayableOrgAmt,#PayableLocalAmt").val("0.00");
        $("#Payee,#PayeeAdd").val("");
        $("#result").hide();
        $("select").prop("selectedIndex", 0);
        $("#PaymentCurr option[value='SGD']").attr("selected", "selected");
        $("#PayableOrgID option[value='SGD']").attr("selected", "selected");
        $("#PayableBaseID option[value='SGD']").attr("selected", "selected");
        $('span.field-validation-error').removeClass('field-validation-error').addClass('field-validation-valid');
    }
    function numberWithCommas(a) {
        if (/^[^.]+$/.test(a)) {
            a = a.toString();
            for (var b = /(-?\d+)(\d{3})/; b.test(a); ) a = a.replace(b, "$1,$2");
            return a
        }
        else {
            return a
        }
    }

    function removecomma(a) {
        return parseInt(a.substring(0, a.indexOf(".")).replace(/,/g, ""))
    }
    function getQueryVariable(a) {
        for (var e = "@MCAS.Web.Objects.CommonHelper.MenuListItem.ClaimTabs.GetQueryStringVal()".replace(/amp;/ig, "").split("&"), d = 0; d < e.length; d++) {
            var b = e[d].split("=");
            if (b[0] == a) return b[1]
        }
    };
    var guid = (function () {
        function s4() {
            return Math.floor((1 + Math.random()) * 0x10000)
               .toString(16)
               .substring(1);
        }
        return function () {
            return s4() + s4() + '-' + s4() + '-' + s4() + '-' +
           s4() + '-' + s4() + s4() + s4();
        };
    })();
    String.prototype.contains = function (a) {
        return -1 != this.indexOf(a)
    };
    
    $(function () {
        var claimentStatus = '@ViewData["EnableTab"]';
        enableTPTab(claimentStatus.toLowerCase());
    });
    $(function () {
        var ODStatus = '@ViewData["EnableODTab"]';
        enableODTab(ODStatus.toLowerCase());
    });
   
</script>
<script type="text/javascript">
    $(function () {
        $("#sidebar").css("position", "fixed").css("z-index", "1033");
        $("#header").addClass("navbar-fixed-top");
        $("#reg2").css("top", $("#header").height());
        $("#toprow").css("top", $("#top").height()).css("width", $("#reg").width()).css("padding-right", "0");
        $("#top").css("top", parseInt($("#header").height()) + parseInt($("#reg2").height())).css("width", $("#reg").width()); ;
        $("#testdiv").css("height", parseInt($("#top").css("top")) + parseInt($("#header").height()) + parseInt($("#reg2").css("top")));
    });
</script>