@model MCAS.Web.Objects.MastersHelper.FALModel
@using MCAS.Web.Objects.CommonHelper
@using MCAS.Globalisation;
@{
    ViewBag.Title = "FALEditor";
    Layout = "~/Views/Shared/_SystemAdminLayout.cshtml";
    var mMCASQueryString = Html.MCASQueryString(Request.QueryString);
    var pageMode = mMCASQueryString["pageMode"] == null ? "" : Convert.ToString(mMCASQueryString["pageMode"]);
    var btndisplay = pageMode == "View" ? "none" : "inline";
    SecurityPermissions myPemissions = (SecurityPermissions)ViewData["UserPermissions"];
    System.Resources.ResourceManager PageResource = (new MCAS.Web.Objects.MastersHelper.TransactionModel()).GetResourceManager(Model.Resource);
}
<script src="@Url.Content("~/Scripts/jquery-2.1.0.min.js")" type="text/javascript"></script>
<div class="dashboard-wrapper">
    <div class="container">
        <div class="row page-title">
            <div class="col-lg-12">
                <h2>@MCAS.Web.Objects.Resources.Common.Common.SystemAdmin</h2>
                <ul class="breadcrumb">
                    <li>@PageResource.GetString("FinanceAuthorityLimitDetails")</li></ul>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                <div class="panel panel-info">
                    <div class="panel-heading clearfix">
                        <i class="icon-check-sign"></i>
                        <h3 class="panel-title">@PageResource.GetString("FinanceAuthorityLimitDetails")</h3>
                    </div>
                    <div style="color: Red; font-weight: bold;" class="has-error" id="error">
                        <p align="center">
                            @if (TempData["result"] != null)
                            {
                                @TempData["result"]
                            }
                        </p>
                    </div>
                    <div class="panel-body" id="mainfieldset">
                        @using (Html.BeginForm("FALEditor", "FAL", FormMethod.Post, new { role = "form", id = "FALEditor", name = "FALEditor", @class = "form-horizontal" }))
                        {
                            @Html.ValidationSummary(true)
                            @Html.HiddenFor(m => m.FALId)
                            @Html.HiddenFor(m => m.HdnId)
                            <div id="t2">
                                <div class="row top-buffer">
                                    <div class="clearfix igr col-md-12">
                                        <div class="col-sm-2">
                                            <label>@PageResource.GetString("FALAccessCategory") &nbsp;<span class="text-danger">*</span></label>
                                        </div>
                                        <div class="col-sm-4">
                                            @Html.DropDownListFor(m => m.FALAccessCategory, new SelectList(Model.FALCatlist, "Lookup_value", "Lookup_desc"), new { id = "FALCat", @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.FALAccessCategory)
                                        </div>
                                        <div class="col-sm-2">
                                    <label>@PageResource.GetString("FALLevelName")&nbsp;<span class="text-danger">*</span>
                                    </label>
                                </div>
                                <div class="col-sm-4">
                                    @Html.TextBoxFor(m => m.FALLevelName, new { @class = "col-lg-12 form-control", id = "inputFALName", @maxlength = 40 })
                                    @Html.ValidationMessageFor(m => m.FALLevelName)
                                </div>
                                    </div>
                                </div>
                                <div class="row top-buffer">
                                    <div class="clearfix igr col-md-12">
                                        <div class="col-sm-2">
                                            <label>@PageResource.GetString("UnlimitedAmt")</label>
                                        </div>
                                        <div class="col-sm-4">
                                            @Html.RadioButtonForSelectList(m => m.UnlimitedAmt, Model.unlimitedAmtlist)
                                        </div>

                                        <div class="col-sm-2">
                                            <label>@PageResource.GetString("Amount")&nbsp;<span class="text-danger">*</span></label>
                                        </div>
                                        <div class="col-sm-4">
                                             @Html.TextBoxFor(m => m.Amount, new { id = "txtAmount", @maxlength = "14", @class = "form-control format Number" })
                                             @Html.ValidationMessageFor(m => m.Amount)
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row top-buffer">
                            </div>
                            <div class="row top-buffer">
                            </div> 

                        
                            <div class="row top-buffer">
                                <div class="clearfix igr col-md-12 text-center">
                                    @if (@myPemissions.Write)
                                    {
                                        <button id="btnSave" style="display:@btndisplay" class="btn btn-info">@PageResource.GetString("Save")</button>
                                    }
                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                    @Html.ActionLink(@PageResource.GetString("Back"), "FALIndex", null, new { @class = "btn btn-info" })&nbsp;&nbsp;&nbsp;
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="panel">
            @Html.Partial("~/Views/Shared/_TimeStamp.cshtml", Model)
        </div>
    </div>
</div>
<script type="text/javascript">
    var do_on_load = function () {
        if ($("#HdnId").val() == 1) {
            $("#txtAmount").attr('readonly', 'readonly').css("background-color", "#eee");
        }

        function getQueryVariable(a) {
            for (var e = "@MenuListItem.ClaimTabs.GetQueryStringVal()".replace(/amp;/ig, "").split("&"), d = 0; d < e.length; d++) {
                var b = e[d].split("=");
                if (b[0] == a) return b[1]
            }
        };

        $("#inputFALName").blur(function (event) {
            var falName = $.trim($("#inputFALName").val());
            var falcat = $("#FALCat option:selected").text();
            $.ajax({
                type: "POST",
                url: '@Url.Action("FALNameExists", "FAL")',
                data: {
                    falnameId: falName,
                    falcat: falcat
                },
                success: function (a) {
                    if (a == true && (getQueryVariable("pageMode") != "Edit")) {
                        alert("Duplicate FAL Level Name.");
                        $("#btnSave").attr("disabled", "disabled");
                    }
                    else if (($("#inputFALName").val() != '@Model.FALId') && a == true) {
                        alert("Duplicate FAL Level Name.");
                        $("#btnSave").attr("disabled", "disabled");
                    }
                    else {
                        $("#btnSave").removeAttr("disabled");
                    }
                }
            });
        });

        $("#btnSave").click(function () {
            if (!IsPageChanged()) return !1;
            FormatValue();
        });
    };


$(document).ready(do_on_load);
    $(window).bind('page:change', do_on_load);

    $(document).on("focus", ":input", function () {
        $(this).attr("autocomplete", "off")
    });

    if ('@pageMode' == 'View') {
        $('#t2').find('input, textarea, button, select').attr('disabled', 'disabled');
    }

    $(function () {
        $('.RadioButton').click(function () {
            var checkedradio = $('[name="UnlimitedAmt"]:radio:checked').val();
            var amtvaldisp = 0;
            if (checkedradio == "Y") {
                $("#txtAmount").attr('readonly', 'readonly').css("background-color", "#eee");
                $("#txtAmount").val("999999999.99");
                amtvaldisp = 1;
                $("#HdnId").val(amtvaldisp);
            }
            else
            {
                $("#txtAmount").removeAttr('readonly', 'readonly');
                $("#txtAmount").css("background-color", "")
                $("#txtAmount").val("");
                amtvaldisp = 0;
                $("#HdnId").val(amtvaldisp);
            }
        });
    });

    
    var falAccessCategory = "";
    $('#FALCat option:selected').each(function () {
        if ($(this).attr("selected", "selected")) {
            falAccessCategory = "1";
            return false;
        }
    });
    if (falAccessCategory != "1") {
        $("#FALCat option[value='']").attr('selected', true);
    }

    function FormatValue() {
        $("input[type=text]").each(function () {
            if ($(this).hasClass("format") && "" != $(this).val()) {
                var a = $(this).context.id, b = $(this).val().replace(/,/g, "");
                $("#" + a).val(b.replace("NaN", "0"))
            }
        });
    };
</script>
