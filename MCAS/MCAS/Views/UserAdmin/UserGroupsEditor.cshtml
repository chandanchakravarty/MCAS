@model MCAS.Web.Objects.MastersHelper.GroupMastersListItems
@using MCAS.Web.Objects.CommonHelper
@using MCAS.Globalisation
@{
    var mMCASQueryString = Html.MCASQueryString(Request.QueryString);
    ViewBag.Title = "UserGroupsEditor";
    Layout = "~/Views/Shared/_SystemAdminLayout.cshtml";
    var pageMode = mMCASQueryString["pageMode"];
    var vMode = mMCASQueryString["mode"] == null ? "" : mMCASQueryString["mode"];
    var ck = ViewData["SelectedPermission"];
    var grpId = ViewData["GroupId"];
    var sp1 = false;
    var sp2 = false;
    var sp3 = false;
    var sp4 = false;
    var claim1 = false;
    var claim2 = false;
    var claim3 = false;
    var claim4 = false;
    var at1 = false;
    var at2 = false;
    var at3 = false;
    var at4 = false;
    var sa1 = false;
    var sa2 = false;
    var sa3 = false;
    var sa4 = false;
    var btndisplay = "yes";
    if (pageMode == "View")
    {
        btndisplay = "none";
    }
    SecurityPermissions myPemissions = (SecurityPermissions)ViewData["UserPermissions"];
    System.Resources.ResourceManager PageResource = (new MCAS.Web.Objects.MastersHelper.TransactionModel()).GetResourceManager(Model.Resource);
    System.Resources.ResourceManager MenuResource = (new MCAS.Web.Objects.MastersHelper.TransactionModel()).GetResourceManager("MCAS.Web.Objects.Resources.Common.Menu");
    string isEncryptedParams = System.Configuration.ConfigurationManager.AppSettings["EncryptQueryParams"].ToUpper();
}
<style type="text/css">
    td.vcenter
    {
        vertical-align: baseline;
        text-align: justify;
        word-break: break-all;
    }
    td.vleft
    {
        vertical-align: baseline;
        text-align: left;
        word-break: break-all;
    }
    td.vright
    {
        vertical-align: baseline;
        text-align: right;
        word-break: break-all;
    }
    input[type=text], textarea
    {
        text-transform: capitalize;
    }
</style>
<script src='@Url.Content("~/Scripts/jquery-2.1.0.min.js")' type="text/javascript"></script>
<script src='@Url.Content("~/Scripts/jquery.validate.min.js")' type="text/javascript"></script>
<script src='@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")' type="text/javascript"></script>
<div class="dashboard-wrapper">
    <div class="container">
        <div class="row page-title">
            <div class="col-lg-12">
                <h2>@MCAS.Web.Objects.Resources.Common.Common.SystemAdmin</h2>
                <ul class="breadcrumb">
                    <li>@PageResource.GetString("UserAdmin")</li>
                    <li>@PageResource.GetString("UserGroupsDetails")</li>
                </ul>
            </div>
        </div>
        <hr />
        <div class="row">
            <div class="col-lg-12 text-left">
                <div class="btn-group less-bottom-margin">
                    @*<a class="btn btn-default" href='@Url.Action("UserEntityIndex", "UserAdmin")'>Entity Details</a> *@
                    <a class="btn btn-info" href='@Url.Action("UserGroupsIndex", "UserAdmin")'>@PageResource.GetString("UserGroups")</a>
                    <a class="btn btn-default" href='@Url.Action("UserAdminMastersList", "UserAdmin")'>@PageResource.GetString("User")</a>
                    <a class="btn btn-default" href='@Url.Action("UserDeptIndex", "UserAdmin")'>@PageResource.GetString("DepartmentMaster")</a>
                    <a class="btn btn-default" href='@Url.Action("PasswordSetUpEditor", "UserAdmin")'>@PageResource.GetString("PasswordSetup")</a>
                    @*<a class="btn btn-default" href='@Url.Action("ReleasedLockedUser", "UserAdmin")'>Release Locked Users</a>  <a class="btn btn-default" href='@Url.Action("UserCountryIndex", "UserAdmin")'>Country for User Access</a>*@
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                <div class="panel panel-info">
                    <div class="panel-heading clearfix">
                        <i class="icon-check-sign"></i>
                        <h3 class="panel-title">@PageResource.GetString("UserGroupsDetails")</h3>
                    </div>
                    <div style="color: Red; font-weight: bold;" class="has-error" id="error">
                        <p align="center">
                            @if (TempData["notice"] != null)
                            {
                                @TempData["notice"]
                            }
                        </p>
                    </div>
                    @{
                        object routes = new { pageMode = @pageMode };
                        if (isEncryptedParams.ToUpper() == "YES")
                        {
                            string res = RouteEncryptDecrypt.getRouteString(routes);
                            res = RouteEncryptDecrypt.Encrypt(res);
                            routes = new { Q = res };
                        }
                    }
                    <div class="panel-body">
                        @using (Html.BeginForm("UserGroupsEditor", "UserAdmin", routes, FormMethod.Post, new { role = "form", @class = "form-horizontal", id = "usergroupform", name = "usergroupform" }))
                        {
                            @Html.ValidationSummary(true)
                            <div class="row">
                                <div class="col-lg-6">
                                    @Html.HiddenFor(m => m.GroupId)
                                    @Html.HiddenFor(m => m.hiddentab)
                                    <label class="col-sm-3 " for="inputGroupCode">
                                        @PageResource.GetString("GroupCode") &nbsp;<span class="text-danger">*</span></label>
                                    <div class="col-sm-9">
                                        @Html.TextBoxFor(m => m.GroupCode, new { id = "GroupCode", @class = "form-control", @maxlength = 2 })
                                        @Html.ValidationMessageFor(m => m.GroupCode)<br />
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <label class="col-sm-3 " for="inputGropuName">
                                        @PageResource.GetString("GroupName") &nbsp;<span class="text-danger">*</span></label>
                                    <div class="col-sm-9">
                                        @Html.TextBoxFor(m => m.GroupName, new { id = "GroupName", @class = "form-control", @maxlength = 50 })
                                        @Html.ValidationMessageFor(m => m.GroupName)<br />
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-6">
                                    <label class="col-sm-3 " for="inputDepartment">
                                        @PageResource.GetString("Department") &nbsp;<span class="text-danger">*</span></label>
                                    <div class="col-sm-9">
                                        @Html.DropDownListFor(m => m.DeptCode, new SelectList(Model.deptlist, "DeptCode", "DeptName"), new { @class = "col-lg-12 form-control" })
                                        @Html.ValidationMessageFor(m => m.DeptCode)
                                        <br />
                                        <br />
                                        <br />
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <label class="col-sm-3" for="inputAccessLevel">
                                        @PageResource.GetString("AccessLevel")</label>
                                    <div class="col-sm-9">
                                        @Html.DropDownListFor(m => m.AccessLevel, new SelectList(Enumerable.Range(0, 11).ToList()), new { @class = "col-lg-12 form-control" })<br />
                                        <br />
                                        <br />
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-6">
                                    <label class="col-sm-3 " for="inputIsActive">
                                        @PageResource.GetString("Status") &nbsp;<span class="text-danger">*</span></label>
                                    <div class="col-sm-9">
                                        @Html.DropDownListFor(m => m.IsActive, new SelectList(Model.Statuslist, "Lookup_value", "Lookup_desc", "Active"), new { @class = "col-lg-12 form-control" })<br />
                                        @Html.ValidationMessageFor(m => m.IsActive)
                                        <br />
                                        <br />
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <label class="col-sm-3 " for="">
                                        @PageResource.GetString("UserRoleAssignment") &nbsp;<span class="text-danger">*</span></label>
                                    <div class="col-sm-9">
                                        @Html.DropDownListFor(m => m.RoleCode, new SelectList(Model.Rolelist, "Lookup_value", "Lookup_desc"), new { @class = "col-lg-12 form-control" })
                                        @Html.ValidationMessageFor(m => m.RoleCode)
                                        <br />
                                        <br />
                                        <br />
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-12 text-left">
                                    <p class="bg-primary" style="line-height: 2.4em;">
                                        <strong>@PageResource.GetString("SelectPermissionList")</strong></p>
                                    <div class="col-lg-12 col-md-12 col-sx-12 col-sm-12">
                                        <ul class="nav nav-tabs" id="myTab1">
                                            <li id="DiaryTab"><a data-toggle="tab" id="DiaryANC" href="#Diary">@PageResource.GetString("Dashboard")</a></li>
                                            <li id="ClaimsTab"><a data-toggle="tab" id="ClaimsANC" href="#Claims">@PageResource.GetString("ClaimsMenus")</a></li>
                                            <li id="ClaimsScreenTab"><a data-toggle="tab" id="ClaimsScreenANC" href="#ClaimsScreen">@PageResource.GetString("ClaimsScreens")</a></li>
                                            <li id="SystemAdminTab"><a data-toggle="tab" id="SystemAdminANC" href="#SystemAdmin">@MCAS.Web.Objects.Resources.Common.Common.SystemAdmin</a></li>
                                            <li id="OthersTab"><a data-toggle="tab" id="OthersANC" href="#Others">@PageResource.GetString("Attachments")</a></li>
                                        </ul>
                                        <div class="tab-content" id="myTabContent2">
                                            <div class="tab-pane fade active in" id="Diary">
                                                <div class="row">
                                                    <div class="col-lg-12">
                                                        <div class="panel panel-info" id="divTabDiary">
                                                            <div class="panel-body">
                                                                <div class="form-group">
                                                                    <div class="col-sm-12">
                                                                        <div class="table-responsive">
                                                                            <table width="100%" class="table no-border">
                                                                                <thead>
                                                                                    <tr>
                                                                                        <th colspan="2" style="width: 40%;" class="info">
                                                                                            <input type="checkbox" checked="@sa2" class="Write uncheck" name="" value='Write' id="selectall" childchk="dash" />
                                                                                            @PageResource.GetString("DashBoardScreen")
                                                                                        </th>
                                                                                        <th style="width: 15%;">
                                                                                            <input type="checkbox" checked="@sa2" class="Read uncheck" name="" value='Read' id="chkRead" childchk="dash" mainchkread="dashread" />
                                                                                            @PageResource.GetString("Read")
                                                                                        </th>
                                                                                        <th style="width: 10%;">
                                                                                            @PageResource.GetString("SpecialPermission")
                                                                                        </th>
                                                                                        <th style="width: 10%;">
                                                                                        </th>
                                                                                        <th style="width: 20%;">
                                                                                        </th>
                                                                                    </tr>
                                                                                </thead>
                                                                                @{
                            var DiaryTabList = Model.menulist.Where(m => m.TabId == "DIARY" || m.TabId == "DASH").ToList();
                            for (var k = 0; k < DiaryTabList.Count; k++)
                            {

                                var item = DiaryTabList[k];
                                var menucode = "";
                                var isSelected = false;
                                var chkRead4 = "";
                                var chkWrite4 = "";
                                var chkDelete4 = "";
                                var chkSpl4 = "";
                                var list3 = DiaryTabList.Where(m => m.MainHeaderId == item.MenuId).OrderBy(m => Int32.Parse(m.SubTabId)).ToList();
                                if (@vMode == "Addnew")
                                {
                                    menucode = Convert.ToString(item.MenuId);
                                    //var list3 = DiaryTabList.Where(m => m.MainHeaderId == item.MenuId).OrderBy(m => Int32.Parse(m.SubTabId)).ToList();
                                    //var selectedmenu = @ViewData["SelectedGroupMenu"] == null ? "" : @ViewData["SelectedGroupMenu"]; 
                                    //if (selectedmenu != null) isSelected = selectedmenu.ToString().Contains(@menucode); 
                                    isSelected = true;
                                    chkRead4 = "chkRead" + @item.MenuId;
                                    chkWrite4 = "chkWrite" + @item.MenuId;
                                    chkDelete4 = "chkDelete" + @item.MenuId;
                                    chkSpl4 = "chkSpl" + @item.MenuId;
                                    var index = ck == "" ? -1 : ck == null ? -1 : Array.IndexOf(ck.ToString().Split('~'), Convert.ToString(@item.MenuId));
                                    //sa1 = index == -1 ? false : ck == null ? false : ck.ToString().Split('~').Contains(Convert.ToString(@item.MenuId)) ? Convert.ToBoolean(ck.ToString().Split('~')[index - 4]) : false; 
                                    sa1 = true;
                                    sa2 = index == -1 ? false : ck == null ? false : ck.ToString().Split('~').Contains(Convert.ToString(@item.MenuId)) ? Convert.ToBoolean(ck.ToString().Split('~')[index - 3]) : false;
                                    sa3 = index == -1 ? false : ck == null ? false : ck.ToString().Split('~').Contains(Convert.ToString(@item.MenuId)) ? Convert.ToBoolean(ck.ToString().Split('~')[index - 2]) : false;
                                    sa4 = index == -1 ? false : ck == null ? false : ck.ToString().Split('~').Contains(Convert.ToString(@item.MenuId)) ? Convert.ToBoolean(ck.ToString().Split('~')[index - 1]) : false;
                                }
                                else
                                {
                                    menucode = Convert.ToString(item.MenuId);
                                    chkRead4 = "chkRead" + @item.MenuId;
                                    chkWrite4 = "chkWrite" + @item.MenuId;
                                    chkDelete4 = "chkDelete" + @item.MenuId;
                                    chkSpl4 = "chkSpl" + @item.MenuId; var index = ck == "" ? -1 : ck == null ? -1 : Array.IndexOf(ck.ToString().Split('~'), Convert.ToString(@item.MenuId)); sa1 = index == -1 ? false : ck == null ? false : ck.ToString().Split('~').Contains(Convert.ToString(@item.MenuId)) ? Convert.ToBoolean(ck.ToString().Split('~')[index - 4]) : false; sa2 = index == -1 ? false : ck == null ? false : ck.ToString().Split('~').Contains(Convert.ToString(@item.MenuId)) ? Convert.ToBoolean(ck.ToString().Split('~')[index - 3]) : false; sa3 = index == -1 ? false : ck == null ? false : ck.ToString().Split('~').Contains(Convert.ToString(@item.MenuId)) ? Convert.ToBoolean(ck.ToString().Split('~')[index - 2]) : false; sa4 = index == -1 ? false : ck == null ? false : ck.ToString().Split('~').Contains(Convert.ToString(@item.MenuId)) ? Convert.ToBoolean(ck.ToString().Split('~')[index - 1]) : false;
                                    var selectedmenu = @ViewData["SelectedGroupMenu"] == null ? "" : @ViewData["SelectedGroupMenu"];
                                    if (selectedmenu != null && (sa1 != false || sa2 != false || sa3 != false || sa4 != false)) isSelected = selectedmenu.ToString().Contains(@menucode);

                                } 
                                                                                    
                                                                                    <tbody style="border: none;">
                                                                                        @if (@item.IsHeader != "Y" && @item.SubMenu != "Y")
                                                                                        { 
                                                                                            <tr>
                                                                                                <td style="width: 1%; text-indent: 12px;">
                                                                                                    <input type="checkbox" id="@item.MenuId" checked="@isSelected" value='@item.MenuId' name="query_Menulist" childchk="dash" chkdashread="dashread" />
                                                                                                </td>
                                                                                                <td class="vleft" style="width: 39%; padding-left: 0px;">
                                                                                                    @MenuResource.GetString(Convert.ToString(@item.MenuId))
                                                                                                </td>
                                                                                                <td style="width: 15%; background-color: white">
                                                                                                    <input type="checkbox" checked="@sa1" class="Read" name="@item.MenuId" value='Read' id="@chkRead4" childchk="dash" childread="dashread"/>
                                                                                                </td>
                                                                                                <td style="width: 15%; background-color: white">
                                                                                                </td>
                                                                                                <td style="width: 15%; background-color: white">
                                                                                                </td>
                                                                                                <td style="width: 15%; background-color: white">
                                                                                                </td>
                                                                                            </tr>
                                                                                        }
                                                                                        else if (@item.IsHeader == "Y")
                                                                                        { 
                                                                                            <tr class="info">
                                                                                                <td style="width: 1%; text-indent: 12px;">
                                                                                                    <input type="checkbox" id="@item.MenuId" pid="@item.MenuId" checked="@isSelected" value='@item.MenuId' name="query_Menulist" childchk="dash" chkdashread="dashread"/>
                                                                                                </td>
                                                                                                <td class="vleft" style="width: 39%; padding-left: 0px;">
                                                                                                    <b>@MenuResource.GetString(Convert.ToString(@item.MenuId))</b>
                                                                                                </td>
                                                                                                <td style="width: 15%; background-color: white">
                                                                                                    <input type="checkbox" checked="@sa1" class="Read" name="@item.MenuId" value='Read' id="@chkRead4" childchk="dash" childread="dashread" />
                                                                                                </td>
                                                                                                <td style="width: 15%; background-color: white">
                                                                                                    @if (@item.AdminDisplayText == "Alert")
                                                                                                    {
                                                                                                        <input type="checkbox" checked="@sa4" class="Spl" name="@item.MenuId" value='Spl' id="@chkSpl4" childchk="dash" childread="dashread"/>   @PageResource.GetString("Reassign")
                                                                                                    }
                                                                                                </td>
                                                                                                <td style="width: 15%; background-color: white">
                                                                                                </td>
                                                                                                <td style="width: 15%; background-color: white">
                                                                                                </td>
                                                                                            </tr>
                                                                                                    for (var i = 0; i < list3.Count; i++)
                                                                                                    {
                                                                                                        var item2 = list3[i];
                                                                                                        var isSelected2 = false;
                                                                                                        var chkRead42 = "";
                                                                                                        var chkWrite42 = "";
                                                                                                        var chkDelete42 = "";
                                                                                                        var chkSpl42 = "";
                                                                                                        if (@vMode == "Addnew")
                                                                                                        {
                                                                                                            chkRead42 = "chkRead" + @item2.MenuId;
                                                                                                            chkWrite42 = "chkWrite" + @item2.MenuId;
                                                                                                            chkDelete42 = "chkDelete" + @item2.MenuId;
                                                                                                            chkSpl42 = "chkSpl" + @item2.MenuId;
                                                                                                            var menuc = Convert.ToString(@item2.MenuId);
                                                                                                            isSelected2 = true;
                                                                                                            var index2 = ck == "" ? -1 : ck == null ? -1 : Array.IndexOf(ck.ToString().Split('~'), Convert.ToString(@item2.MenuId));
                                                                                                            sa1 = index2 == -1 ? false : ck == null ? false : ck.ToString().Split('~').Contains(Convert.ToString(@item2.MenuId)) ? Convert.ToBoolean(ck.ToString().Split('~')[index2 - 4]) : false;
                                                                                                            sa2 = index2 == -1 ? false : ck == null ? false : ck.ToString().Split('~').Contains(Convert.ToString(@item2.MenuId)) ? Convert.ToBoolean(ck.ToString().Split('~')[index2 - 3]) : false;
                                                                                                            sa3 = index2 == -1 ? false : ck == null ? false : ck.ToString().Split('~').Contains(Convert.ToString(@item2.MenuId)) ? Convert.ToBoolean(ck.ToString().Split('~')[index2 - 2]) : false;
                                                                                                            sa4 = index2 == -1 ? false : ck == null ? false : ck.ToString().Split('~').Contains(Convert.ToString(@item2.MenuId)) ? Convert.ToBoolean(ck.ToString().Split('~')[index2 - 1]) : false;
                                                                                                        }
                                                                                                        else
                                                                                                        {
                                                                                                            chkRead42 = "chkRead" + @item2.MenuId;
                                                                                                            chkWrite42 = "chkWrite" + @item2.MenuId;
                                                                                                            chkDelete42 = "chkDelete" + @item2.MenuId;
                                                                                                            chkSpl42 = "chkSpl" + @item2.MenuId;
                                                                                                            var menuc = Convert.ToString(@item2.MenuId);
                                                                                                            var index2 = ck == "" ? -1 : ck == null ? -1 : Array.IndexOf(ck.ToString().Split('~'), Convert.ToString(@item2.MenuId));
                                                                                                            sa1 = index2 == -1 ? false : ck == null ? false : ck.ToString().Split('~').Contains(Convert.ToString(@item2.MenuId)) ? Convert.ToBoolean(ck.ToString().Split('~')[index2 - 4]) : false;
                                                                                                            sa2 = index2 == -1 ? false : ck == null ? false : ck.ToString().Split('~').Contains(Convert.ToString(@item2.MenuId)) ? Convert.ToBoolean(ck.ToString().Split('~')[index2 - 3]) : false;
                                                                                                            sa3 = index2 == -1 ? false : ck == null ? false : ck.ToString().Split('~').Contains(Convert.ToString(@item2.MenuId)) ? Convert.ToBoolean(ck.ToString().Split('~')[index2 - 2]) : false;
                                                                                                            sa4 = index2 == -1 ? false : ck == null ? false : ck.ToString().Split('~').Contains(Convert.ToString(@item2.MenuId)) ? Convert.ToBoolean(ck.ToString().Split('~')[index2 - 1]) : false;
                                                                                                            var selectedmenu = @ViewData["SelectedGroupMenu"] == null ? "" : @ViewData["SelectedGroupMenu"];
                                                                                                            if (selectedmenu != null && (sa1 != false || sa2 != false || sa3 != false || sa4 != false)) isSelected2 = selectedmenu.ToString().Contains(@menuc);

                                                                                                        } 
                                                                                                        
                                                                                            <tr>
                                                                                                <td style="width: 1%; text-indent: 25px;">
                                                                                                </td>
                                                                                                <td class="vleft" style="width: 39%; padding-left: 0px;">
                                                                                                    <input type="checkbox" id="@item2.MenuId" cid="@item.MenuId" checked="@isSelected2" value='@item2.MenuId' name="query_Menulist" childchk="dash" chkdashread="dashread"/>
                                                                                                    @MenuResource.GetString(Convert.ToString(@item2.MenuId))
                                                                                                </td>
                                                                                                <td style="width: 15%; background-color: white">
                                                                                                    <input type="checkbox" checked="@sa1" cid="@item.MenuId" class="Read" name="@item2.MenuId" value='Read' id="@chkRead42" childchk="dash" childread="dashread" />
                                                                                                </td>
                                                                                                <td style="width: 15%; background-color: white">
                                                                                                </td>
                                                                                                <td style="width: 15%; background-color: white">
                                                                                                </td>
                                                                                                <td style="width: 15%; background-color: white">
                                                                                                </td>
                                                                                            </tr>
                                                                                                    }
                                                                                        }
                                                                                    </tbody>
                                                                                    
                            }
                                                                                }
                                                                            </table>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div id="Claims" class="tab-pane fade">
                                                <div class="row">
                                                    <div class="col-lg-12">
                                                        <div class="panel panel-info" id="divTabClaim">
                                                            <div class="panel-body">
                                                                <div class="row">
                                                                    <div class="col-lg-12">
                                                                        <div class="form-group">
                                                                            <div class="col-sm-12">
                                                                                <div class="table-responsive">
                                                                                    <table width="100%" class="table no-border">
                                                                                        <thead>
                                                                                            <tr>
                                                                                                <th colspan="2" style="width: 40%;" class="info">
                                                                                                    <input type="checkbox" checked="@sa2" class="Write uncheck" name="" value='Write' id="SelectAllCm" childchkCm="claimMenu" mainSelect="SelectAllCms"/>
                                                                                                    @PageResource.GetString("ClaimMenus")
                                                                                                </th>
                                                                                                <th style="width: 20%;">
                                                                                                    <input type="checkbox" checked="@sa2" class="Read uncheck" name="" value='Read' id="chkReadCm" childchkCm="claimMenu" mainchkreadCm="readCm" />
                                                                                                    @PageResource.GetString("Read")
                                                                                                </th>
                                                                                                <th style="width: 20%;">
                                                                                                    @*<input type="checkbox" checked="@sa2" class="Write uncheck" name="" value='Write' id="chkWriteCme" childchkCm="claimMenu" mainchkwriteCm="writeCm" />
                                                                                                    Write*@
                                                                                                </th>
                                                                                                @*<th style="width: 20%;">
                                                                                                    <input type="checkbox" checked="@sa2" class="Spl uncheck" name="" value='Write' id="SplCme" childchkCm="claimMenu" mainchksplCm="splCm"/>
                                                                                                    Special Permission
                                                                                                </th>*@
                                                                                            </tr>
                                                                                        </thead>
                                                                                        @{
                            var ClaimMenuTabList = Model.menulist.Where(m => m.TabId == "CLM_REG" || m.TabId == "CLM_PAY" || m.TabId == "CLM_REC" || m.TabId == "CLM_ENQ" || m.TabId == "CLM_UPL" || m.TabId == "CLM_LOG").ToList();
                            for (var k = 0; k < ClaimMenuTabList.Count; k++)
                            {
                                var item = ClaimMenuTabList[k];
                                var menucode = "";
                                var isSelected = false;
                                var chkRead4 = "";
                                var chkWrite4 = "";
                                var chkDelete4 = "";
                                var chkSpl4 = "";
                                var list3 = ClaimMenuTabList.Where(m => m.MainHeaderId == item.MenuId).OrderBy(m => Int32.Parse(m.SubTabId)).ToList();
                                if (@vMode == "Addnew")
                                {
                                    menucode = Convert.ToString(@item.MenuId);
                                    //var selectedmenu = @ViewData["SelectedGroupMenu"] == null ? "" : @ViewData["SelectedGroupMenu"]; var isSelected = false;
                                    //if (selectedmenu != null) isSelected = selectedmenu.ToString().Contains(@menucode); var chkRead4 = "chkRead" + @item.MenuId;
                                    isSelected = true;
                                    chkRead4 = "chkRead" + @item.MenuId;
                                    chkWrite4 = "chkWrite" + @item.MenuId;
                                    chkDelete4 = "chkDelete" + @item.MenuId;
                                    chkSpl4 = "chkSpl" + @item.MenuId;
                                    var index = ck == "" ? -1 : ck == null ? -1 : Array.IndexOf(ck.ToString().Split('~'), Convert.ToString(@item.MenuId));
                                    //sa1 = index == -1 ? false : ck == null ? false : ck.ToString().Split('~').Contains(Convert.ToString(@item.MenuId)) ? Convert.ToBoolean(ck.ToString().Split('~')[index - 4]) : false;
                                    sa1 = true;
                                    sa2 = index == -1 ? false : ck == null ? false : ck.ToString().Split('~').Contains(Convert.ToString(@item.MenuId)) ? Convert.ToBoolean(ck.ToString().Split('~')[index - 3]) : false;
                                    sa3 = index == -1 ? false : ck == null ? false : ck.ToString().Split('~').Contains(Convert.ToString(@item.MenuId)) ? Convert.ToBoolean(ck.ToString().Split('~')[index - 2]) : false;
                                    sa4 = index == -1 ? false : ck == null ? false : ck.ToString().Split('~').Contains(Convert.ToString(@item.MenuId)) ? Convert.ToBoolean(ck.ToString().Split('~')[index - 1]) : false;
                                }
                                else
                                {
                                    menucode = Convert.ToString(@item.MenuId);
                                    chkRead4 = "chkRead" + @item.MenuId;
                                    chkWrite4 = "chkWrite" + @item.MenuId;
                                    chkDelete4 = "chkDelete" + @item.MenuId;
                                    chkSpl4 = "chkSpl" + @item.MenuId;
                                    var index = ck == "" ? -1 : ck == null ? -1 : Array.IndexOf(ck.ToString().Split('~'), Convert.ToString(@item.MenuId));
                                    sa1 = index == -1 ? false : ck == null ? false : ck.ToString().Split('~').Contains(Convert.ToString(@item.MenuId)) ? Convert.ToBoolean(ck.ToString().Split('~')[index - 4]) : false;
                                    sa2 = index == -1 ? false : ck == null ? false : ck.ToString().Split('~').Contains(Convert.ToString(@item.MenuId)) ? Convert.ToBoolean(ck.ToString().Split('~')[index - 3]) : false;
                                    sa3 = index == -1 ? false : ck == null ? false : ck.ToString().Split('~').Contains(Convert.ToString(@item.MenuId)) ? Convert.ToBoolean(ck.ToString().Split('~')[index - 2]) : false;
                                    sa4 = index == -1 ? false : ck == null ? false : ck.ToString().Split('~').Contains(Convert.ToString(@item.MenuId)) ? Convert.ToBoolean(ck.ToString().Split('~')[index - 1]) : false;
                                    var selectedmenu = @ViewData["SelectedGroupMenu"] == null ? "" : @ViewData["SelectedGroupMenu"];
                                    if (selectedmenu != null && (sa1 != false || sa2 != false || sa3 != false || sa4 != false)) isSelected = selectedmenu.ToString().Contains(@menucode);
                                }
                                                                                            <tbody style="border: none;">
                                                                                                @if (@item.IsHeader != "Y" && @item.SubMenu != "Y")
                                                                                                { 
                                                                                                    <tr>
                                                                                                        <td style="width: 1%; text-indent: 12px;">
                                                                                                            <input type="checkbox" id="@item.MenuId" checked="@isSelected" value='@item.MenuId' name="query_Menulist" childchkCm="claimMenu" chkReadCm="readCm" />
                                                                                                        </td>
                                                                                                        <td class="vleft" style="width: 39%; padding-left: 0px;">
                                                                                                            @MenuResource.GetString(Convert.ToString(@item.MenuId))
                                                                                                        </td>
                                                                                                        <td>
                                                                                                            <input type="checkbox" checked="@sa1" class="Read" name="@item.MenuId" value='Read' id="@chkRead4" childchkCm="claimMenu" chkReadCm="readCm" />
                                                                                                        </td>
                                                                                                        <td>
                                                                                                            @*<input type="checkbox" checked="@sa2" class="Write" name="@item.MenuId" value='Write' id="@chkWrite4" childchkCm="claimMenu" childwriteCm="writeCm"/>*@
                                                                                                        </td>
                                                                                                        @* <td>
                                <input type="checkbox" checked="@sa4" class="Spl" name="@item.MenuId" value='Spl' id="@chkSpl4" childchkCm="claimMenu" childSpCm="splCm" />
                            </td>*@
                                                                                                    </tr> 
                                                                                                }
                                                                                                else if (@item.IsHeader == "Y")
                                                                                                { 
                                                                                                    <tr class="info">
                                                                                                        <td style="width: 1%; text-indent: 12px;">
                                                                                                            <input type="checkbox" id="@item.MenuId" pid="@item.MenuId" checked="@isSelected" value='@item.MenuId' name="query_Menulist" childchkCm="claimMenu" chkReadCm="readCm"/>
                                                                                                        </td>
                                                                                                        <td class="vleft" style="width: 39%; padding-left: 0px;">
                                                                                                            <b>@MenuResource.GetString(Convert.ToString(@item.MenuId))</b>
                                                                                                        </td>
                                                                                                        <td>
                                                                                                            <input type="checkbox" checked="@sa1" class="Read" name="@item.MenuId" value='Read' id="@chkRead4" childchkCm="claimMenu" chkReadCm="readCm" />
                                                                                                        </td>
                                                                                                        <td>
                                                                                                            @*<input type="checkbox" checked="@sa2" class="Write" name="@item.MenuId" value='Write' id="@chkWrite4" childchkCm="claimMenu" childwriteCm="writeCm"/>*@
                                                                                                        </td>
                                                                                                        @* <td>
                            <input type="checkbox" checked="@sa4" class="Spl" name="@item.MenuId" value='Spl' id="@chkSpl4" childchkCm="claimMenu" childSpCm="splCm"/>
                        </td>*@
                                                                                                    </tr> 
                                                                                                    for (var i = 0; i < list3.Count; i++)
                                                                                                    {
                                                                                                        var item2 = list3[i];
                                                                                                        var isSelected2 = false;
                                                                                                        var chkRead42 = "";
                                                                                                        var chkWrite42 = "";
                                                                                                        var chkDelete42 = "";
                                                                                                        var chkSpl42 = "";
                                                                                                        if (@vMode == "Addnew")
                                                                                                        {
                                                                                                            chkRead42 = "chkRead" + @item2.MenuId;
                                                                                                            chkWrite42 = "chkWrite" + @item2.MenuId;
                                                                                                            chkDelete42 = "chkDelete" + @item2.MenuId;
                                                                                                            chkSpl42 = "chkSpl" + @item2.MenuId;
                                                                                                            var menuc = Convert.ToString(@item2.MenuId);
                                                                                                            isSelected2 = true;
                                                                                                            var index2 = ck == "" ? -1 : ck == null ? -1 : Array.IndexOf(ck.ToString().Split('~'), Convert.ToString(@item2.MenuId));
                                                                                                            sa1 = true;
                                                                                                            sa2 = index2 == -1 ? false : ck == null ? false : ck.ToString().Split('~').Contains(Convert.ToString(@item2.MenuId)) ? Convert.ToBoolean(ck.ToString().Split('~')[index2 - 3]) : false;
                                                                                                            sa3 = index2 == -1 ? false : ck == null ? false : ck.ToString().Split('~').Contains(Convert.ToString(@item2.MenuId)) ? Convert.ToBoolean(ck.ToString().Split('~')[index2 - 2]) : false;
                                                                                                            sa4 = index2 == -1 ? false : ck == null ? false : ck.ToString().Split('~').Contains(Convert.ToString(@item2.MenuId)) ? Convert.ToBoolean(ck.ToString().Split('~')[index2 - 1]) : false;
                                                                                                        }
                                                                                                        else
                                                                                                        {
                                                                                                            chkRead42 = "chkRead" + @item2.MenuId;
                                                                                                            chkWrite42 = "chkWrite" + @item2.MenuId;
                                                                                                            chkDelete42 = "chkDelete" + @item2.MenuId;
                                                                                                            chkSpl42 = "chkSpl" + @item2.MenuId;
                                                                                                            var menuc = Convert.ToString(@item2.MenuId);
                                                                                                            var index2 = ck == "" ? -1 : ck == null ? -1 : Array.IndexOf(ck.ToString().Split('~'), Convert.ToString(@item2.MenuId));
                                                                                                            sa1 = index2 == -1 ? false : ck == null ? false : ck.ToString().Split('~').Contains(Convert.ToString(@item2.MenuId)) ? Convert.ToBoolean(ck.ToString().Split('~')[index2 - 4]) : false;
                                                                                                            sa2 = index2 == -1 ? false : ck == null ? false : ck.ToString().Split('~').Contains(Convert.ToString(@item2.MenuId)) ? Convert.ToBoolean(ck.ToString().Split('~')[index2 - 3]) : false;
                                                                                                            sa3 = index2 == -1 ? false : ck == null ? false : ck.ToString().Split('~').Contains(Convert.ToString(@item2.MenuId)) ? Convert.ToBoolean(ck.ToString().Split('~')[index2 - 2]) : false;
                                                                                                            sa4 = index2 == -1 ? false : ck == null ? false : ck.ToString().Split('~').Contains(Convert.ToString(@item2.MenuId)) ? Convert.ToBoolean(ck.ToString().Split('~')[index2 - 1]) : false;
                                                                                                            var selectedmenu = @ViewData["SelectedGroupMenu"] == null ? "" : @ViewData["SelectedGroupMenu"];
                                                                                                            if (selectedmenu != null && (sa1 != false || sa2 != false || sa3 != false || sa4 != false)) isSelected2 = selectedmenu.ToString().Contains(@menuc);
                                                                                                        }
                                                                                                    <tr>
                                                                                                        <td style="width: 1%; text-indent: 25px;">
                                                                                                        </td>
                                                                                                        <td class="vleft" style="width: 39%; padding-left: 0px;">
                                                                                                            <input type="checkbox" id="@item2.MenuId" cid="@item.MenuId" checked="@isSelected2" value='@item2.MenuId' name="query_Menulist" childchkCm="claimMenu" chkReadCm="readCm"/>
                                                                                                            @MenuResource.GetString(Convert.ToString(@item2.MenuId))
                                                                                                        </td>
                                                                                                        <td>
                                                                                                            <input type="checkbox" checked="@sa1" cid="@item.MenuId" class="Read" name="@item2.MenuId" value='Read' id="@chkRead42" childchkCm="claimMenu" chkReadCm="readCm"/>
                                                                                                        </td>
                                                                                                        <td>
                                                                                                            @*<input type="checkbox" checked="@sa2" cid="@item.MenuId" class="Write" name="@item2.MenuId" value='Write' id="@chkWrite42" childchkCm="claimMenu" childwriteCm="writeCm"/>*@
                                                                                                        </td>
                                                                                                        @*<td>
                                        <input type="checkbox" checked="@sa4" cid="@item.MenuId" class="Spl" name="@item2.MenuId" value='Spl' id="@chkSpl42" childchkCm="claimMenu" childSpCm="splCm"/>
                                    </td>*@
                                                                                                    </tr> 
                                                                                                    }
                                                                                                }
                                                                                            </tbody> 
                            }
                                                                                        }
                                                                                    </table>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div id="ClaimsScreen" class="tab-pane fade">
                                                <div class="col-lg-12">
                                                    <div class="panel panel-info" id="divTabClaimScreen">
                                                        <div class="panel-body">
                                                            <div class="row">
                                                                <div class="col-lg-12">
                                                                    <div class="form-group">
                                                                        <div class="table-responsive">
                                                                            <table width="100%" class="table no-border">
                                                                                <thead>
                                                                                    <tr>
                                                                                        <th style="width: 40%;" class="info">
                                                                                            <input type="checkbox" checked="@sa2" class="Write uncheck" name="" value='Write' id="SelectAllCs" childchkCs="claimScreen" mainSelectCs="SelectAllCs"/>
                                                                                            @PageResource.GetString("ClaimsScreen")
                                                                                        </th>
                                                                                        <th style="width: 20%;">
                                                                                            <input type="checkbox" checked="@sa2" class="Read uncheck" name="" value='Read' id="chkReadCs" childchkCs="claimScreen" mainchkreadCs="readCs" />
                                                                                            @PageResource.GetString("Read")
                                                                                        </th>
                                                                                        <th style="width: 20%;">
                                                                                            <input type="checkbox" checked="@sa2" class="Write uncheck" name="" value='Write' id="chkWriteCs" childchkCs="claimScreen" mainchkwriteCs="writeCs" />
                                                                                            @PageResource.GetString("Write")
                                                                                        </th>
                                                                                        <th style="width: 20%;">
                                                                                            @*<input type="checkbox" checked="@sa2" class="Spl uncheck" name="" value='Write' id="SplCs" childchkCs="claimScreen" mainchksplCs="splCs"/>*@
                                                                                            Special Permission
                                                                                        </th>
                                                                                    </tr>
                                                                                </thead>
                                                                                <tbody>
                                                                                    @{
                            var claimScreenTab = Model.menulist.Where(m => (m.TabId == "CLAIM" || m.TabId == "TacUpload" || m.TabId == "CUpload") && !m.DisplayText.Contains("Folder"));
                            foreach (var item in claimScreenTab)
                            {
                                var menucode = "";
                                var isSelected = false;
                                var chkRead1 = "";
                                var chkWrite1 = "";
                                var chkDelete1 = "";
                                var chkSpl1 = "";
                                if (@vMode == "Addnew")
                                {
                                    if (@item.MenuId != 135)
                                    {
                                        menucode = Convert.ToString(@item.MenuId);
                                        var selectedmenu = @ViewData["SelectedGroupMenu"] == null ? "" : @ViewData["SelectedGroupMenu"];
                                        //if (selectedmenu != null) isSelected = selectedmenu.ToString().Contains(@menucode);
                                        isSelected = true;
                                        chkRead1 = "chkRead" + @item.MenuId;
                                        chkWrite1 = "chkWrite" + @item.MenuId;
                                        chkDelete1 = "chkDelete" + @item.MenuId;
                                        chkSpl1 = "chkSpl" + @item.MenuId;
                                        var index = ck == "" ? -1 : ck == null ? -1 : Array.IndexOf(ck.ToString().Split('~'), Convert.ToString(@item.MenuId));
                                        //claim1 = index == -1 ? false : ck == null ? false : ck.ToString().Split('~').Contains(Convert.ToString(@item.MenuId)) ? Convert.ToBoolean(ck.ToString().Split('~')[index - 4]) : false; 
                                        claim1 = true;
                                        claim2 = index == -1 ? false : ck == null ? false : ck.ToString().Split('~').Contains(Convert.ToString(@item.MenuId)) ? Convert.ToBoolean(ck.ToString().Split('~')[index - 3]) : false;
                                        claim3 = index == -1 ? false : ck == null ? false : ck.ToString().Split('~').Contains(Convert.ToString(@item.MenuId)) ? Convert.ToBoolean(ck.ToString().Split('~')[index - 2]) : false;
                                        claim4 = index == -1 ? false : ck == null ? false : ck.ToString().Split('~').Contains(Convert.ToString(@item.MenuId)) ? Convert.ToBoolean(ck.ToString().Split('~')[index - 1]) : false;
                                    }
                                    else
                                    {
                                        menucode = Convert.ToString(@item.MenuId);
                                        isSelected = true;
                                        chkRead1 = "chkRead" + @item.MenuId;
                                        chkWrite1 = "chkWrite" + @item.MenuId;
                                        claim1 = true;
                                        claim2 = true;
                                    }
                                }
                                else
                                {
                                    menucode = Convert.ToString(@item.MenuId);
                                    chkRead1 = "chkRead" + @item.MenuId;
                                    chkWrite1 = "chkWrite" + @item.MenuId;
                                    chkDelete1 = "chkDelete" + @item.MenuId;
                                    chkSpl1 = "chkSpl" + @item.MenuId; var index = ck == "" ? -1 : ck == null ? -1 : Array.IndexOf(ck.ToString().Split('~'), Convert.ToString(@item.MenuId)); claim1 = index == -1 ? false : ck == null ? false : ck.ToString().Split('~').Contains(Convert.ToString(@item.MenuId)) ? Convert.ToBoolean(ck.ToString().Split('~')[index - 4]) : false; claim2 = index == -1 ? false : ck == null ? false : ck.ToString().Split('~').Contains(Convert.ToString(@item.MenuId)) ? Convert.ToBoolean(ck.ToString().Split('~')[index - 3]) : false; claim3 = index == -1 ? false : ck == null ? false : ck.ToString().Split('~').Contains(Convert.ToString(@item.MenuId)) ? Convert.ToBoolean(ck.ToString().Split('~')[index - 2]) : false; claim4 = index == -1 ? false : ck == null ? false : ck.ToString().Split('~').Contains(Convert.ToString(@item.MenuId)) ? Convert.ToBoolean(ck.ToString().Split('~')[index - 1]) : false;
                                    var selectedmenu = @ViewData["SelectedGroupMenu"] == null ? "" : @ViewData["SelectedGroupMenu"];
                                    if (selectedmenu != null && (claim1 != false || claim2 != false || claim3 != false || claim4 != false)) isSelected = selectedmenu.ToString().Contains(@menucode);

                                }
                                                                                        <tr>
                                                                                            <td class="vcenter">
                                                                                                <input type="checkbox" id="@item.MenuId" checked="@isSelected" value='@item.MenuId' name="query_Menulist" childchkCs="claimScreen" chkReadCs="readCs"/>
                                                                                                @MenuResource.GetString(Convert.ToString(@item.MenuId))
                                                                                            </td>
                                                                                            <td>
                                                                                                <input type="checkbox" checked="@claim1" class="Read" name="@item.MenuId" value='Read' id="@chkRead1" childchkCs="claimScreen" chkReadCs="readCs"/>
                                                                                            </td>
                                                                                            <td>
                                                                                                <input type="checkbox" checked="@claim2" class="Write" name="@item.MenuId" value='Write' id="@chkWrite1" childchkCs="claimScreen" childwriteCs="writeCs"/>
                                                                                            </td>
                                                                                            <td>
                                                                                                @if (@item.AdminDisplayText == "Alert")
                                                                                                {
                                                                                                    <input type="checkbox" checked="@claim4" class="Spl" name="@item.MenuId" value='Spl' id="@chkSpl1" childchkCs="claimScreen" childSpCs="splCs"/>   @Html.DisplayName("Reassign")
                                                                                                }
                                                                                            </td>
                                                                                        </tr> 
                            }
                                                                                    }
                                                                                </tbody>
                                                                            </table>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div id="SystemAdmin" class="tab-pane fade">
                                                <div class="row">
                                                    <div class="panel panel-info" id="divTabSystemAdmin">
                                                        <div class="panel-body">
                                                            <div class="form-group">
                                                                <div class="table-responsive">
                                                                    <table class="table no-border">
                                                                        <thead>
                                                                            <tr>
                                                                                <th colspan="2" style="width: 40%;" class="info">
                                                                                    <input type="checkbox" checked="@sa2" class="Write uncheck" name="" value='Write' id="SelectAllSa" childchkSa="SystemAdmin" mainSelectSa="SelectAllSa"/>
                                                                                    @MCAS.Web.Objects.Resources.Common.Common.SystemAdmin
                                                                                </th>
                                                                                <th style="width: 20%;">
                                                                                    <input type="checkbox" checked="@sa2" class="Read uncheck" name="" value='Read' id="chkReadSa" childchkSa="SystemAdmin" mainchkreadSa="readSa" />
                                                                                    @PageResource.GetString("Read")
                                                                                </th>
                                                                                <th style="width: 20%;">
                                                                                    <input type="checkbox" checked="@sa2" class="Write uncheck" name="" value='Write' id="chkWriteSa" childchkSa="SystemAdmin" mainchkwriteSa="writeSa" />
                                                                                    @PageResource.GetString("Write")
                                                                                </th>
                                                                                @*  <th style="width: 20%;">
                                                                                    <input type="checkbox" checked="@sa2" class="Spl uncheck" name="" value='Write' id="SplSa" childchkSa="claimScreen" mainchksplSa="splSa"/>
                                                                                    Special Permission
                                                                                </th>*@
                                                                            </tr>
                                                                        </thead>
                                                                        @for (var k = 0; k < Model.menulist.Where(m => m.TabId == "S_ADMN").ToList().Count; k++)
                                                                        {
                                                                            var item = Model.menulist.Where(m => m.TabId == "S_ADMN").ToList()[k];
                                                                            var menucode = "";
                                                                            var isSelected = false;
                                                                            var chkRead4 = "";
                                                                            var chkWrite4 = "";
                                                                            var chkDelete4 = "";
                                                                            var chkSpl4 = "";
                                                                            var list3 = Model.menulist.Where(m => m.TabId == "S_ADMN" && m.MainHeaderId == @item.MenuId).OrderBy(m => Int32.Parse(m.SubTabId)).ToList();
                                                                            if (@vMode == "Addnew")
                                                                            {
                                                                                menucode = Convert.ToString(@item.MenuId);
                                                                                isSelected = true;
                                                                                chkRead4 = "chkRead" + @item.MenuId;
                                                                                chkWrite4 = "chkWrite" + @item.MenuId;
                                                                                chkDelete4 = "chkDelete" + @item.MenuId;
                                                                                chkSpl4 = "chkSpl" + @item.MenuId;
                                                                                var index = ck == "" ? -1 : ck == null ? -1 : Array.IndexOf(ck.ToString().Split('~'), Convert.ToString(@item.MenuId));
                                                                                sa1 = true;
                                                                                sa2 = index == -1 ? false : ck == null ? false : ck.ToString().Split('~').Contains(Convert.ToString(@item.MenuId)) ? Convert.ToBoolean(ck.ToString().Split('~')[index - 3]) : false;
                                                                                sa3 = index == -1 ? false : ck == null ? false : ck.ToString().Split('~').Contains(Convert.ToString(@item.MenuId)) ? Convert.ToBoolean(ck.ToString().Split('~')[index - 2]) : false;
                                                                                sa4 = index == -1 ? false : ck == null ? false : ck.ToString().Split('~').Contains(Convert.ToString(@item.MenuId)) ? Convert.ToBoolean(ck.ToString().Split('~')[index - 1]) : false;
                                                                            }
                                                                            else
                                                                            {
                                                                                menucode = Convert.ToString(@item.MenuId);
                                                                                chkRead4 = "chkRead" + @item.MenuId;
                                                                                chkWrite4 = "chkWrite" + @item.MenuId;
                                                                                chkDelete4 = "chkDelete" + @item.MenuId;
                                                                                chkSpl4 = "chkSpl" + @item.MenuId;
                                                                                var index = ck == "" ? -1 : ck == null ? -1 : Array.IndexOf(ck.ToString().Split('~'), Convert.ToString(@item.MenuId));
                                                                                sa1 = index == -1 ? false : ck == null ? false : ck.ToString().Split('~').Contains(Convert.ToString(@item.MenuId)) ? Convert.ToBoolean(ck.ToString().Split('~')[index - 4]) : false;
                                                                                sa2 = index == -1 ? false : ck == null ? false : ck.ToString().Split('~').Contains(Convert.ToString(@item.MenuId)) ? Convert.ToBoolean(ck.ToString().Split('~')[index - 3]) : false;
                                                                                sa3 = index == -1 ? false : ck == null ? false : ck.ToString().Split('~').Contains(Convert.ToString(@item.MenuId)) ? Convert.ToBoolean(ck.ToString().Split('~')[index - 2]) : false;
                                                                                sa4 = index == -1 ? false : ck == null ? false : ck.ToString().Split('~').Contains(Convert.ToString(@item.MenuId)) ? Convert.ToBoolean(ck.ToString().Split('~')[index - 1]) : false;
                                                                                var selectedmenu = @ViewData["SelectedGroupMenu"] == null ? "" : @ViewData["SelectedGroupMenu"];
                                                                                if (selectedmenu != null && (sa1 != false || sa2 != false || sa3 != false || sa4 != false)) isSelected = selectedmenu.ToString().Contains(@menucode);

                                                                            }
                                                                            <tbody style="border: none;">
                                                                                @if (@item.IsHeader != "Y" && @item.SubMenu != "Y")
                                                                                { <tr>
                                                                                    <td style="width: 1%; text-indent: 12px;">
                                                                                        <input type="checkbox" id="@item.MenuId" checked="@isSelected" value='@item.MenuId' name="query_Menulist" childchkSa="SystemAdmin" chkReadSa="readSa"/>
                                                                                    </td>
                                                                                    <td class="vleft" style="width: 39%; padding-left: 0px;">
                                                                                        @MenuResource.GetString(Convert.ToString(@item.MenuId))
                                                                                    </td>
                                                                                    <td>
                                                                                        <input type="checkbox" checked="@sa1" class="Read" name="@item.MenuId" value='Read' id="@chkRead4" childchkSa="SystemAdmin" chkReadSa="readSa" />
                                                                                    </td>
                                                                                    <td>
                                                                                        <input type="checkbox" checked="@sa2" class="Write" name="@item.MenuId" value='Write' id="@chkWrite4" childchkSa="SystemAdmin" childwriteSa="writeSa"/>
                                                                                    </td>
                                                                                    @* <td>
                                                                                    <input type="checkbox" checked="@sa4" class="Spl" name="@item.MenuId" value='Spl' id="@chkSpl4" childchkSa="SystemAdmin" childSpSa="splSa"/>
                                                                                </td>*@
                                                                                </tr> }
                                                                                else if (@item.IsHeader == "Y")
                                                                                { <tr class="info">
                                                                                    <td style="width: 1%; text-indent: 12px;">
                                                                                        <input type="checkbox" id="@item.MenuId" pid="@item.MenuId" checked="@isSelected" value='@item.MenuId' name="query_Menulist" childchkSa="SystemAdmin" chkReadSa="readSa" />
                                                                                    </td>
                                                                                    <td class="vleft" style="width: 39%; padding-left: 0px;">
                                                                                        <b>@MenuResource.GetString(Convert.ToString(@item.MenuId))</b>
                                                                                    </td>
                                                                                    <td>
                                                                                        <input type="checkbox" checked="@sa1" class="Read" name="@item.MenuId" value='Read' id="@chkRead4" childchkSa="SystemAdmin" chkReadSa="readSa"/>
                                                                                    </td>
                                                                                    <td>
                                                                                        <input type="checkbox" checked="@sa2" class="Write" name="@item.MenuId" value='Write' id="@chkWrite4" childchkSa="SystemAdmin" childwriteSa="writeSa"/>
                                                                                    </td>
                                                                                    @*<td>
                                                                                    <input type="checkbox" checked="@sa4" class="Spl" name="@item.MenuId" value='Spl' id="@chkSpl4" childchkSa="SystemAdmin" childSpSa="splSa" />
                                                                                </td>*@
                                                                                </tr>
                                                                                    for (var i = 0; i < list3.Count; i++)
                                                                                    {
                                                                                        var item2 = list3[i];
                                                                                        var isSelected2 = false;
                                                                                        var chkRead42 = "";
                                                                                        var chkWrite42 = "";
                                                                                        var chkDelete42 = "";
                                                                                        var chkSpl42 = "";
                                                                                        if (@vMode == "Addnew")
                                                                                        {
                                                                                            chkRead42 = "chkRead" + @item2.MenuId;
                                                                                            chkWrite42 = "chkWrite" + @item2.MenuId;
                                                                                            chkDelete42 = "chkDelete" + @item2.MenuId;
                                                                                            chkSpl42 = "chkSpl" + @item2.MenuId;
                                                                                            var menuc = Convert.ToString(@item2.MenuId);
                                                                                            isSelected2 = true;
                                                                                            var index2 = ck == "" ? -1 : ck == null ? -1 : Array.IndexOf(ck.ToString().Split('~'), Convert.ToString(@item2.MenuId));
                                                                                            sa1 = true;
                                                                                            sa2 = index2 == -1 ? false : ck == null ? false : ck.ToString().Split('~').Contains(Convert.ToString(@item2.MenuId)) ? Convert.ToBoolean(ck.ToString().Split('~')[index2 - 3]) : false;
                                                                                            sa3 = index2 == -1 ? false : ck == null ? false : ck.ToString().Split('~').Contains(Convert.ToString(@item2.MenuId)) ? Convert.ToBoolean(ck.ToString().Split('~')[index2 - 2]) : false;
                                                                                            sa4 = index2 == -1 ? false : ck == null ? false : ck.ToString().Split('~').Contains(Convert.ToString(@item2.MenuId)) ? Convert.ToBoolean(ck.ToString().Split('~')[index2 - 1]) : false;
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            chkRead42 = "chkRead" + @item2.MenuId;
                                                                                            chkWrite42 = "chkWrite" + @item2.MenuId;
                                                                                            chkDelete42 = "chkDelete" + @item2.MenuId;
                                                                                            chkSpl42 = "chkSpl" + @item2.MenuId;
                                                                                            var menuc = Convert.ToString(@item2.MenuId);
                                                                                            var index2 = ck == "" ? -1 : ck == null ? -1 : Array.IndexOf(ck.ToString().Split('~'), Convert.ToString(@item2.MenuId));
                                                                                            sa1 = index2 == -1 ? false : ck == null ? false : ck.ToString().Split('~').Contains(Convert.ToString(@item2.MenuId)) ? Convert.ToBoolean(ck.ToString().Split('~')[index2 - 4]) : false;
                                                                                            sa2 = index2 == -1 ? false : ck == null ? false : ck.ToString().Split('~').Contains(Convert.ToString(@item2.MenuId)) ? Convert.ToBoolean(ck.ToString().Split('~')[index2 - 3]) : false;
                                                                                            sa3 = index2 == -1 ? false : ck == null ? false : ck.ToString().Split('~').Contains(Convert.ToString(@item2.MenuId)) ? Convert.ToBoolean(ck.ToString().Split('~')[index2 - 2]) : false;
                                                                                            sa4 = index2 == -1 ? false : ck == null ? false : ck.ToString().Split('~').Contains(Convert.ToString(@item2.MenuId)) ? Convert.ToBoolean(ck.ToString().Split('~')[index2 - 1]) : false;
                                                                                            var selectedmenu = @ViewData["SelectedGroupMenu"] == null ? "" : @ViewData["SelectedGroupMenu"];
                                                                                            if (selectedmenu != null && (sa1 != false || sa2 != false || sa3 != false || sa4 != false)) isSelected2 = selectedmenu.ToString().Contains(@menuc);

                                                                                        }
                                                                                    <tr>
                                                                                        <td style="width: 1%; text-indent: 25px;">
                                                                                        </td>
                                                                                        <td class="vleft" style="width: 39%; padding-left: 0px;">
                                                                                            <input type="checkbox" id="@item2.MenuId" cid="@item.MenuId" checked="@isSelected2" value='@item2.MenuId' name="query_Menulist" childchkSa="SystemAdmin" chkReadSa="readSa" />
                                                                                            @MenuResource.GetString(Convert.ToString(@item2.MenuId))
                                                                                        </td>
                                                                                        <td>
                                                                                            <input type="checkbox" checked="@sa1" cid="@item.MenuId" class="Read" name="@item2.MenuId" value='Read' id="@chkRead42" childchkSa="SystemAdmin" chkReadSa="readSa"/>
                                                                                        </td>
                                                                                        <td>
                                                                                            <input type="checkbox" checked="@sa2" cid="@item.MenuId" class="Write" name="@item2.MenuId" value='Write' id="@chkWrite42" childchkSa="SystemAdmin" childwriteSa="writeSa" />
                                                                                        </td>
                                                                                        @*<td>
                                                                                    <input type="checkbox" checked="@sa4" cid="@item.MenuId" class="Spl" name="@item2.MenuId" value='Spl' id="@chkSpl42" childchkSa="SystemAdmin" childSpSa="splSa"/>
                                                                                </td>*@
                                                                                    </tr> }
                                                                                }
                                                                            </tbody> }
                                                                    </table>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div id="Others" class="tab-pane fade">
                                                <div class="row">
                                                    <div class="col-lg-12">
                                                        <div class="panel panel-info" id="divAttachment">
                                                            <div class="panel-body">
                                                                <div class="row">
                                                                    <div class="col-lg-12">
                                                                        <div class="form-group">
                                                                            <div class="col-sm-12">
                                                                                <div class="table-responsive">
                                                                                    <table width="100%" class="table no-border">
                                                                                        <thead>
                                                                                            <tr>
                                                                                                <th class="info" style="width: 40%;">
                                                                                                    <input type="checkbox" checked="@sa2" class="Write uncheck" name="" value='Write' id="SelectAllA" childchkCs="Attachment" dissable="readonly"/>
                                                                                                    @PageResource.GetString("Attachment")
                                                                                                </th>
                                                                                                <th style="width: 20%;">
                                                                                                    @*  childchkA="Attachment" mainchkreadA="readA"*@
                                                                                                    <input type="checkbox" checked="@sa2" class="Read uncheck" name="" value='Read' id="chkReadA" dissable="readonly" />
                                                                                                    @PageResource.GetString("Read")
                                                                                                </th>
                                                                                                <th style="width: 20%;">
                                                                                                    <input type="checkbox" checked="@sa2" class="Write uncheck" name="" value='Write' id="chkWriteA" childchkA="Attachment" mainchkwriteA="writeA" />
                                                                                                    @PageResource.GetString("Write")
                                                                                                </th>
                                                                                                @* <th style="width: 20%;">
                                                                                                    <input type="checkbox" checked="@sa2" class="Spl uncheck" name="" value='Write' id="SplA" childchkA="Attachment" mainchksplA="splA"/>
                                                                                                    Special Permission
                                                                                                </th>*@
                                                                                            </tr>
                                                                                        </thead>
                                                                                        <tbody>
                                                                                            @foreach (var item1 in Model.menulist.Where(m => m.MenuId == 221 || m.MenuId == 222 || m.MenuId == 223 || m.MenuId == 224))
                                                                                            {
                                                                                                var menucode1 = "";
                                                                                                var chkRead = ""; var chkWrite = ""; var isSelected = false; var readonlyval = "";
                                                                                                if (!string.IsNullOrEmpty(Convert.ToString(@ViewData["SelectedGroupMenu"])))
                                                                                                {
                                                                                                    menucode1 = Convert.ToString(@item1.MenuId);
                                                                                                    var selectedmenu = @ViewData["SelectedGroupMenu"] == null ? "" : @ViewData["SelectedGroupMenu"]; isSelected = selectedmenu != null ? selectedmenu.ToString().Contains(@menucode1) : false; chkRead = "chkRead" + @item1.MenuId; chkWrite = "chkWrite" + @item1.MenuId; var chkDelete = "chkDelete" + @item1.MenuId; var chkSpl = "chkSpl" + @item1.MenuId; var index = ck == "" ? -1 : ck == null ? -1 : Array.IndexOf(ck.ToString().Split('~'), Convert.ToString(@item1.MenuId)); at1 = index == -1 ? false : ck == null ? false : ck.ToString().Split('~').Contains(Convert.ToString(@item1.MenuId)) ? Convert.ToBoolean(ck.ToString().Split('~')[index - 4]) : false; at2 = index == -1 ? false : ck == null ? false : ck.ToString().Split('~').Contains(Convert.ToString(@item1.MenuId)) ? Convert.ToBoolean(ck.ToString().Split('~')[index - 3]) : false; at3 = index == -1 ? false : ck == null ? false : ck.ToString().Split('~').Contains(Convert.ToString(@item1.MenuId)) ? Convert.ToBoolean(ck.ToString().Split('~')[index - 2]) : false; at4 = index == -1 ? false : ck == null ? false : ck.ToString().Split('~').Contains(Convert.ToString(@item1.MenuId)) ? Convert.ToBoolean(ck.ToString().Split('~')[index - 1]) : false;
                                                                                                }
                                                                                                else
                                                                                                {

                                                                                                    menucode1 = Convert.ToString(@item1.MenuId);
                                                                                                    chkRead = "chkRead" + @item1.MenuId; chkWrite = "chkWrite" + @item1.MenuId;
                                                                                                    isSelected = true;
                                                                                                    at1 = true; at2 = true;
                                                                                                    readonlyval = "readonly";
                                                                                                }
                                                                                                
                                                                                                
                                                                                                
                                                                                                
                                                                                                
                                                                                                <tr>
                                                                                                    <td class="vcenter">
                                                                                                        @* childchkA="Attachment" chkReadA="readA"*@
                                                                                                        <input type="checkbox" id='@item1.MenuId' checked="@isSelected" value='@item1.MenuId' name="query_Menulist" dissable="readonly" />
                                                                                                        @MenuResource.GetString(Convert.ToString(@item1.MenuId))
                                                                                                    </td>
                                                                                                    <td>
                                                                                                        <input type="checkbox" checked="@at1" class="Read" name="@item1.MenuId" value='Read' id="@chkRead" dissable="readonly" />
                                                                                                    </td>
                                                                                                    <td>
                                                                                                        <input type="checkbox" checked="@at2" class="Write" name="@item1.MenuId" value='Write' id="@chkWrite" childchkA="Attachment" childwriteA="writeA" dissable="readonly"/>
                                                                                                    </td>
                                                                                                    @* <td>
                                                                                                    <input type="checkbox" checked="@at4" class="Spl" name="@item1.MenuId" value='Spl' id="@chkSpl" childchkA="Attachment" childspA="splA" />
                                                                                                </td>*@
                                                                                                </tr> }
                                                                                        </tbody>
                                                                                    </table>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="clearfix igr col-md-12 text-center">
                                    @if (@myPemissions.Write)
                                    {
                                        <button style="display:@btndisplay" class="btn btn-info" type="submit" id="btnSave">
                                            @PageResource.GetString("Save")</button>
                                    }
                                    &nbsp;&nbsp;&nbsp;&nbsp;
                                    @Html.ActionLink(@PageResource.GetString("Back"), "UserGroupsIndex", null, new { @class = "btn btn-info" })&nbsp;&nbsp;&nbsp;&nbsp;
                                    <button style="display: none" type="button" class="btn btn-info" onclick="onclickcancel();">
                                        @PageResource.GetString("Cancel")</button>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="panel">
            @Html.Partial("~/Views/Shared/_TimeStamp.cshtml", Model)
        </div>
    </div>
</div>
<script type="text/javascript">
    var do_on_load = function () {
        $("input[type=checkbox]").each(function () {
            var a = this.id;
            if (3 == a.length && !$(this).is(":checked")) {
                var b = "#chkWrite" + a,
            c = "#chkDelete" + a,
            d = "#chkSpl" + a;
                $("#chkRead" + a).attr("checked", !1);
                $(b).attr("checked", !1);
                $(c).attr("checked", !1);
                $(d).attr("checked", !1);
                $(b).prop("disabled", !0);
                $(c).prop("disabled", !0);
                $(d).prop("disabled", !0)
            }
        });
        $("input[type=checkbox]").each(function () {
            if (void 0 !== $(this).attr("pid") && !$(this).is(":checked")) {
                var a = $("#" + this.id).attr("pid");
                $("input[type=checkbox]").each(function () {
                    void 0 !== $(this).attr("cid") && $(this).attr("cid") == a && ($(this).removeAttr("checked"), $(this).prop("disabled", !0))
                })
            }
        });
        $(":checkbox").change(function () {
            var id = this.id;
            if (void 0 !== $(this).attr("pid")) {
                var val = $(this).attr("pid");
                $(this).is(":checked") ? $("input[type=checkbox]").each(function () {
                    void 0 !== $(this).attr("cid") && $(this).attr("cid") == val && ($(this).removeAttr("disabled"), $(this).prop("checked", !0))
                }) : $("input[type=checkbox]").each(function () {
                    void 0 !== $(this).attr("cid") && $(this).attr("cid") == val && ($(this).removeAttr("checked"), $(this).prop("disabled", !0))
                })
            }
            if (3 == id.length) {
                var a = "#chkRead" + id, b = "#chkWrite" + id, c = "#chkDelete" + id, d = "#chkSpl" + id;
                $("#" + id).is(":checked") ? ($(a).removeAttr("disabled"), $(b).removeAttr("disabled"), $(c).removeAttr("disabled"), $(d).removeAttr("disabled"), $(a).prop("checked", !0), $(b).prop("checked", !0), $(c).prop("checked", !0), $(d).prop("checked", !0)) : ($(a).attr("checked", !1), $(b).attr("checked", !1), $(c).attr("checked", !1), $(d).attr("checked", !1), $(b).prop("disabled", !0), $(c).prop("disabled", !0), $(d).prop("disabled", !0))
            } else if ("chkRead" == id.toString().substring(0, 7)) {
                var mid = id.slice(-3), e = "#" + mid, a = "#chkRead" + mid, b = "#chkWrite" + mid, c = "#chkDelete" + mid, d = "#chkSpl" + mid;
                $(a).is(":checked") ? ($(a).removeAttr("disabled"), $(b).removeAttr("disabled"), $(c).removeAttr("disabled"), $(d).removeAttr("disabled"), $(e).prop("checked", !0), $(a).prop("checked", !0), void 0 !== $(e).attr("pid") && (val = $(e).attr("pid"), $("input[type=checkbox]").each(function () {
                    void 0 !== $(this).attr("cid") && $(this).attr("cid") == val && ($(this).removeAttr("disabled"), "chkRead" != this.id.toString().substring(0, 7) && 3 != this.id.length || $(this).prop("checked", !0))
                }))) : (void 0 !== $(e).attr("pid") && (val = $(e).attr("pid"), $("input[type=checkbox]").each(function () {
                    void 0 !== $(this).attr("cid") && $(this).attr("cid") == val && ($(this).removeAttr("checked"), $(this).prop("disabled", !0))
                })), $(b).attr("checked", !1), $(c).attr("checked", !1), $(d).attr("checked", !1), $(e).attr("checked", !1), $(b).prop("disabled", !0), $(c).prop("disabled", !0), $(d).prop("disabled", !0))
            };
            var arr3 = [], arr3 = ["chkWrite", "chkDelete", "chkSpl"], cid1 = this.id.toString().replace(this.id.slice(-3), ""); -1 < $.inArray(cid1, arr3) && void 0 !== $("#" + this.id.slice(-3)).attr("pid") && void 0 === $(this).attr("cid") && (val = $("#" + this.id.slice(-3)).attr("pid"), $(this).is(":checked") ? $("input[type=checkbox]").each(function () {
                void 0 !== $(this).attr("cid") && $(this).attr("cid") == val && this.id.toString().replace(this.id.slice(-3), "") == cid1 && $(this).prop("checked", !0)
            }) : $("input[type=checkbox]").each(function () {
                void 0 !== $(this).attr("cid") && $(this).attr("cid") == val && this.id.toString().replace(this.id.slice(-3), "") == cid1 && $(this).removeAttr("checked")
            }));
        });



        if ('@Model.hiddentab') {
            setactivetab('@Model.hiddentab');
        }
        else {
            setactivetab("DiaryTab");
        }

        $("#DiaryANC, #ClaimsANC, #ClaimsScreenANC, #SystemAdminANC, #OthersANC").click(function () {
            var id = this.id.replace("ANC", "Tab");
            $("#hiddentab").val(id);
        });
        $(document).on("focus", ":input", function () {
            $(this).attr("autocomplete", "off")
        });
        $("#GroupCode").blur(function (event) {
            var group = $.trim($("#GroupCode").val());
            $.ajax({
                type: "POST",
                url: '@Url.Action("CheckGroupCode", "UserAdmin")',
                data: {
                    groupname: group
                },
                success: function (a) {
                    if (a == true && (getQueryVariable("pageMode") != "Edit")) {
                        alert("Duplicate Group Code.");
                        $("#btnSave").attr("disabled", "disabled");
                    }
                    else if (($("#GroupCode").val() != '@Model.GroupCode') && a == true) {
                        alert("Duplicate Group Code.");
                        $("#btnSave").attr("disabled", "disabled");
                    }
                    else {
                        $("#btnSave").removeAttr("disabled");
                    }

                }
            });
        });
    };
    $(document).ready(do_on_load);
    $(window).bind('page:change', do_on_load);

    function setactivetab(tabname) {
        var arr = new Array();
        arr = ["DiaryTab", "ClaimsTab", "ClaimsScreenTab", "SystemAdminTab", "OthersTab"];
        arr1 = ["Diary", "Claims", "ClaimsScreen", "SystemAdmin", "Others"];
        for (var i = 0; i < arr.length; i++) {
            if (arr[i] == tabname) {
                $("#" + tabname).addClass("active");
                $("#" + arr1[i]).removeClass("tab-pane fade");
                $("#" + arr1[i]).addClass("tab-pane fade active in");
            }
            else {
                $("#" + arr[i]).removeClass("active");
                $("#" + arr1[i]).removeClass("tab-pane fade active in");
                $("#" + arr1[i]).addClass("tab-pane fade");
            }
        }
    };
    function onclickcancel() {
        $('#usergroupform')[0].reset();
    };
    function selectDiary(elem) {
        var id = elem.id;
        var ischecked = elem.checked;
        if (ischecked == false) {
            $.ajax({
                type: "POST",
                url: '@Url.Action("DeleteMenuId", "UserAdmin")',
                data: { MenuId: id, GroupId: '@grpId' },
                success: function (data) {
                }
            });
        }
        $("input[name=" + id + "]").each(function (el, v) {
            v.checked = ischecked;
        });
    };

    function checkPermission(b) {
        var c = b.id,
        a = b.value;
        "Read" == a ? (a = $("input[name=query_Menulist]")[0].value, a = $("input[id=" + a + "]").is(":checked"), $("input[id= " + c + "]").is(":checked") && !a && (confirm("Please select diary. "), b.checked = !1)) : "Write" == a ? (a = $("input[name=query_Menulist]")[1].value, a = $("input[id=" + a + "]").is(":checked"), $("input[id= " + c + "]").is(":checked") && !a && (confirm("Please select diary. "), b.checked = !1)) : "Delete" == a ? (a = $("input[name=query_Menulist]")[2].value, a = $("input[id=" + a + "]").is(":checked"), $("input[id= " + c + "]").is(":checked") && !a && (confirm("Please select diary. "), b.checked = !1)) : "Spl" == a && (a = $("input[name=query_Menulist]")[3].value, a = $("input[id=" + a + "]").is(":checked"), $("input[id= " + c + "]").is(":checked") && !a && (confirm("Please select diary. "), b.checked = !1))
    };

    function checkPermissionClaim(b) {
        var c = b.id,
        a = b.value;
        "Read" == a ? (a = $("input[name=query_Menulist]")[0].value, a = $("input[id=" + a + "]").is(":checked"), $("input[id= " + c + "]").is(":checked") && !a && (confirm("Please select claim. "), b.checked = !1)) : "Write" == a ? (a = $("input[name=query_Menulist]")[1].value, a = $("input[id=" + a + "]").is(":checked"), $("input[id= " + c + "]").is(":checked") && !a && (confirm("Please select claim. "), b.checked = !1)) : "Delete" == a ? (a = $("input[name=query_Menulist]")[2].value, a = $("input[id=" + a + "]").is(":checked"), $("input[id= " + c + "]").is(":checked") && !a && (confirm("Please select claim. "), b.checked = !1)) : "Spl" == a && (a = $("input[name=query_Menulist]")[3].value, a = $("input[id=" + a + "]").is(":checked"), $("input[id= " + c + "]").is(":checked") && !a && (confirm("Please select claim. "), b.checked = !1))
    };

    function checkPermissionAdmin(b) {
        var c = b.id,
        a = b.value;
        "Read" == a ? (a = $("input[name=query_Menulist]")[0].value, a = $("input[id=" + a + "]").is(":checked"), $("input[id= " + c + "]").is(":checked") && !a && (confirm("Please select admin. "), b.checked = !1)) : "Write" == a ? (a = $("input[name=query_Menulist]")[1].value, a = $("input[id=" + a + "]").is(":checked"), $("input[id= " + c + "]").is(":checked") && !a && (confirm("Please select admin. "), b.checked = !1)) : "Delete" == a ? (a = $("input[name=query_Menulist]")[2].value, a = $("input[id=" + a + "]").is(":checked"), $("input[id= " + c + "]").is(":checked") && !a && (confirm("Please select admin. "), b.checked = !1)) : "Spl" == a && (a = $("input[name=query_Menulist]")[3].value, a = $("input[id=" + a + "]").is(":checked"), $("input[id= " + c + "]").is(":checked") && !a && (confirm("Please select admin. "), b.checked = !1))
    };

    function checkPermissionOther(b) {
        var c = b.id,
        a = b.value;
        "Read" == a ? (a = $("input[name=query_Menulist]")[0].value, a = $("input[id=" + a + "]").is(":checked"), $("input[id= " + c + "]").is(":checked") && !a && (confirm("Please select Folder. "), b.checked = !1)) : "Write" == a ? (a = $("input[name=query_Menulist]")[1].value, a = $("input[id=" + a + "]").is(":checked"), $("input[id= " + c + "]").is(":checked") && !a && (confirm("Please select Folder. "), b.checked = !1)) : "Delete" == a ? (a = $("input[name=query_Menulist]")[2].value, a = $("input[id=" + a + "]").is(":checked"), $("input[id= " + c + "]").is(":checked") && !a && (confirm("Please select Folder. "), b.checked = !1)) : "Spl" == a && (a = $("input[name=query_Menulist]")[3].value, a = $("input[id=" + a + "]").is(":checked"), $("input[id= " + c + "]").is(":checked") && !a && (confirm("Please select Folder. "), b.checked = !1))
    }
    function getQueryVariable(b) {
        for (var c = "@MenuListItem.ClaimTabs.GetQueryStringVal()".replace(/amp;/ig, "").split("&"), a = 0; a < c.length; a++) {
            var d = c[a].split("=");
            if (d[0] == b) return d[1]
        }
    };
    if ('@pageMode' == 'View') {
        $('#usergroupform').find('input, textarea, select').attr('disabled', 'disabled');
    }



    // *************************Dashboard *************************//

    (($('#divTabDiary :checkbox').length - $('#divTabDiary :checkbox').filter(':checked').length) != $('#divTabDiary :checkbox').length) && $("#selectall,#chkRead").prop("checked", !0);
    (($('#divTabClaim :checkbox').length - $('#divTabClaim :checkbox').filter(':checked').length) != $('#divTabClaim :checkbox').length) && $("#SelectAllCm,#childreadcm").prop("checked", !0);
    (($('#divTabClaimScreen :checkbox').length - $('#divTabClaimScreen :checkbox').filter(':checked').length) != $('#divTabClaimScreen :checkbox').length) && $("#SelectAllCs,#chkReadCs").prop("checked", !0);

    (($('#divTabSystemAdmin :checkbox').length - $('#divTabSystemAdmin :checkbox').filter(':checked').length) != $('#divTabSystemAdmin :checkbox').length) && $("#SelectAllSa,#chkReadSa").prop("checked", !0);
    // (($('#divAttachment :checkbox').length - $('#divAttachment :checkbox').filter(':checked').length) != $('#divAttachment :checkbox').length) && $("#SelectAllA,#chkReadA").prop("checked", !0);

    $("#selectall").click(function () {
        var all = $(this);
        $('#Diary input:checkbox').each(function () {

            $(this).prop("checked", all.prop("checked"));
            $('#divTabDiary input:disabled').removeAttr('disabled');
        });
    });


    $(":checkbox").change(function () {
        void 0 !== $(this).attr("mainchkread") && ($(this).is(":checked") ?
            ($("input[type=checkbox]").each(function () { $(this).removeAttr("disabled") }),
            $("input[type=checkbox]").each(function () {
                (void 0 != $(this).attr("childread") || $(this).attr("chkdashread")) && $(this).prop("checked", !0)
            })
            ,
            $("#selectall").prop("checked", !0)
            ) :
            $("#divTabDiary :checkbox").each(function () {
                $(this).removeAttr("checked");
                $(this).prop("checked", !1)
                $(this).prop("disabled", !0);
                $("#chkRead,#selectall").removeAttr('disabled');

            }))
    });


    $(":checkbox").change(function () {
        void 0 !== $(this).attr("mainchkreadcm") && ($(this).is(":checked") ?
            ($("input[type=checkbox]").each(function () { $(this).removeAttr("disabled") }),
            $("input[type=checkbox]").each(function () {
                (void 0 != $(this).attr("chkreadcm")) && $(this).prop("checked", !0)
            })
            ,
            $("#SelectAllCm").prop("checked", !0)
            ) :
            $("#divTabClaim :checkbox").each(function () {
                $(this).removeAttr("checked");
                $(this).prop("checked", !1)
                $(this).prop("disabled", !0);
                $("#chkReadCm,#SelectAllCm").removeAttr('disabled');

            }))
    });
    $(":checkbox").change(function () {
        void 0 !== $(this).attr("mainchkreadcs") && ($(this).is(":checked") ?
            ($("input[type=checkbox]").each(function () { $(this).removeAttr("disabled") }),
            $("input[type=checkbox]").each(function () {
                (void 0 != $(this).attr("chkreadcs")) && $(this).prop("checked", !0)
            })
            ,
            $("#SelectAllCs").prop("checked", !0)
            ) :
            $("#divTabClaimScreen :checkbox").each(function () {
                $(this).removeAttr("checked");
                $(this).prop("checked", !1)
                $(this).prop("disabled", !0);
                $("#chkReadCs,#SelectAllCs").removeAttr('disabled');

            }))
    });
    $(":checkbox").change(function () {
        void 0 !== $(this).attr("mainchkreadsa") && ($(this).is(":checked") ?
            ($("input[type=checkbox]").each(function () { $(this).removeAttr("disabled") }),
            $("input[type=checkbox]").each(function () {
                (void 0 != $(this).attr("chkreadsa")) && $(this).prop("checked", !0)
            })
            ,
            $("#SelectAllSa").prop("checked", !0)
            ) :
            $("#divTabSystemAdmin :checkbox").each(function () {
                $(this).removeAttr("checked");
                $(this).prop("checked", !1)
                $(this).prop("disabled", !0);
                $("#chkReadSa,#SelectAllSa").removeAttr('disabled');

            }))
    });
    $(":checkbox").change(function () {
        void 0 !== $(this).attr("mainchkreadA") && ($(this).is(":checked") ?
            ($("input[type=checkbox]").each(function () { $(this).removeAttr("disabled") }),
            $("input[type=checkbox]").each(function () {
                (void 0 != $(this).attr("chkreada")) && $(this).prop("checked", !0)
            })
            ,
            $("#SelectAllA").prop("checked", !0)
            ) :
            $("#divAttachment :checkbox").each(function () {
                $(this).removeAttr("checked");
                $(this).prop("checked", !1)
                $(this).prop("disabled", !0);
                $("#chkReadA,#SelectAllA").removeAttr('disabled');

            }))
    });

    $(":checkbox").change(function () {
        var id = this.id;
        if (void 0 !== $(this).attr("mainchkwrite")) {
            var val = $(this).attr("mainchkwrite");

            $(this).is(":checked") ? $("input[type=checkbox]").each(function () {
                void 0 !== $(this).attr("childwrite") && $(this).attr("childwrite") == val && ($(this).removeAttr("disabled"), $(this).prop("checked", !0))


            }) : $("input[type=checkbox]").each(function () {
                void 0 !== $(this).attr("childwrite") && $(this).attr("childwrite") == val && ($(this).removeAttr("checked"))
            })
        }
    });

    $(":checkbox").change(function () {
        var id = this.id;
        if (void 0 !== $(this).attr("mainchkspl")) {
            var val = $(this).attr("mainchkspl");

            $(this).is(":checked") ? $("input[type=checkbox]").each(function () {
                void 0 !== $(this).attr("childspl") && $(this).attr("childspl") == val && ($(this).removeAttr("disabled"), $(this).prop("checked", !0))

            }) : $("input[type=checkbox]").each(function () {
                void 0 !== $(this).attr("childspl") && $(this).attr("childspl") == val && ($(this).removeAttr("checked"))
            })
        }
    });
    // *************************End Dashboard *************************//

    // *************************Claim Menus *************************//
    //    $("#SelectAllCm").click(function () {
    //        var all = $(this);
    //        $('#Claims input:checkbox').each(function () {

    //            $(this).prop("checked", all.prop("checked"));
    //            void 0 == $(this).attr("childwriteCm") && $(this).attr("mainchkwriteCm") && $(this).attr("childSpCm") && $(this).attr("mainchksplcm") && $('input:disabled').removeAttr('disabled');
    //        });
    //    });

    $(":checkbox").change(function () {
        void 0 !== $(this).attr("mainSelect") && ($(this).is(":checked") ?
            ($("input[type=checkbox]").each(function () { $('#divTabClaim :input[type=checkbox]').removeAttr("disabled") }),
            $("#divTabClaim :input[type=checkbox]").each(function () {
                (void 0 != $(this).attr("chkreadcm") || $(this).attr("childwriteCm") || $(this).attr("childspcm") || $(this).attr("childchkcm")) && $(this).prop("checked", !0)
            })
            ,
            $("#SelectAllCm").prop("checked", !0)
            ) :
            $("#divTabClaim :checkbox").each(function () {
                $(this).removeAttr("checked");
                $(this).prop("checked", !1)
                $(this).prop("disabled", !0);
                $("#SelectAllCm,#chkReadCm").removeAttr('disabled');
                void 0 !== $(this).attr("chkreadcm") && ($('#divTabClaim :input[type=checkbox]').removeAttr("disabled"))
            }))
    });


    $(":checkbox").change(function () {
        var id = this.id;
        if (void 0 !== $(this).attr("mainchkwriteCm")) {
            var val = $(this).attr("mainchkwriteCm");

            $(this).is(":checked") ? $("input[type=checkbox]").each(function () {
                void 0 !== $(this).attr("childwriteCm") && $(this).attr("childwriteCm") == val && ($(this).removeAttr("disabled"), $(this).prop("checked", !0))

            }) : $("input[type=checkbox]").each(function () {
                void 0 !== $(this).attr("childwriteCm") && $(this).attr("childwriteCm") == val && ($(this).removeAttr("checked"))
            })
        }
    });
    $(":checkbox").change(function () {
        var id = this.id;
        if (void 0 !== $(this).attr("mainchksplCm")) {
            var val = $(this).attr("mainchksplCm");

            $(this).is(":checked") ? $("input[type=checkbox]").each(function () {
                void 0 !== $(this).attr("childSpCm") && $(this).attr("childSpCm") == val && ($(this).removeAttr("disabled"), $(this).prop("checked", !0))

            }) : $("input[type=checkbox]").each(function () {
                void 0 !== $(this).attr("childSpCm") && $(this).attr("childSpCm") == val && ($(this).removeAttr("checked"))

            })
        }
    });
    // *************************End Claim Menus ***********************//
    // *************************Claims Screen *************************//
    //    $("#SelectAllCs").click(function () {
    //        var all = $(this);
    //        $('#divTabClaimScreen input:checkbox').each(function () {

    //            $(this).prop("checked", all.prop("checked"));
    //            $('input:disabled').removeAttr('disabled');
    //        });
    //    });

    //
    $("input[type=checkbox]").change(function () {
        void 0 !== $(this).attr("mainSelectCs") && ($(this).is(":checked") ?
            ($("#divTabClaimScreen :checkbox").each(function () { $(this).removeAttr("disabled") }),
            $("#divTabClaimScreen :checkbox").each(function () {
                (void 0 == $(this).attr("chkreadcs") || $(this).attr("childwriteCs") || $(this).attr("childspcs") || $(this).attr("childchkcs")) && $(this).prop("checked", !0)
            })
            ,
            $("#SelectAllCs").prop("checked", !0)
            ) :
            $("#divTabClaimScreen :checkbox").each(function () {
                $(this).removeAttr("checked");
                $(this).prop("checked", !1)
                $(this).prop("disabled", !0);
                $("#chkReadCs,#SelectAllCs").removeAttr('disabled');
                void 0 !== $(this).attr("chkreadcs") && ($(this).removeAttr("disabled"))

            }))
    });
    //

    $(":checkbox").change(function () {
        void 0 !== $(this).attr("mainSelect") && ($(this).is(":checked") ?
            ($("input[type=checkbox]").each(function () { $('#divTabClaim :input[type=checkbox]').removeAttr("disabled") }),
            $("input[type=checkbox]").each(function () {
                (void 0 != $(this).attr("chkreadcm") || $(this).attr("childwriteCm") || $(this).attr("childspcm") || $(this).attr("childchkcm")) && $(this).prop("checked", !0)
            })
            ,
            $("#SelectAllCm").prop("checked", !0)
            ) :
            $("#divTabClaim :checkbox").each(function () {
                $(this).removeAttr("checked");
                $(this).prop("checked", !1)
                $(this).prop("disabled", !0);
                $("#SelectAllCm,#chkReadCm").removeAttr('disabled');
                void 0 !== $(this).attr("chkreadcm") && ($('#divTabClaim :input[type=checkbox]').removeAttr("disabled"))
            }))
    });
    $(":checkbox").change(function () {
        var id = this.id;
        if (void 0 !== $(this).attr("mainchkwriteCs")) {
            var val = $(this).attr("mainchkwriteCs");

            $(this).is(":checked") ? $("input[type=checkbox]").each(function () {
                void 0 !== $(this).attr("childwritecs") && $(this).attr("childwritecs") == val && ($(this).removeAttr("disabled"), $(this).prop("checked", !0))


            }) : $("input[type=checkbox]").each(function () {
                void 0 !== $(this).attr("childwritecs") && $(this).attr("childwritecs") == val && ($(this).removeAttr("checked"))
            })
        }
    });
    $(":checkbox").change(function () {
        var id = this.id;
        if (void 0 !== $(this).attr("mainchksplCs")) {
            var val = $(this).attr("mainchksplCs");

            $(this).is(":checked") ? $("input[type=checkbox]").each(function () {
                void 0 !== $(this).attr("childSpCs") && $(this).attr("childSpCs") == val && ($(this).removeAttr("disabled"), $(this).prop("checked", !0))

            }) : $("input[type=checkbox]").each(function () {
                void 0 !== $(this).attr("childSpCs") && $(this).attr("childSpCs") == val && ($(this).removeAttr("checked"))

            })
        }
    });
    // *************************End Claims Screen ***********************//
    // *************************System Admin***********************//
    //    $("#SelectAllSa").click(function () {
    //        var all = $(this);
    //        $('#divTabSystemAdmin input:checkbox').each(function () {

    //            $(this).prop("checked", all.prop("checked"));
    //            $('input:disabled').removeAttr('disabled');
    //        });
    //    });

    $(":checkbox").change(function () {
        void 0 !== $(this).attr("mainSelectSa") && ($(this).is(":checked") ?
            ($("#divTabSystemAdmin :checkbox").each(function () { $(this).removeAttr("disabled") }),
            $("#divTabSystemAdmin :checkbox").each(function () {
                (void 0 == $(this).attr("chkreadSa") || $(this).attr("childwriteSa") || $(this).attr("childspSa") || $(this).attr("childchkSa")) && $(this).prop("checked", !0)
            })
            ,
            $("#SelectAllSa").prop("checked", !0)
            ) :
            $("#divTabSystemAdmin :checkbox").each(function () {
                $(this).removeAttr("checked");
                $(this).prop("checked", !1)
                $(this).prop("disabled", !0);
                $("#chkReadSa,#SelectAllSa").removeAttr('disabled');
                void 0 !== $(this).attr("chkreadSa") && ($(this).removeAttr("disabled"))

            }))
    });

    $(":checkbox").change(function () {
        var id = this.id;
        if (void 0 !== $(this).attr("mainchkwriteSa")) {
            var val = $(this).attr("mainchkwriteSa");

            $(this).is(":checked") ? $("input[type=checkbox]").each(function () {
                void 0 !== $(this).attr("childwriteSa") && $(this).attr("childwriteSa") == val && ($(this).removeAttr("disabled"), $(this).prop("checked", !0))


            }) : $("input[type=checkbox]").each(function () {
                void 0 !== $(this).attr("childwriteSa") && $(this).attr("childwriteSa") == val && ($(this).removeAttr("checked"))
            })
        }
    });
    $(":checkbox").change(function () {
        var id = this.id;
        if (void 0 !== $(this).attr("mainchksplSa")) {
            var val = $(this).attr("mainchksplSa");

            $(this).is(":checked") ? $("input[type=checkbox]").each(function () {
                void 0 !== $(this).attr("childSpSa") && $(this).attr("childSpSa") == val && ($(this).removeAttr("disabled"), $(this).prop("checked", !0))

            }) : $("input[type=checkbox]").each(function () {
                void 0 !== $(this).attr("childSpSa") && $(this).attr("childSpSa") == val && ($(this).removeAttr("checked"))

            })
        }
    });
    // *************************End System Admin***********************//

    // *************************Other***********************//
    //    $("#SelectAllA").click(function () {
    //        var all = $(this);
    //        $('#divAttachment input:checkbox').each(function () {

    //            $(this).prop("checked", all.prop("checked"));
    //            $('input:disabled').removeAttr('disabled');
    //        });
    //    });

    //
    //    $(":checkbox").change(function () {
    //        void 0 !== $(this).attr("mainSelectA") && ($(this).is(":checked") ?
    //            ($("input[type=checkbox]").each(function () { $(this).removeAttr("disabled") }),
    //            $("input[type=checkbox]").each(function () {
    //                (void 0 != $(this).attr("chkreada") || $(this).attr("childwritea") || $(this).attr("childspA") || $(this).attr("childchkA")) && $(this).prop("checked", !0)
    //            })
    //            ,
    //            $("#SelectAllA").prop("checked", !0)
    //            ) :
    //            $("#divAttachment :checkbox").each(function () {
    //                $(this).removeAttr("checked");
    //                $(this).prop("checked", !1)
    //                $(this).prop("disabled", !0);
    //                $("#chkReadA,#SelectAllA").removeAttr('disabled');
    //                void 0 !== $(this).attr("chkreadA") && ($(this).removeAttr("disabled"))

    //            }))
    //    });

    //
    $("#divAttachment :checkbox").each(function () {
        $(this).attr("dissable") && $(this).attr("dissable") == "readonly" && $(this).prop('disabled', true);

    });

    $("#btnSave").click(function () {

        $("#divAttachment :checkbox").each(function () {
            void 0 !== $(this).attr("dissable") && ($(this).removeAttr("disabled"))
        });

    });

    $(":checkbox").change(function () {
        var id = this.id;
        if (void 0 !== $(this).attr("mainchkwriteA")) {
            var val = $(this).attr("mainchkwriteA");

            $(this).is(":checked") ? $("input[type=checkbox]").each(function () {
                void 0 !== $(this).attr("childwriteA") && $(this).attr("childwriteA") == val && ($(this).removeAttr("disabled"), $(this).prop("checked", !0))


            }) : $("input[type=checkbox]").each(function () {
                void 0 !== $(this).attr("childwriteA") && $(this).attr("childwriteA") == val && ($(this).removeAttr("checked"))
            })
        }
    });
    $(":checkbox").change(function () {
        var id = this.id;
        if (void 0 !== $(this).attr("mainchksplA")) {
            var val = $(this).attr("mainchksplA");

            $(this).is(":checked") ? $("input[type=checkbox]").each(function () {
                void 0 !== $(this).attr("childSpA") && $(this).attr("childSpA") == val && ($(this).removeAttr("disabled"), $(this).prop("checked", !0))

            }) : $("input[type=checkbox]").each(function () {
                void 0 !== $(this).attr("childSpA") && $(this).attr("childSpA") == val && ($(this).removeAttr("checked"))

            })
        }
    });
    // *************************End Other***********************//
    // set uncheck all main header checkbox default
    $('.uncheck').removeAttr("checked")
</script>
