/****** Object:  StoredProcedure [dbo].[PROC_MIG_IL_INSERT_POLICY_PREMIUM_OPENITEMS]    Script Date: 12/02/2011 16:07:41 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PROC_MIG_IL_INSERT_POLICY_PREMIUM_OPENITEMS]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[PROC_MIG_IL_INSERT_POLICY_PREMIUM_OPENITEMS]
GO


/****** Object:  StoredProcedure [dbo].[PROC_MIG_IL_INSERT_POLICY_PREMIUM_OPENITEMS]    Script Date: 12/02/2011 16:07:41 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--drop proc [PROC_MIG_IL_INSERT_POLICY_PREMIUM_OPENITEMS] 4735,42,1,NULL,1,'1',null,null,null,'11/11/2011'
CREATE PROC  [dbo].[PROC_MIG_IL_INSERT_POLICY_PREMIUM_OPENITEMS]    
 (    
 @CUSTOMER_ID   int,   -- Id of customer whose premium policy will be posted    
 @POLICY_ID  int,   -- Policy identification number    
 @POLICY_VERSION_ID int,   -- Policy version identification number    
 @TRANS_DESC  varchar(255) OUTPUT, -- Transaction descrtipyion     
 @RISK_ID  int  =null,  -- RiskID of the risk as in risk info table    
 @RISK_TYPE  varchar(15) = NULL,  -- Type Of Risk for which premium is posted    
 @PARAM2   varchar(10)= NULL,  -- Source Row ID    
 @PARAM3   varchar(10) = NULL,  -- User Id    
 @RetVal   int  OUTPUT ,    
 @COMMITT_DATE DATETIME
)    
AS    
BEGIN    

 DECLARE @IS_PREBILL   SMALLINT,    
   @BILL_TYPE   CHAR(2),    
   @INSTALLMENT   SMALLINT,    
   @TRAN_ID   SMALLINT,    
   @HOME_EMP   CHAR(1),     @COMPLETE_APP   CHAR(1),    
   @CSR   Int,    
   @PROPRTY_INSP_CREDIT  CHAR(1),    
   @AGENCY_REG_COMM_PRCT  DECIMAL(25,8),    
   @AGENCY_REG_COMM DECIMAL(25,8),    
       
   @COMPLETE_APP_COMM  DECIMAL(25,8),    
   @COMPLETE_APP_COMM_PRCT DECIMAL(25,8),    
   @PROPERTY_INS_COMM  DECIMAL(25,8),    
   @PROPERTY_INS_COMM_PRCT DECIMAL(25,8),    
   @COMMISSION_AMOUNT_TYPE Char(1),    
    
   @AGENCY_ADDI_COMM_PRCT  DECIMAL(25,8),    
   @AGENCY_ADDI_COMM  DECIMAL(25,8),    
      
   @MODE    CHAR(1),    
   @STATE_ID   SMALLINT,    
   @APP_LOB   VARCHAR(10),    
   @APP_SUBLOB   VARCHAR(10),    
   @APP_AGENCY_ID   SMALLINT,    
   @PREBILL_DATE   DATETIME,    
   @GL_ID    SMALLINT,    
   @POLICY_EFFECTIVE_DATE DATETIME,    
   @INSTALLMENT_FEES DECIMAL(25,2),    
   @APP_TERMS  NVARCHAR(10),    
   @TOTAL_PREMIUM_AMOUNT DECIMAL(25,4),    
   @TOTAL_INTEREST_AMOUNT DECIMAL(25,4),    
   @TOTAL_FEES_AMOUNT DECIMAL(25,4),    
   @TOTAL_TAXES_AMOUNT DECIMAL(25,4),    
   @TOTAL_STATE_FEE_AMOUNT DECIMAL(25,4),    
   @APP_EFFECTIVE_DATE DATETIME,    
   @MIN_INSTALLMENT_AMOUNT DECIMAL(25,2),    
   @FISCAL_ID  SMALLINT,    
   @SOURCE_ROW_ID   INTEGER,    
   @USER_ID  SMALLINT,    
   @USER_CODE  VARCHAR(10),    
   @USER_NAME  VARCHAR(60),    
   @FULL_PAY_PLAN_ID SMALLINT,    
   @PROCESS_TERM  VARCHAR(5),    
   @SELECTED_DOWN_PAYMENT_MODE Int,    
   --Added For Transaction Codes     
   @TRAN_TYPE  VARCHAR(10),    
   @TRAN_TYPE_CODE  VARCHAR(10),    
   @COMMISSION_TYPE_CODE VARCHAR(10),    
   @IS_REWRITE_POLICY  Char(1) ,    
   @CURRENT_TERM   SmallInt,     
   @POLICY_LEVEL_COMISSION  decimal(6,2),    
   @POLICY_LEVEL_COMM_APPLIES nchar(1),    
   @POLICY_CO_INSURANCE int,    
   @POLICY_PAYER int,    
   @PAYOR_TYPE nvarchar(5),    
   @COMM_AMOUNT   Decimal(25,2),       
       
   -- Added For Entity Name & Transaction Description     
   @CUSTOMER_NAME Varchar(200),    
   @AGENCY_NAME Varchar(200),    
   @TRAN_DESC Varchar(500),    
       
   @EFT_TENTATIVE_DATE Int,    
   @EFT   INt,    
   @TOTAL_SERVICE_CHARGE  Decimal(25,2),    
       
   @DIV_ID    Int,     
   @DEPT_ID   Int,     
   @PC_ID    Int,     
   @POLICY_LOB   Int,    
   @POLICY_SUBLOB  Int,    
   @COUNTRY_ID   Int,    
   @AGENCY_CTR   INT,    
   @COMMISSION_TYPE NVARCHAR(15),    
   @PROCESS_ID   INT ,    
   @RENEWAL_PROCESS Int ,     
   @NBS_PROCESS  Int,    
   @POLICY_CURRENCY Int,    
   @BASE_CURRENCY  int,    
   @BASE_CURRENCY_CODE char(4),    
   @TRAN_CURRENCY_CODE char(4),    
   @RATE_FACTOR  Decimal(7,4)    
       
   --ANURAG    
   DECLARE @TRANSACTION_TYPE  INT    
   DECLARE @TRAN_PREMIUM_AMOUNT DECIMAL(25,4)    
   DECLARE @CO_APPLICANT_ID  INT    
   DECLARE @CO_APPLICANT_COMM_PRCT DECIMAL(25,8)    
   DECLARE @FEES_PRCT    DECIMAL(25,8)    
   DECLARE @PRO_LABORE_PRCT  DECIMAL(25,8)    
   DECLARE @PAYOR_ID    INT    
   DECLARE @POSTING_TYPE   VARCHAR(5)    
   DECLARE @ENDO_PROCESS   SMALLINT    
   DECLARE @CAN_PROCESS   SMALLINT    
   DECLARE @COMM_FLAG    BIT    
   DECLARE @AGENCY_COMM_INT  DECIMAL(25,4)    
   DECLARE @TRAN_INT_AMOUNT  DECIMAL(25,4)    
   DECLARE @ITEM_STATUS   VARCHAR(3)   
    /*Added By Lalit June 06,2011  
 cancelled policy fess,txes,interrest should not refund so we use different code for from RP,DP  
 we are using 'CP' ITEM_STATUS for cancellation process only  
    */  
   DECLARE @CANCEL_ITEM_STATUS VARCHAR(3) = 'CP'  
     
     
   --ANURAG    
          
   SET @TOTAL_SERVICE_CHARGE = 0     
   SET @EFT   = 11973    
    
   SET @SOURCE_ROW_ID  = ISNULL(@PARAM2,0)     
   SET @USER_ID  = ISNULL(@PARAM3,0)
   --SET @TOTAL_FEES=0     
    
   select @USER_CODE = USER_LOGIN_ID, @USER_NAME =  (USER_FNAME + ' ' + USER_LNAME) from MNT_USER_LIST     
    WITH(NOLOCK) where user_id = @USER_ID     
    
   SELECT @FULL_PAY_PLAN_ID = IDEN_PLAN_ID  FROM ACT_INSTALL_PLAN_DETAIL    
    WITH(NOLOCK) WHERE ISNULL(SYSTEM_GENERATED_FULL_PAY,0) = 1    
       
   SET @PROCESS_TERM =NULL    
      
   SELECT @PROCESS_TERM = TERM_TYPE FROM ACT_PREMIUM_PROCESS_DETAILS    
    WITH(NOLOCK) WHERE PROCESS_ID = @SOURCE_ROW_ID    
    
   -- If Process Term is nnot found treat it as First Term     
   -- Required if exception is occured & default premium(400) is posted    
   SET @PROCESS_TERM = ISNULL(@PROCESS_TERM,'F')    
       
   SELECT @COMM_FLAG = COMM_ON_INTEREST FROM MNT_SYSTEM_PARAMS    
 ---------------     
 /*Variables for holding various account numbers, to be used in posting*/     
 DECLARE @FULLPREMIUM_ACCOUNT  SMALLINT, --Premium account number    
   @MCCA_FEES_ACCOUNT   SMALLINT, --MCCA fee account number    
   @OTHER_FEES_ACCOUNT   SMALLINT, --Other fee account number    
   @PREMIUM_INCOME_ACCOUNT  SMALLINT, --Premium income account number    
   @COMM_EXPENSE_ACCOUNT   SMALLINT, --Comm expense account number    
   @COMM_PAYABLE_ACCOUNT   SMALLINT, --Commission payable account number    
   @INC_INTEREST_ACCOUNT  SMALLINT, --Policy Interest account number    
   @INC_POLICY_TAXES_ACCOUNT SMALLINT, --Policy Tax account number    
   @INC_POLICY_FEES_ACCOUNT SMALLINT, --Policy Fees account number    
   @COI_PREMIUM_PAYB   SMALLINT, --COI Premium Payb/recv Account    
   @COI_COMM_RECV    SMALLINT, --COI Commission Payb/recv Account    
   @COI_INT_RECV    SMALLINT --COI Interest Payb/recv Account    
    
     
 CREATE TABLE #TMP_POST    
 (     
  IDENT_COL    [int] IDENTITY(1,1) NOT NULL ,          
  ACCOUNT_ID    SMALLINT,    
  AMT     DECIMAL(25,4),    
  APP_ID            INT,    
  APP_VERSION_ID    INT,    
  CUSTOMER_ID   INT,    
  AGENCY_ID   INT,    
  SOURCE_EFFECTIVE_DATE  DATETIME,    
  DUE_DATE   DATETIME,    
  TRANS_DESC   VARCHAR(100),    
  POLICY_ID   INT,    
  POLICY_VERSION_ID  INT,    
  TRAN_CODE   VARCHAR(10),    
  TRAN_TYPE   VARCHAR(10),    
  ACCOUNTS   BIT,    
  OPEN_ITEMS   BIT,    
  INSTALLMENT_ROW_ID  INT,    
  TRAN_ENTITY   Varchar(200),    
  TRAN_DESC    Varchar(500) ,    
  COMMISSION_PERCENTAGE Decimal(25,2),    
  COMMISSION_TYPE  VARCHAR(10),    
  PAYOR_TYPE   nvarchar(10),    
  PAYOR_ID   INT,    
  POSTING_TYPE  VARCHAR(5),    
  IS_COMM_ON_INTEREST BIT    
 )    
     
 -- Fetching System Parameters     
    
 DECLARE @SYS_COMPLETE_APP_COMM_APPLICABILITY Int    
 DECLARE @SYS_PROPERTY_INS_COMM_APPLICABILITY Int    
     
 SELECT  @SYS_COMPLETE_APP_COMM_APPLICABILITY = ISNULL(SYS_COMPLETE_APP_COMM_APPLICABILITY,0)     
   ,@SYS_PROPERTY_INS_COMM_APPLICABILITY = ISNULL(SYS_PROPERTY_INS_COMM_APPLICABILITY,0)     
   ,@BASE_CURRENCY = BASE_CURRENCY    
 FROM MNT_SYSTEM_PARAMS WITH(NOLOCK)    
    
 --Fetching the application or policy information    
 SELECT  @BILL_TYPE     =  ISNULL(CPL.BILL_TYPE,''),     
   @INSTALLMENT    =  ISNULL(CPL.INSTALL_PLAN_ID, 0),    
   @COMPLETE_APP    =  ISNULL(CPL.COMPLETE_APP, 'N'),     
   @PROPRTY_INSP_CREDIT  =  CASE ISNULL(CPL.PROPRTY_INSP_CREDIT, 0) WHEN 10963 THEN 'Y' ELSE 'N' END,  
   @STATE_ID     =  CPL.STATE_ID,     
   @APP_LOB     =  CPL.POLICY_LOB,     
   @APP_SUBLOB            =  CPL.POLICY_SUBLOB,     
   @APP_AGENCY_ID    =  CPL.AGENCY_ID,    
   @APP_TERMS     =  CPL.POLICY_TERMS,    
   @POLICY_EFFECTIVE_DATE  =  CPL.POL_VER_EFFECTIVE_DATE,    
   @APP_EFFECTIVE_DATE  = CPL.POL_VER_EFFECTIVE_DATE,    
   @TRANS_DESC    = '',    
   @MIN_INSTALLMENT_AMOUNT =  ISNULL(IPD.MIN_INSTALLMENT_AMOUNT, 0),    
   @TRAN_DESC     = POLICY_NUMBER + ' ' + POLICY_DISP_VERSION,      
   @SELECTED_DOWN_PAYMENT_MODE = DOWN_PAY_MODE,    
   @CURRENT_TERM    =  CURRENT_TERM ,    
   @CSR      = ISNULL(CSR,0) ,    
   @EFT_TENTATIVE_DATE  = ISNULL(EFT_INFO.EFT_TENTATIVE_DATE,0) ,     
   @IS_REWRITE_POLICY  = ISNULL(IS_REWRITE_POLICY , 'N') ,     
   @HOME_EMP    = CASE ISNULL(IS_HOME_EMP, 0) WHEN 1 THEN 'Y' ELSE 'N' END ,    
   @DIV_ID     = CPL.DIV_ID,     
   @DEPT_ID    = CPL.DEPT_ID,     
   @PC_ID     = CPL.PC_ID,     
   @POLICY_LOB    = CPL.POLICY_LOB,    
   @POLICY_SUBLOB   = CPL.POLICY_SUBLOB,    
   @COUNTRY_ID    = CPL.COUNTRY_ID,    
   @POLICY_LEVEL_COMISSION = CPL.POLICY_LEVEL_COMISSION,    
   @POLICY_LEVEL_COMM_APPLIES= CPL.POLICY_LEVEL_COMM_APPLIES,    
   @POLICY_CO_INSURANCE  = CPL.CO_INSURANCE,    
   @POLICY_PAYER    = CPL.PAYOR,    
   @POLICY_CURRENCY  = CPL.POLICY_CURRENCY,    
   @TRANSACTION_TYPE  = TRANSACTION_TYPE --ANURAG       
 FROM POL_CUSTOMER_POLICY_LIST CPL WITH(NOLOCK)    
 LEFT JOIN ACT_INSTALL_PLAN_DETAIL IPD     
  ON IPD.IDEN_PLAN_ID = CPL.INSTALL_PLAN_ID    
 LEFT JOIN ACT_POL_EFT_CUST_INFO EFT_INFO     
  ON  CPL.CUSTOMER_ID = EFT_INFO.CUSTOMER_ID     
  AND CPL.POLICY_ID =   EFT_INFO.POLICY_ID     
  AND CPL.POLICY_VERSION_ID = EFT_INFO.POLICY_VERSION_ID    
 WHERE CPL.CUSTOMER_ID = @CUSTOMER_ID AND CPL.POLICY_ID = @POLICY_ID AND CPL.POLICY_VERSION_ID = @POLICY_VERSION_ID    
 --Fetching Currency Codes    
 SELECT @BASE_CURRENCY_CODE = CURR_CODE FROM MNT_CURRENCY_MASTER WITH(NOLOCK) WHERE CURRENCY_ID=@BASE_CURRENCY    
 SELECT @TRAN_CURRENCY_CODE = CURR_CODE FROM MNT_CURRENCY_MASTER WITH(NOLOCK) WHERE CURRENCY_ID=@POLICY_CURRENCY    
 SELECT @RATE_FACTOR = RATE FROM MNT_CURRENCY_RATE_MASTER WITH(NOLOCK)     
 WHERE CURRENCY_ID = @POLICY_CURRENCY ORDER BY RATE_EFFETIVE_FROM DESC    
     
 IF @@ERROR <> 0    
  GOTO ERRHANDLER    
    
 /*commented by Anurag    
 --Checking whetherinstall plan exists or not    
 -- Need to update in case of DB policies only,     
 -- for AB type this will be Zero or null always    
 IF (@INSTALLMENT = 0 AND @BILL_TYPE = 'DB')    
 BEGIN    
  -- If default plan exists for this policy term move policy     
  -- to this plan else to Full Pay Plan     
  IF EXISTS (SELECT IDEN_PLAN_ID FROM ACT_INSTALL_PLAN_DETAIL WITH(NOLOCK)    
    WHERE ISNULL(DEFAULT_PLAN,0) = 1 AND APPLABLE_POLTERM  = @APP_TERMS )    
  BEGIN     
   SELECT @INSTALLMENT = IDEN_PLAN_ID    
   FROM ACT_INSTALL_PLAN_DETAIL WITH(NOLOCK)    
   WHERE ISNULL(DEFAULT_PLAN,0) = 1    
   AND APPLABLE_POLTERM  = @APP_TERMS     
  END    
  ELSE     
  BEGIN    
   SET @INSTALLMENT = @FULL_PAY_PLAN_ID    
  END    
    
  UPDATE POL_CUSTOMER_POLICY_LIST    
  SET INSTALL_PLAN_ID = @INSTALLMENT    
  WHERE CUSTOMER_ID = @CUSTOMER_ID    
  AND POLICY_ID = @POLICY_ID    
  AND POLICY_VERSION_ID = @POLICY_VERSION_ID    
 END    
 */    
     
 --FETCHING the total premium amount,TOTAL FEES,TOTAL TAXES AND TOTAL INTEREST AMOUNT FROM INSTALL PLAN DATA TABEL    
 --SELECT @TOTAL_PREMIUM_AMOUNT = ISNULL(@PREMIUM_AMOUNT,0) + ISNULL(@MCCA_FEES,0) + ISNULL(@OTHER_FEES,0)    
 SELECT     
  @TOTAL_PREMIUM_AMOUNT = TOTAL_TRAN_PREMIUM,    
  @TOTAL_FEES_AMOUNT  = TOTAL_TRAN_FEES,    
  @TOTAL_INTEREST_AMOUNT = TOTAL_TRAN_INTEREST_AMOUNT,    
  @TOTAL_TAXES_AMOUNT = TOTAL_TRAN_TAXES,    
  @TRAN_TYPE    = TRAN_TYPE,    
  @TOTAL_STATE_FEE_AMOUNT= TOTAL_TRAN_STATE_FEES    
      
 FROM ACT_POLICY_INSTALL_PLAN_DATA WITH(NOLOCK)    
 WHERE CUSTOMER_ID=@CUSTOMER_ID and POLICY_ID=@POLICY_ID AND POLICY_VERSION_ID = @POLICY_VERSION_ID    
      
 IF @@ERROR <> 0    
  GOTO ERRHANDLER    
  --Fetch Insured Name     
 SELECT @CUSTOMER_NAME = ISNULL(CUSTOMER_CODE,'') + ' - ' + ISNULL(CUSTOMER_FIRST_NAME,'')     
  + ' ' + ISNULL(CUSTOMER_MIDDLE_NAME,'') +    
  CASE WHEN ISNULL(CUSTOMER_MIDDLE_NAME,'') = '' THEN '' ELSE ' ' END    
  +     
  ISNULL(CUSTOMER_LAST_NAME ,'')     
 FROM CLT_CUSTOMER_LIST WITH(NOLOCK)    
 WHERE CUSTOMER_ID = @CUSTOMER_ID     
 -------Creating Customer single Open Items for each transaction code     
 --Retreiving whether prebill or not    
 SELECT @PREBILL_DATE = GETDATE(), @GL_ID = 1, @IS_PREBILL = 0    
 --GET THE FISCAL ID ON THE BASIS OF CURRENT DATE.     
 SELECT @FISCAL_ID = FISCAL_ID FROM ACT_GENERAL_LEDGER WHERE DATEDIFF(DD, FISCAL_BEGIN_DATE, GETDATE()) > 0 AND DATEDIFF(DD, GETDATE(), FISCAL_END_DATE) > 0    
 IF @FISCAL_ID = 0    
 BEGIN    
  SET @FISCAL_ID = 1    
 END    
    
 IF ( DATEDIFF(DD,@PREBILL_DATE , @POLICY_EFFECTIVE_DATE  ) > 0)     
 BEGIN    
  SELECT @IS_PREBILL = 1    
 END    
    
 IF @@ERROR <> 0    
  GOTO ERRHANDLER    
 IF @IS_PREBILL = 0  -- No prebill    
 BEGIN    
 SELECT     
   @FULLPREMIUM_ACCOUNT = CASE @BILL_TYPE     
    WHEN 'AB' THEN AST_UNCOLL_PRM_AGENCY     
    ELSE AST_UNCOLL_PRM_CUSTOMER     
      END,    
 -- Commented  Account no longer valid    
 --   @MCCA_FEES_ACCOUNT    = INC_PRM_WRTN_MCCA,    
   @OTHER_FEES_ACCOUNT   = INC_PRM_WRTN_OTH_STATE_ASSESS_FEE,    
   @PREMIUM_INCOME_ACCOUNT = INC_PRM_WRTN,    
   @COMM_EXPENSE_ACCOUNT   = EXP_COMM_INCURRED ,    
   @COMM_PAYABLE_ACCOUNT  = CASE @BILL_TYPE     
    WHEN 'AB' THEN LIB_COMM_PAYB_AGENCY_BILL     
    ELSE LIB_COMM_PAYB_DIRECT_BILL  END,    
   @INC_INTEREST_ACCOUNT  = INC_INTEREST_AMOUNT,    
   @INC_POLICY_TAXES_ACCOUNT = INC_POLICY_TAXES,    
   @INC_POLICY_FEES_ACCOUNT = INC_POLICY_FEES,    
   @COI_PREMIUM_PAYB   = LIB_COI_PREMIUM_PAYB,    
   @COI_COMM_RECV    = AST_COI_COMM_RECV,    
   @COI_INT_RECV    = AST_COI_INT_RECV    
  FROM ACT_GENERAL_LEDGER WITH(NOLOCK)    
  WHERE FISCAL_ID = @FISCAL_ID     
    
  IF @@ERROR <> 0    
   GOTO ERRHANDLER      
  --Updating the transaction description    
  --SET @TRANS_DESC = @TRANS_DESC + CHAR(13) + 'Premium has been posted in relevant accounts.'    
  SET @TRANS_DESC = @TRANS_DESC + CHAR(13) + DBO.fun_GetMessage(300, 2)    
       
 END     
 ELSE    
 BEGIN     
  SELECT      
   @FULLPREMIUM_ACCOUNT = CASE @BILL_TYPE     
    WHEN 'AB' THEN AST_UNCOLL_PRM_SUSPENSE_AGENCY_BILL     
    ELSE AST_UNCOLL_PREM_IN_SUSPENSE_DIRECT_BILL     
    END,    
 --Comented  Account No Longer Used    
 --    @MCCA_FEES_ACCOUNT = CASE @BILL_TYPE     
 --     WHEN 'AB' THEN AST_MCCA_FEE_SUSPENSE_AGENCY_BILL     
 --      ELSE AST_MCCA_FEE_SUSPENSE_DIRECT_BILL     
 --     END,    
   @OTHER_FEES_ACCOUNT = CASE @BILL_TYPE     
    WHEN 'AB' THEN AST_OTHER_STATE_ASSMT_FEE_SUSPENSE_AGENCY_BILL     
    ELSE AST_OTHER_STATE_ASSMT_FEE_SUSPENSE_DIRECT_BILL     
    END,    
   @PREMIUM_INCOME_ACCOUNT = CASE @BILL_TYPE     
    WHEN 'AB' THEN AST_PRM_WRIT_SUSPENSE_AGENCY_BILL     
    ELSE AST_PRM_WRIT_SUSPENSE_DIRECT_BILL     
    END,     
   @COMM_EXPENSE_ACCOUNT = CASE @BILL_TYPE     
    WHEN 'AB' THEN AST_COMM_EXPENSE_IN_SUSPENSE_AGENCY_BILL     
    ELSE AST_COMM_EXPENSE_IN_SUSPENSE_DIRECT_BILL     
    END,    
   @COMM_PAYABLE_ACCOUNT = CASE @BILL_TYPE     
    WHEN 'AB' THEN AST_COMM_PAYABLE_IN_SUSPENSE_AGENCY_BILL     
    ELSE AST_COMM_PAYABLE_IN_SUSPENSE_DIRECT_BILL     
    END    
  FROM ACT_GENERAL_LEDGER WITH(NOLOCK)    
  WHERE FISCAL_ID = @FISCAL_ID     
  --Updating the transaction description    
  --SET @TRANS_DESC = @TRANS_DESC + CHAR(13) + 'Premium has been posted in suspense accounts.'    
  SET @TRANS_DESC = @TRANS_DESC + CHAR(13) + DBO.fun_GetMessage(301, 2)    
    
  IF @@ERROR <> 0    
   GOTO ERRHANDLER    
 END    
     
 -- Chk here for the process type    
 SET @NBS_PROCESS  = 24    
 SET @RENEWAL_PROCESS   = 5      
 SET @ENDO_PROCESS  = 14    
 SET @CAN_PROCESS  = 2    
       
 SELECT @PROCESS_ID = PROCESS_ID FROM POL_POLICY_PROCESS  WITH(NOLOCK)    
 WHERE POLICY_ID = @POLICY_ID AND NEW_POLICY_VERSION_ID = @POLICY_VERSION_ID AND CUSTOMER_ID = @CUSTOMER_ID    
     
 SET @TRAN_TYPE = 'PREM'    
 SET @TRAN_TYPE_CODE = 'NBSP'    
 SET @COMMISSION_TYPE_CODE = 'NBS'    
 SET @ITEM_STATUS = 'DP'    
      
 IF(@PROCESS_ID = 5)-- renewal     
 BEGIN    
  --Set Transaction Code For Renewal    
  SET @TRAN_TYPE_CODE = 'RENP'    
  SET @COMMISSION_TYPE_CODE = 'REN'    
 END    
 ELSE IF(@PROCESS_ID in(12 ,2)  )-- cancellation    
 BEGIN    
  --Set Transaction Code For Cancellation    
  SET @TRAN_TYPE_CODE = 'CANP'    
  SET @COMMISSION_TYPE_CODE = 'CAN'    
  SET @ITEM_STATUS = 'RP'    
 END    
 ELSE IF(@PROCESS_ID = 14)-- Endorsement    
 BEGIN    
 --Set Transaction Code For Endorsement    
 SET @TRAN_TYPE_CODE = 'ENDP'    
 SET @COMMISSION_TYPE_CODE = 'END'    
 SET @ITEM_STATUS = 'DP'    
   
 /* COMMENTED BY ANURAG ON 21ST APRIL 2011.    
 --CHECK CURRENT TERM IN CASE OF ENDORSEMENT. IF CURRENT TERM IS 1 THEN ITS ENDORSEMENT ON NEW BUSINESS OTHERWISE ITS ENDORSEMENT ON RENEWAL    
 IF (SELECT CURRENT_TERM FROM POL_CUSTOMER_POLICY_LIST WHERE CUSTOMER_ID = @CUSTOMER_ID AND POLICY_ID = @POLICY_ID AND POLICY_VERSION_ID = (    
  SELECT TOP 1 POLICY_VERSION_ID FROM POL_POLICY_PROCESS WHERE CUSTOMER_ID = @CUSTOMER_ID AND POLICY_ID = @POLICY_ID AND NEW_POLICY_VERSION_ID = @POLICY_VERSION_ID ORDER BY ENDORSEMENT_NO DESC) ) = 1    
 BEGIN        
    SET @TRAN_TYPE_CODE = 'NBSP'    
    SET @COMMISSION_TYPE_CODE = 'NBS'    
 END    
 ELSE    
 BEGIN    
    SET @TRAN_TYPE_CODE = 'RENP'    
    SET @COMMISSION_TYPE_CODE = 'REN'    
 END    
 */  
 END  
 ELSE IF(@PROCESS_ID in(35,37))-- Endorsement UNDO    
 BEGIN    
 --Set Transaction Code For Endorsement    
 SET @TRAN_TYPE_CODE = 'ENDP'    
 SET @COMMISSION_TYPE_CODE = 'END'    
 SET @ITEM_STATUS = 'RP'     
 END    
      
 SET @PAYOR_TYPE='CUS'    
     
 --ANURAG - in Case of Leader, Create COI Open Items    
 IF @POLICY_CO_INSURANCE = 14548 OR @POLICY_CO_INSURANCE = 14549    
 BEGIN    
  DECLARE @COMPANY_ID   INT    
  DECLARE @COI_PRCT   DECIMAL(25,2)    
  DECLARE @COI_FEE   DECIMAL(25,2)    
  DECLARE @INSTALLMENT_AMT DECIMAL(25,4)    
  DECLARE @FOLLOWER_PREM  DECIMAL(25,4)    
  DECLARE @FOLLOWER_COMM  DECIMAL(25,4)    
      
  SELECT @PAYOR_TYPE = 'LEAD'    
  SET @POSTING_TYPE = 'COI'    
        
  IF @POLICY_CO_INSURANCE = 14549    
  BEGIN    
   SET @PAYOR_TYPE = 'FOLL'    
  END    
          
  --CREATING COI OPEN ITEM FOR PREMIUM    
  INSERT INTO #TMP_POST(    
   ACCOUNT_ID, AMT, APP_ID, APP_VERSION_ID, CUSTOMER_ID, SOURCE_EFFECTIVE_DATE    
   , TRANS_DESC, POLICY_ID, POLICY_VERSION_ID, ACCOUNTS, OPEN_ITEMS, TRAN_TYPE,TRAN_CODE,    
   TRAN_ENTITY,TRAN_DESC, DUE_DATE,COMMISSION_PERCENTAGE,PAYOR_TYPE, PAYOR_ID, POSTING_TYPE)       
  SELECT     
   @COI_PREMIUM_PAYB, SUM(INSTALLMENT_AMOUNT), @POLICY_ID, @POLICY_VERSION_ID, @CUSTOMER_ID, @APP_EFFECTIVE_DATE,     
   'COI Premium', @POLICY_ID, @POLICY_VERSION_ID, 1, 1, @TRAN_TYPE,@TRAN_TYPE_CODE,    
   @CUSTOMER_NAME, @TRAN_DESC,    
   CASE WHEN CAST(CONVERT(VARCHAR,@APP_EFFECTIVE_DATE,101) AS DATETIME) < CAST(CONVERT(VARCHAR, GETDATE() ,101) AS DATETIME)     
   THEN CAST(CONVERT(VARCHAR, GETDATE() ,101) AS DATETIME)    
   ELSE  @APP_EFFECTIVE_DATE     
   END,     
   @AGENCY_REG_COMM_PRCT, @PAYOR_TYPE, CO_COMPANY_ID, @POSTING_TYPE       
  FROM     
   ACT_POLICY_CO_BILLING_DETAILS    
  WHERE    
   CUSTOMER_ID = @CUSTOMER_ID AND POLICY_ID = @POLICY_ID AND POLICY_VERSION_ID = @POLICY_VERSION_ID    
  GROUP BY    
   CO_COMPANY_ID      
         
  --CREATING CONTRA COI ITEM FOR PREMIUM    
  INSERT INTO #TMP_POST(    
   ACCOUNT_ID, AMT, APP_ID, APP_VERSION_ID, CUSTOMER_ID, SOURCE_EFFECTIVE_DATE    
   , TRANS_DESC, POLICY_ID, POLICY_VERSION_ID, ACCOUNTS, OPEN_ITEMS, TRAN_TYPE,TRAN_CODE,    
   TRAN_ENTITY,TRAN_DESC, DUE_DATE,COMMISSION_PERCENTAGE,PAYOR_TYPE, PAYOR_ID, POSTING_TYPE)     
  SELECT     
   @PREMIUM_INCOME_ACCOUNT, SUM(INSTALLMENT_AMOUNT) * -1, @POLICY_ID, @POLICY_VERSION_ID, @CUSTOMER_ID, @APP_EFFECTIVE_DATE,     
   'COI Premium', @POLICY_ID, @POLICY_VERSION_ID, 1, 0, @TRAN_TYPE,@TRAN_TYPE_CODE,    
   @CUSTOMER_NAME, @TRAN_DESC,    
   CASE WHEN CAST(CONVERT(VARCHAR,@APP_EFFECTIVE_DATE,101) AS DATETIME) < CAST(CONVERT(VARCHAR, GETDATE() ,101) AS DATETIME)     
   THEN CAST(CONVERT(VARCHAR, GETDATE() ,101) AS DATETIME)    
   ELSE  @APP_EFFECTIVE_DATE     
   END,     
   @AGENCY_REG_COMM_PRCT, @PAYOR_TYPE, CO_COMPANY_ID, @POSTING_TYPE       
  FROM     
   ACT_POLICY_CO_BILLING_DETAILS    
  WHERE    
   CUSTOMER_ID = @CUSTOMER_ID AND POLICY_ID = @POLICY_ID AND POLICY_VERSION_ID = @POLICY_VERSION_ID    
  GROUP BY    
   CO_COMPANY_ID      
         
  --CREATING COI OPEN ITEM FOR COMMISSION    
  INSERT INTO #TMP_POST(    
   ACCOUNT_ID, AMT, APP_ID, APP_VERSION_ID, CUSTOMER_ID, SOURCE_EFFECTIVE_DATE    
   , TRANS_DESC, POLICY_ID, POLICY_VERSION_ID, ACCOUNTS, OPEN_ITEMS, TRAN_TYPE,TRAN_CODE,    
   TRAN_ENTITY,TRAN_DESC, DUE_DATE,COMMISSION_PERCENTAGE,PAYOR_TYPE, PAYOR_ID, POSTING_TYPE)     
  SELECT     
   @COI_COMM_RECV, SUM(CO_COMM_AMT) * -1, @POLICY_ID, @POLICY_VERSION_ID, @CUSTOMER_ID, @APP_EFFECTIVE_DATE,     
   'COI Commission', @POLICY_ID, @POLICY_VERSION_ID, 1, 0, @TRAN_TYPE,@COMMISSION_TYPE_CODE + 'C',    
   @CUSTOMER_NAME, @TRAN_DESC,    
   CASE WHEN CAST(CONVERT(VARCHAR,@APP_EFFECTIVE_DATE,101) AS DATETIME) < CAST(CONVERT(VARCHAR, GETDATE() ,101) AS DATETIME)     
   THEN CAST(CONVERT(VARCHAR, GETDATE() ,101) AS DATETIME)    
   ELSE  @APP_EFFECTIVE_DATE     
   END,     
   @AGENCY_REG_COMM_PRCT, @PAYOR_TYPE, CO_COMPANY_ID, @POSTING_TYPE       
  FROM     
   ACT_POLICY_CO_BILLING_DETAILS    
  WHERE    
   CUSTOMER_ID = @CUSTOMER_ID AND POLICY_ID = @POLICY_ID AND POLICY_VERSION_ID = @POLICY_VERSION_ID    
  GROUP BY    
   CO_COMPANY_ID    
       
  --CREATING COI CONTRA ITEM FOR COMMISSION    
  INSERT INTO #TMP_POST(    
   ACCOUNT_ID, AMT, APP_ID, APP_VERSION_ID, CUSTOMER_ID, SOURCE_EFFECTIVE_DATE    
   , TRANS_DESC, POLICY_ID, POLICY_VERSION_ID, ACCOUNTS, OPEN_ITEMS, TRAN_TYPE,TRAN_CODE,    
   TRAN_ENTITY,TRAN_DESC, DUE_DATE,COMMISSION_PERCENTAGE,PAYOR_TYPE, PAYOR_ID, POSTING_TYPE)     
  SELECT     
   @COI_PREMIUM_PAYB, SUM(CO_COMM_AMT), @POLICY_ID, @POLICY_VERSION_ID, @CUSTOMER_ID, @APP_EFFECTIVE_DATE,     
   'COI Commission', @POLICY_ID, @POLICY_VERSION_ID, 1, 1, @TRAN_TYPE,@COMMISSION_TYPE_CODE + 'C',    
   @CUSTOMER_NAME, @TRAN_DESC,    
   CASE WHEN CAST(CONVERT(VARCHAR,@APP_EFFECTIVE_DATE,101) AS DATETIME) < CAST(CONVERT(VARCHAR, GETDATE() ,101) AS DATETIME)     
   THEN CAST(CONVERT(VARCHAR, GETDATE() ,101) AS DATETIME)    
   ELSE  @APP_EFFECTIVE_DATE     
   END,     
   @AGENCY_REG_COMM_PRCT, @PAYOR_TYPE, CO_COMPANY_ID, @POSTING_TYPE       
  FROM     
   ACT_POLICY_CO_BILLING_DETAILS    
  WHERE    
   CUSTOMER_ID = @CUSTOMER_ID AND POLICY_ID = @POLICY_ID AND POLICY_VERSION_ID = @POLICY_VERSION_ID    
  GROUP BY    
   CO_COMPANY_ID       
      
  --CREATING COI OPEN ITEM FOR INTEREST    
  INSERT INTO #TMP_POST(    
   ACCOUNT_ID, AMT, APP_ID, APP_VERSION_ID, CUSTOMER_ID, SOURCE_EFFECTIVE_DATE    
   , TRANS_DESC, POLICY_ID, POLICY_VERSION_ID, ACCOUNTS, OPEN_ITEMS, TRAN_TYPE,TRAN_CODE,    
   TRAN_ENTITY,TRAN_DESC, DUE_DATE,COMMISSION_PERCENTAGE,PAYOR_TYPE, PAYOR_ID, POSTING_TYPE)     
  SELECT     
   @COI_INT_RECV, SUM(INTEREST_AMOUNT) * -1, @POLICY_ID, @POLICY_VERSION_ID, @CUSTOMER_ID, @APP_EFFECTIVE_DATE,     
   'COI Interest', @POLICY_ID, @POLICY_VERSION_ID, 1, 0, @TRAN_TYPE,@COMMISSION_TYPE_CODE + 'I',    
   @CUSTOMER_NAME, @TRAN_DESC,    
   CASE WHEN CAST(CONVERT(VARCHAR,@APP_EFFECTIVE_DATE,101) AS DATETIME) < CAST(CONVERT(VARCHAR, GETDATE() ,101) AS DATETIME)     
   THEN CAST(CONVERT(VARCHAR, GETDATE() ,101) AS DATETIME)    
   ELSE  @APP_EFFECTIVE_DATE     
   END,     
   @AGENCY_REG_COMM_PRCT, @PAYOR_TYPE, CO_COMPANY_ID, @POSTING_TYPE       
  FROM     
   ACT_POLICY_CO_BILLING_DETAILS    
  WHERE    
   CUSTOMER_ID = @CUSTOMER_ID AND POLICY_ID = @POLICY_ID AND POLICY_VERSION_ID = @POLICY_VERSION_ID    
  GROUP BY    
   CO_COMPANY_ID    
       
  --CREATING COI CONTRA ITEM FOR INTEREST    
  INSERT INTO #TMP_POST(    
   ACCOUNT_ID, AMT, APP_ID, APP_VERSION_ID, CUSTOMER_ID, SOURCE_EFFECTIVE_DATE    
   , TRANS_DESC, POLICY_ID, POLICY_VERSION_ID, ACCOUNTS, OPEN_ITEMS, TRAN_TYPE,TRAN_CODE,    
   TRAN_ENTITY,TRAN_DESC, DUE_DATE,COMMISSION_PERCENTAGE,PAYOR_TYPE, PAYOR_ID, POSTING_TYPE)     
  SELECT     
   @COI_PREMIUM_PAYB, SUM(INTEREST_AMOUNT), @POLICY_ID, @POLICY_VERSION_ID, @CUSTOMER_ID, @APP_EFFECTIVE_DATE,     
   'COI Interest', @POLICY_ID, @POLICY_VERSION_ID, 1, 1, @TRAN_TYPE,@COMMISSION_TYPE_CODE + 'I',    
   @CUSTOMER_NAME, @TRAN_DESC,    
   CASE WHEN CAST(CONVERT(VARCHAR,@APP_EFFECTIVE_DATE,101) AS DATETIME) < CAST(CONVERT(VARCHAR, GETDATE() ,101) AS DATETIME)     
   THEN CAST(CONVERT(VARCHAR, GETDATE() ,101) AS DATETIME)    
   ELSE  @APP_EFFECTIVE_DATE     
   END,     
   @AGENCY_REG_COMM_PRCT, @PAYOR_TYPE, CO_COMPANY_ID, @POSTING_TYPE       
  FROM     
   ACT_POLICY_CO_BILLING_DETAILS    
  WHERE    
   CUSTOMER_ID = @CUSTOMER_ID AND POLICY_ID = @POLICY_ID AND POLICY_VERSION_ID = @POLICY_VERSION_ID    
  GROUP BY    
   CO_COMPANY_ID    
       
  IF @COMM_FLAG = 1    
  BEGIN     
   --CREATING COI OPEN ITEM FOR COMMISSION ON INTEREST    
   INSERT INTO #TMP_POST(    
    ACCOUNT_ID, AMT, APP_ID, APP_VERSION_ID, CUSTOMER_ID, SOURCE_EFFECTIVE_DATE    
    , TRANS_DESC, POLICY_ID, POLICY_VERSION_ID, ACCOUNTS, OPEN_ITEMS, TRAN_TYPE,TRAN_CODE,    
    TRAN_ENTITY,TRAN_DESC, DUE_DATE,COMMISSION_PERCENTAGE,PAYOR_TYPE, PAYOR_ID, POSTING_TYPE, IS_COMM_ON_INTEREST)     
   SELECT     
    @COI_COMM_RECV, SUM(CO_INT_COMM_AMT) * -1, @POLICY_ID, @POLICY_VERSION_ID, @CUSTOMER_ID, @APP_EFFECTIVE_DATE,     
    'COI Commission on Int.', @POLICY_ID, @POLICY_VERSION_ID, 1, 0, @TRAN_TYPE,@COMMISSION_TYPE_CODE + 'C',    
    @CUSTOMER_NAME, @TRAN_DESC,    
    CASE WHEN CAST(CONVERT(VARCHAR,@APP_EFFECTIVE_DATE,101) AS DATETIME) < CAST(CONVERT(VARCHAR, GETDATE() ,101) AS DATETIME)     
    THEN CAST(CONVERT(VARCHAR, GETDATE() ,101) AS DATETIME)    
    ELSE  @APP_EFFECTIVE_DATE     
    END,     
    @AGENCY_REG_COMM_PRCT, @PAYOR_TYPE, CO_COMPANY_ID, @POSTING_TYPE, 1    
   FROM     
    ACT_POLICY_CO_BILLING_DETAILS    
   WHERE    
    CUSTOMER_ID = @CUSTOMER_ID AND POLICY_ID = @POLICY_ID AND POLICY_VERSION_ID = @POLICY_VERSION_ID    
   GROUP BY    
    CO_COMPANY_ID    
        
   --CREATING COI CONTRA ITEM FOR COMMISSION ON INTEREST    
   INSERT INTO #TMP_POST(    
    ACCOUNT_ID, AMT, APP_ID, APP_VERSION_ID, CUSTOMER_ID, SOURCE_EFFECTIVE_DATE    
    , TRANS_DESC, POLICY_ID, POLICY_VERSION_ID, ACCOUNTS, OPEN_ITEMS, TRAN_TYPE,TRAN_CODE,    
    TRAN_ENTITY,TRAN_DESC, DUE_DATE,COMMISSION_PERCENTAGE,PAYOR_TYPE, PAYOR_ID, POSTING_TYPE, IS_COMM_ON_INTEREST)     
   SELECT     
    @COI_PREMIUM_PAYB, SUM(CO_INT_COMM_AMT), @POLICY_ID, @POLICY_VERSION_ID, @CUSTOMER_ID, @APP_EFFECTIVE_DATE,     
    'COI Commission on Int.', @POLICY_ID, @POLICY_VERSION_ID, 1, 1, @TRAN_TYPE,@COMMISSION_TYPE_CODE + 'C',    
    @CUSTOMER_NAME, @TRAN_DESC,    
    CASE WHEN CAST(CONVERT(VARCHAR,@APP_EFFECTIVE_DATE,101) AS DATETIME) < CAST(CONVERT(VARCHAR, GETDATE() ,101) AS DATETIME)     
    THEN CAST(CONVERT(VARCHAR, GETDATE() ,101) AS DATETIME)    
    ELSE  @APP_EFFECTIVE_DATE     
    END,     
    @AGENCY_REG_COMM_PRCT, @PAYOR_TYPE, CO_COMPANY_ID, @POSTING_TYPE, 1       
   FROM     
    ACT_POLICY_CO_BILLING_DETAILS    
   WHERE    
    CUSTOMER_ID = @CUSTOMER_ID AND POLICY_ID = @POLICY_ID AND POLICY_VERSION_ID = @POLICY_VERSION_ID    
   GROUP BY    
    CO_COMPANY_ID    
  END    
         
  --COI Open Item Posting    
  INSERT INTO ACT_COI_OPEN_ITEMS    
  (    
   UPDATED_FROM, SOURCE_ROW_ID, SOURCE_NUM, SOURCE_TRAN_DATE, SOURCE_EFF_DATE,     
   POSTING_DATE, TOTAL_DUE, TOTAL_PAID, AGENCY_COMM_APPLIES, AGENCY_COMM_PERC,     
   AGENCY_COMM_AMT, AGENCY_ID,     
   CUSTOMER_ID, POLICY_ID, POLICY_VERSION_ID, PAYMENT_DATE, DATE_FULL_PAID, PAYMENT_STATUS, NOT_COUNTED_RECEIVABLE,     
   PAYOR_TYPE, DIV_ID, DEPT_ID, PC_ID, IS_TEMP_ENTRY, IN_RECON, IS_PREBILL, BILL_CODE, GROSS_AMOUNT,     
   ITEM_TRAN_CODE, ITEM_TRAN_CODE_TYPE, TRAN_ID, CASH_ACCOUNTING, RECUR_JOURNAL_VERSION, JE_RECON_COUNTER,     
   AMT_IN_RECON, OPEN_RECON_CTR, LOB_ID, SUB_LOB_ID, COUNTRY_ID, STATE_ID, TRANS_DESC, NET_PREMIUM ,    
   RISK_ID, RISK_TYPE,COMMISSION_TYPE    
   ,BASE_CURRENCY,TRAN_CURRENCY,RATE_FACTOR, CO_COMPANY_ID, ITEM_STATUS, IS_COMM_ON_INTEREST    
  )     
  SELECT     
   'P', @SOURCE_ROW_ID, @SOURCE_ROW_ID, @POLICY_EFFECTIVE_DATE, @POLICY_EFFECTIVE_DATE,    
   GETDATE(), TP.AMT, 0, CASE @HOME_EMP WHEN 'Y' THEN 'N' ELSE 'Y' END, TP.COMMISSION_PERCENTAGE,     
   --@AGENCY_REG_COMM,     
   TP.AMT,    
   TP.AGENCY_ID,    
   TP.CUSTOMER_ID, TP.POLICY_ID, TP.POLICY_VERSION_ID, NULL, NULL, 1, NULL,    
   'COI', @DIV_ID, @DEPT_ID, @PC_ID, NULL, NULL, @IS_PREBILL, @BILL_TYPE, @TOTAL_PREMIUM_AMOUNT,    
   TP.TRAN_CODE, TP.TRAN_TYPE, NULL, NULL, NULL, NULL,     
   NULL, NULL, @POLICY_LOB, @POLICY_SUBLOB, @COUNTRY_ID, @STATE_ID, TP.TRANS_DESC, @TOTAL_PREMIUM_AMOUNT,     
   @RISK_ID,@RISK_TYPE,COMMISSION_TYPE    
   ,@BASE_CURRENCY_CODE , @TRAN_CURRENCY_CODE,@RATE_FACTOR, PAYOR_ID,    
   CASE   
 WHEN @PROCESS_ID = @ENDO_PROCESS AND TP.AMT > 0 THEN 'RP'   
 WHEN @PROCESS_ID IN (37,35) AND TP.AMT > 0 THEN 'RP'   
 ELSE @ITEM_STATUS   
 END, TP.IS_COMM_ON_INTEREST    
  FROM #TMP_POST TP WITH(NOLOCK)     
  WHERE TP.OPEN_ITEMS = 1 AND ISNULL(TP.AMT,0) <> 0 AND POSTING_TYPE = 'COI'      
       
 END      
     
 /*COMMENTED BY ANURAG - NO LONGER IN USE      
 -- PAYER = 14542 - Insured,14543 - Third Party,14544 - Leader,    
 --CO-INSURANCE 14547 -Direct, 14548-Leader, 14549-Follower     
 -- payer is leader then create open items for Leader    
 if(@POLICY_PAYER!=14542 and @POLICY_CO_INSURANCE=14549)    
 begin    
  set @PAYOR_TYPE='LEAD'    
  set @CUSTOMER_NAME=    
  (SELECT REIN_COMAPANY_NAME FROM MNT_REIN_COMAPANY_LIST (NOLOCK)    
   WHERE REIN_COMAPANY_ID=    
   (SELECT TOP 1 COMPANY_ID FROM POL_CO_INSURANCE (NOLOCK)    
    WHERE LEADER_FOLLOWER =14549     
    AND CUSTOMER_ID  =@CUSTOMER_ID     
    AND POLICY_ID  =@POLICY_ID     
    AND POLICY_VERSION_ID=@POLICY_VERSION_ID    
   )    
  )     
 end    
 */    
     
 --ANURAG - in Case of Follower, no open item for Customer or Agency is required    
 IF @POLICY_CO_INSURANCE <> 14549    
  BEGIN    
   --ANURAG - In case of Master Policy    
   IF @TRANSACTION_TYPE = 14560    
   BEGIN      
    SELECT @PAYOR_TYPE = 'COAPP'    
    --CREATING CUSTOMER OPEN ITEM FOR PREMIUM    
    INSERT INTO #TMP_POST(    
     ACCOUNT_ID, AMT, APP_ID, APP_VERSION_ID, CUSTOMER_ID, SOURCE_EFFECTIVE_DATE    
     , TRANS_DESC, POLICY_ID, POLICY_VERSION_ID, ACCOUNTS, OPEN_ITEMS, TRAN_TYPE,TRAN_CODE,    
     TRAN_ENTITY,TRAN_DESC, DUE_DATE,COMMISSION_PERCENTAGE,PAYOR_TYPE, PAYOR_ID)     
    SELECT     
     @FULLPREMIUM_ACCOUNT, INSTALLMENT_AMOUNT, @POLICY_ID, @POLICY_VERSION_ID, @CUSTOMER_ID, @APP_EFFECTIVE_DATE,     
     'Premium due.', @POLICY_ID, @POLICY_VERSION_ID, 1, 1, @TRAN_TYPE,@TRAN_TYPE_CODE,    
     @CUSTOMER_NAME, @TRAN_DESC,    
     CASE WHEN CAST(CONVERT(VARCHAR,@APP_EFFECTIVE_DATE,101) AS DATETIME) < CAST(CONVERT(VARCHAR, GETDATE() ,101) AS DATETIME)     
     THEN CAST(CONVERT(VARCHAR, GETDATE() ,101) AS DATETIME)    
     ELSE  @APP_EFFECTIVE_DATE     
     END,     
     @AGENCY_REG_COMM_PRCT, @PAYOR_TYPE, CO_APPLICANT_ID    
    FROM    
     ACT_POLICY_INSTALLMENT_DETAILS    
    WHERE     
     CUSTOMER_ID = @CUSTOMER_ID AND POLICY_ID = @POLICY_ID AND POLICY_VERSION_ID = @POLICY_VERSION_ID    
         
    --CREATING WRITTEN PREMIUM ACCOUNT RECORD     
    INSERT INTO #TMP_POST(    
     ACCOUNT_ID, AMT, APP_ID, APP_VERSION_ID, CUSTOMER_ID, SOURCE_EFFECTIVE_DATE,    
      TRANS_DESC, POLICY_ID, POLICY_VERSION_ID, ACCOUNTS, OPEN_ITEMS, TRAN_TYPE, TRAN_CODE    
     ,TRAN_ENTITY,TRAN_DESC, PAYOR_TYPE, PAYOR_ID)    
    SELECT    
     @PREMIUM_INCOME_ACCOUNT, INSTALLMENT_AMOUNT * -1, @POLICY_ID, @POLICY_VERSION_ID, @CUSTOMER_ID, GETDATE(),    
     '', @POLICY_ID, @POLICY_VERSION_ID, 1, 0, @TRAN_TYPE ,@TRAN_TYPE_CODE,    
     CASE UPPER(@BILL_TYPE) WHEN 'AB' Then @AGENCY_NAME    
     ELSE  @CUSTOMER_NAME END,    
     @TRAN_DESC, @PAYOR_TYPE, CO_APPLICANT_ID    
    FROM    
     ACT_POLICY_INSTALLMENT_DETAILS    
    WHERE     
     CUSTOMER_ID = @CUSTOMER_ID AND POLICY_ID = @POLICY_ID AND POLICY_VERSION_ID = @POLICY_VERSION_ID    
        
         
    --CREATING CUSTOMER OPEN ITEM FOR TAXES        
    INSERT INTO #TMP_POST(    
     ACCOUNT_ID, AMT, APP_ID, APP_VERSION_ID, CUSTOMER_ID, SOURCE_EFFECTIVE_DATE    
     , TRANS_DESC, POLICY_ID, POLICY_VERSION_ID, ACCOUNTS, OPEN_ITEMS, TRAN_TYPE,TRAN_CODE,    
     TRAN_ENTITY,TRAN_DESC, DUE_DATE,COMMISSION_PERCENTAGE,PAYOR_TYPE, PAYOR_ID)     
    SELECT     
     @FULLPREMIUM_ACCOUNT, TAXES , @POLICY_ID, @POLICY_VERSION_ID, @CUSTOMER_ID, @APP_EFFECTIVE_DATE,     
     'Tax due.', @POLICY_ID, @POLICY_VERSION_ID, 1, 1, @TRAN_TYPE, @COMMISSION_TYPE_CODE + 'T',    
     @CUSTOMER_NAME, @TRAN_DESC,    
     CASE WHEN CAST(CONVERT(VARCHAR,@APP_EFFECTIVE_DATE,101) AS DATETIME) < CAST(CONVERT(VARCHAR, GETDATE() ,101) AS DATETIME)     
     THEN CAST(CONVERT(VARCHAR, GETDATE() ,101) AS DATETIME)    
     ELSE  @APP_EFFECTIVE_DATE     
     END,    
     @AGENCY_REG_COMM_PRCT, @PAYOR_TYPE, CO_APPLICANT_ID    
    FROM    
     ACT_POLICY_INSTALLMENT_DETAILS    
    WHERE     
     CUSTOMER_ID = @CUSTOMER_ID AND POLICY_ID = @POLICY_ID AND POLICY_VERSION_ID = @POLICY_VERSION_ID     
       
    --CREATING CONTRA FOR TAXES      
    INSERT INTO #TMP_POST(    
     ACCOUNT_ID, AMT, APP_ID, APP_VERSION_ID, CUSTOMER_ID, SOURCE_EFFECTIVE_DATE,    
     TRANS_DESC, POLICY_ID, POLICY_VERSION_ID, ACCOUNTS, OPEN_ITEMS, TRAN_TYPE, TRAN_CODE    
     ,TRAN_ENTITY,TRAN_DESC, PAYOR_TYPE, PAYOR_ID)    
    SELECT    
     @INC_POLICY_TAXES_ACCOUNT, TAXES * -1, @POLICY_ID, @POLICY_VERSION_ID, @CUSTOMER_ID, GETDATE(),    
     '', @POLICY_ID, @POLICY_VERSION_ID, 1, 0, @TRAN_TYPE , @COMMISSION_TYPE_CODE + 'T',    
     CASE UPPER(@BILL_TYPE) WHEN 'AB' Then @AGENCY_NAME    
     ELSE  @CUSTOMER_NAME END,    
     @TRAN_DESC, @PAYOR_TYPE, CO_APPLICANT_ID    
    FROM    
     ACT_POLICY_INSTALLMENT_DETAILS    
    WHERE     
     CUSTOMER_ID = @CUSTOMER_ID AND POLICY_ID = @POLICY_ID AND POLICY_VERSION_ID = @POLICY_VERSION_ID     
            
    --CREATING CUSTOMER OPEN ITEM FOR INTEREST        
    INSERT INTO #TMP_POST(    
     ACCOUNT_ID, AMT, APP_ID, APP_VERSION_ID, CUSTOMER_ID, SOURCE_EFFECTIVE_DATE    
     , TRANS_DESC, POLICY_ID, POLICY_VERSION_ID, ACCOUNTS, OPEN_ITEMS, TRAN_TYPE,TRAN_CODE,    
     TRAN_ENTITY,TRAN_DESC, DUE_DATE,COMMISSION_PERCENTAGE,PAYOR_TYPE, PAYOR_ID)     
    SELECT     
     @FULLPREMIUM_ACCOUNT, INTEREST_AMOUNT , @POLICY_ID, @POLICY_VERSION_ID, @CUSTOMER_ID, @APP_EFFECTIVE_DATE,     
     'Interest due.', @POLICY_ID, @POLICY_VERSION_ID, 1, 1, @TRAN_TYPE, @COMMISSION_TYPE_CODE + 'I',    
     @CUSTOMER_NAME,@TRAN_DESC,    
     CASE WHEN CAST(CONVERT(VARCHAR,@APP_EFFECTIVE_DATE,101) AS DATETIME) < CAST(CONVERT(VARCHAR, GETDATE() ,101) AS DATETIME)     
     THEN CAST(CONVERT(VARCHAR, GETDATE() ,101) AS DATETIME)    
     ELSE  @APP_EFFECTIVE_DATE     
     END,    
     @AGENCY_REG_COMM_PRCT, @PAYOR_TYPE, CO_APPLICANT_ID    
    FROM    
     ACT_POLICY_INSTALLMENT_DETAILS    
    WHERE     
     CUSTOMER_ID = @CUSTOMER_ID AND POLICY_ID = @POLICY_ID AND POLICY_VERSION_ID = @POLICY_VERSION_ID    
         
    --CREATING CONTRA FOR INTEREST      
    INSERT INTO #TMP_POST(    
     ACCOUNT_ID, AMT, APP_ID, APP_VERSION_ID, CUSTOMER_ID, SOURCE_EFFECTIVE_DATE,    
     TRANS_DESC, POLICY_ID, POLICY_VERSION_ID, ACCOUNTS, OPEN_ITEMS, TRAN_TYPE, TRAN_CODE    
     ,TRAN_ENTITY,TRAN_DESC, PAYOR_TYPE, PAYOR_ID)    
    SELECT    
     @INC_INTEREST_ACCOUNT, INTEREST_AMOUNT * -1, @POLICY_ID, @POLICY_VERSION_ID, @CUSTOMER_ID, GETDATE(),    
     '', @POLICY_ID, @POLICY_VERSION_ID, 1, 0, @TRAN_TYPE , @COMMISSION_TYPE_CODE + 'I',    
     CASE UPPER(@BILL_TYPE) WHEN 'AB' Then @AGENCY_NAME    
     ELSE  @CUSTOMER_NAME END,    
     @TRAN_DESC, @PAYOR_TYPE, CO_APPLICANT_ID    
    FROM    
     ACT_POLICY_INSTALLMENT_DETAILS    
    WHERE     
     CUSTOMER_ID = @CUSTOMER_ID AND POLICY_ID = @POLICY_ID AND POLICY_VERSION_ID = @POLICY_VERSION_ID     
        
        
    --CREATING CUSTOMER OPEN ITEM FOR FEES    
    INSERT INTO #TMP_POST(    
     ACCOUNT_ID, AMT, APP_ID, APP_VERSION_ID, CUSTOMER_ID, SOURCE_EFFECTIVE_DATE    
     , TRANS_DESC, POLICY_ID, POLICY_VERSION_ID, ACCOUNTS, OPEN_ITEMS, TRAN_TYPE,TRAN_CODE,    
     TRAN_ENTITY,TRAN_DESC, DUE_DATE,COMMISSION_PERCENTAGE,PAYOR_TYPE, PAYOR_ID)     
    SELECT     
     @FULLPREMIUM_ACCOUNT, FEE , @POLICY_ID, @POLICY_VERSION_ID, @CUSTOMER_ID, @APP_EFFECTIVE_DATE,     
     'Fees due.', @POLICY_ID, @POLICY_VERSION_ID, 1, 1, @TRAN_TYPE, @COMMISSION_TYPE_CODE + 'F',    
     @CUSTOMER_NAME,@TRAN_DESC,    
     CASE WHEN CAST(CONVERT(VARCHAR,@APP_EFFECTIVE_DATE,101) AS DATETIME) < CAST(CONVERT(VARCHAR, GETDATE() ,101) AS DATETIME)     
     THEN CAST(CONVERT(VARCHAR, GETDATE() ,101) AS DATETIME)    
     ELSE  @APP_EFFECTIVE_DATE     
     END,    
     @AGENCY_REG_COMM_PRCT, @PAYOR_TYPE, CO_APPLICANT_ID    
    FROM    
     ACT_POLICY_INSTALLMENT_DETAILS    
    WHERE     
     CUSTOMER_ID = @CUSTOMER_ID AND POLICY_ID = @POLICY_ID AND POLICY_VERSION_ID = @POLICY_VERSION_ID    
        
    --CREATING CONTRA FOR INTEREST      
    INSERT INTO #TMP_POST(    
     ACCOUNT_ID, AMT, APP_ID, APP_VERSION_ID, CUSTOMER_ID, SOURCE_EFFECTIVE_DATE,    
     TRANS_DESC, POLICY_ID, POLICY_VERSION_ID, ACCOUNTS, OPEN_ITEMS, TRAN_TYPE, TRAN_CODE    
     ,TRAN_ENTITY,TRAN_DESC, PAYOR_TYPE, PAYOR_ID)    
    SELECT    
     @INC_POLICY_FEES_ACCOUNT, FEE * -1, @POLICY_ID, @POLICY_VERSION_ID, @CUSTOMER_ID, GETDATE(),    
     '', @POLICY_ID, @POLICY_VERSION_ID, 1, 0, @TRAN_TYPE , @COMMISSION_TYPE_CODE + 'F',    
     CASE UPPER(@BILL_TYPE) WHEN 'AB' Then @AGENCY_NAME    
     ELSE  @CUSTOMER_NAME END,    
     @TRAN_DESC, @PAYOR_TYPE, CO_APPLICANT_ID    
    FROM    
     ACT_POLICY_INSTALLMENT_DETAILS    
    WHERE     
     CUSTOMER_ID = @CUSTOMER_ID AND POLICY_ID = @POLICY_ID AND POLICY_VERSION_ID = @POLICY_VERSION_ID    
            
    --anurag - state fees is pending    
       
   END    
   ELSE  --ANURAG - In case of Normal Policy    
   BEGIN    
    --ANURAG - GET THE PRIMARY CO-APPLICANT    
    SELECT @PAYOR_ID = APPLICANT_ID     
    FROM POL_APPLICANT_LIST     
    WHERE POLICY_ID = @POLICY_ID AND POLICY_VERSION_ID = @POLICY_VERSION_ID AND CUSTOMER_ID = @CUSTOMER_ID AND IS_PRIMARY_APPLICANT = 1    
          
    ----Enter Consolidate Entery of premium in Customer open Items    
    INSERT INTO #TMP_POST(ACCOUNT_ID, AMT, APP_ID, APP_VERSION_ID, CUSTOMER_ID, SOURCE_EFFECTIVE_DATE    
    , TRANS_DESC, POLICY_ID, POLICY_VERSION_ID, ACCOUNTS, OPEN_ITEMS, TRAN_TYPE,TRAN_CODE,    
    TRAN_ENTITY,TRAN_DESC, DUE_DATE,COMMISSION_PERCENTAGE,PAYOR_TYPE, PAYOR_ID)     
    VALUES (@FULLPREMIUM_ACCOUNT, @TOTAL_PREMIUM_AMOUNT , @POLICY_ID, @POLICY_VERSION_ID, @CUSTOMER_ID, @APP_EFFECTIVE_DATE,     
    'Premium due.', @POLICY_ID, @POLICY_VERSION_ID, 1, 1, @TRAN_TYPE,@TRAN_TYPE_CODE,    
    @CUSTOMER_NAME,@TRAN_DESC,    
    CASE WHEN CAST(CONVERT(VARCHAR,@APP_EFFECTIVE_DATE,101) AS DATETIME) < CAST(CONVERT(VARCHAR, GETDATE() ,101) AS DATETIME)     
    THEN CAST(CONVERT(VARCHAR, GETDATE() ,101) AS DATETIME)    
    ELSE  @APP_EFFECTIVE_DATE     
    END,     
    @AGENCY_REG_COMM_PRCT,@PAYOR_TYPE, @PAYOR_ID)    
        
    --Anurag -- moved it here from bottom    
    --Inserting the written premium in written premium account    
    INSERT INTO #TMP_POST(ACCOUNT_ID, AMT, APP_ID, APP_VERSION_ID, CUSTOMER_ID, SOURCE_EFFECTIVE_DATE,    
      TRANS_DESC, POLICY_ID, POLICY_VERSION_ID, ACCOUNTS, OPEN_ITEMS, TRAN_TYPE, TRAN_CODE    
     ,TRAN_ENTITY,TRAN_DESC, PAYOR_ID)    
    VALUES(@PREMIUM_INCOME_ACCOUNT, @TOTAL_PREMIUM_AMOUNT * -1, @POLICY_ID, @POLICY_VERSION_ID, @CUSTOMER_ID, GETDATE(),    
      '', @POLICY_ID, @POLICY_VERSION_ID, 1, 0, @TRAN_TYPE ,@TRAN_TYPE_CODE,    
     CASE UPPER(@BILL_TYPE) WHEN 'AB' Then @AGENCY_NAME    
     ELSE  @CUSTOMER_NAME END,    
     @TRAN_DESC, @PAYOR_ID    
     )    
        
    ----Enter Consolidate Entery of Taxes in Customer open Items    
    if (@TOTAL_TAXES_AMOUNT!=0)    
    BEGIN    
     INSERT INTO #TMP_POST(ACCOUNT_ID, AMT, APP_ID, APP_VERSION_ID, CUSTOMER_ID, SOURCE_EFFECTIVE_DATE    
     , TRANS_DESC, POLICY_ID, POLICY_VERSION_ID, ACCOUNTS, OPEN_ITEMS, TRAN_TYPE,TRAN_CODE,    
     TRAN_ENTITY,TRAN_DESC, DUE_DATE, COMMISSION_PERCENTAGE,PAYOR_TYPE, PAYOR_ID)     
     VALUES (@FULLPREMIUM_ACCOUNT, @TOTAL_TAXES_AMOUNT , @POLICY_ID, @POLICY_VERSION_ID, @CUSTOMER_ID, @APP_EFFECTIVE_DATE,     
     'Tax due.', @POLICY_ID, @POLICY_VERSION_ID, 1, 1,   
     @TRAN_TYPE,  
     @COMMISSION_TYPE_CODE + 'T',    
     @CUSTOMER_NAME,@TRAN_DESC,    
     CASE WHEN CAST(CONVERT(VARCHAR,@APP_EFFECTIVE_DATE,101) AS DATETIME) < CAST(CONVERT(VARCHAR, GETDATE() ,101) AS DATETIME)     
     THEN CAST(CONVERT(VARCHAR, GETDATE() ,101) AS DATETIME)    
     ELSE  @APP_EFFECTIVE_DATE     
     END,    
     @AGENCY_REG_COMM_PRCT,@PAYOR_TYPE, @PAYOR_ID)    
          
     --Anurag - Enter Contra of Taxes     
        
     INSERT INTO #TMP_POST(ACCOUNT_ID, AMT, APP_ID, APP_VERSION_ID, CUSTOMER_ID, SOURCE_EFFECTIVE_DATE    
     , TRANS_DESC, POLICY_ID, POLICY_VERSION_ID, ACCOUNTS, OPEN_ITEMS, TRAN_TYPE,TRAN_CODE,    
     TRAN_ENTITY,TRAN_DESC, DUE_DATE, COMMISSION_PERCENTAGE,PAYOR_TYPE, PAYOR_ID)     
     VALUES (@INC_POLICY_TAXES_ACCOUNT, @TOTAL_TAXES_AMOUNT * -1, @POLICY_ID, @POLICY_VERSION_ID, @CUSTOMER_ID, @APP_EFFECTIVE_DATE,     
     'Tax due.', @POLICY_ID, @POLICY_VERSION_ID, 1, 0,  
     @TRAN_TYPE,  
      @COMMISSION_TYPE_CODE + 'T',    
     @CUSTOMER_NAME,@TRAN_DESC,    
     CASE WHEN CAST(CONVERT(VARCHAR,@APP_EFFECTIVE_DATE,101) AS DATETIME) < CAST(CONVERT(VARCHAR, GETDATE() ,101) AS DATETIME)     
     THEN CAST(CONVERT(VARCHAR, GETDATE() ,101) AS DATETIME)    
     ELSE  @APP_EFFECTIVE_DATE     
     END,    
     @AGENCY_REG_COMM_PRCT,@PAYOR_TYPE, @PAYOR_ID)    
    END     
        
    ----Enter Consolidate Entery of Interest in Customer open Items    
    if (@TOTAL_INTEREST_AMOUNT!=0)    
    BEGIN    
     INSERT INTO #TMP_POST(ACCOUNT_ID, AMT, APP_ID, APP_VERSION_ID, CUSTOMER_ID, SOURCE_EFFECTIVE_DATE    
     , TRANS_DESC, POLICY_ID, POLICY_VERSION_ID, ACCOUNTS, OPEN_ITEMS, TRAN_TYPE,TRAN_CODE,    
     TRAN_ENTITY,TRAN_DESC, DUE_DATE, COMMISSION_PERCENTAGE,PAYOR_TYPE, PAYOR_ID)     
     VALUES (@FULLPREMIUM_ACCOUNT, @TOTAL_INTEREST_AMOUNT , @POLICY_ID, @POLICY_VERSION_ID, @CUSTOMER_ID, @APP_EFFECTIVE_DATE,     
     'Interest due.', @POLICY_ID, @POLICY_VERSION_ID, 1, 1,   
     @TRAN_TYPE,  
     @COMMISSION_TYPE_CODE + 'I',    
     @CUSTOMER_NAME,@TRAN_DESC,    
     CASE WHEN CAST(CONVERT(VARCHAR,@APP_EFFECTIVE_DATE,101) AS DATETIME) < CAST(CONVERT(VARCHAR, GETDATE() ,101) AS DATETIME)     
     THEN CAST(CONVERT(VARCHAR, GETDATE() ,101) AS DATETIME)    
     ELSE  @APP_EFFECTIVE_DATE     
     END,    
     @AGENCY_REG_COMM_PRCT,@PAYOR_TYPE, @PAYOR_ID)    
        
     --Anurag - Enter contra of Interest       
     INSERT INTO #TMP_POST(ACCOUNT_ID, AMT, APP_ID, APP_VERSION_ID, CUSTOMER_ID, SOURCE_EFFECTIVE_DATE    
     , TRANS_DESC, POLICY_ID, POLICY_VERSION_ID, ACCOUNTS, OPEN_ITEMS, TRAN_TYPE,TRAN_CODE,    
     TRAN_ENTITY,TRAN_DESC, DUE_DATE, COMMISSION_PERCENTAGE,PAYOR_TYPE, PAYOR_ID)     
     VALUES (@INC_INTEREST_ACCOUNT, @TOTAL_INTEREST_AMOUNT * -1, @POLICY_ID, @POLICY_VERSION_ID, @CUSTOMER_ID, @APP_EFFECTIVE_DATE,     
     'Interest due.', @POLICY_ID, @POLICY_VERSION_ID, 1, 0,   
     @TRAN_TYPE,  
     @COMMISSION_TYPE_CODE + 'I',    
     @CUSTOMER_NAME,@TRAN_DESC,    
     CASE WHEN CAST(CONVERT(VARCHAR,@APP_EFFECTIVE_DATE,101) AS DATETIME) < CAST(CONVERT(VARCHAR, GETDATE() ,101) AS DATETIME)     
     THEN CAST(CONVERT(VARCHAR, GETDATE() ,101) AS DATETIME)    
     ELSE  @APP_EFFECTIVE_DATE     
     END,    
     @AGENCY_REG_COMM_PRCT,@PAYOR_TYPE, @PAYOR_ID)    
    END    
        
    ----Enter Consolidate Entery of fees in Customer open Items    
    if (@TOTAL_FEES_AMOUNT!=0)    
    BEGIN    
     INSERT INTO #TMP_POST(ACCOUNT_ID, AMT, APP_ID, APP_VERSION_ID, CUSTOMER_ID, SOURCE_EFFECTIVE_DATE    
     , TRANS_DESC, POLICY_ID, POLICY_VERSION_ID, ACCOUNTS, OPEN_ITEMS, TRAN_TYPE,TRAN_CODE,    
     TRAN_ENTITY,TRAN_DESC, DUE_DATE, COMMISSION_PERCENTAGE,PAYOR_TYPE, PAYOR_ID)     
     VALUES (@FULLPREMIUM_ACCOUNT, @TOTAL_FEES_AMOUNT , @POLICY_ID, @POLICY_VERSION_ID, @CUSTOMER_ID, @APP_EFFECTIVE_DATE,     
     'Fees due.', @POLICY_ID, @POLICY_VERSION_ID, 1, 1,   
    @TRAN_TYPE,  
     @COMMISSION_TYPE_CODE + 'F',    
     @CUSTOMER_NAME,@TRAN_DESC,    
     CASE WHEN CAST(CONVERT(VARCHAR,@APP_EFFECTIVE_DATE,101) AS DATETIME) < CAST(CONVERT(VARCHAR, GETDATE() ,101) AS DATETIME)     
     THEN CAST(CONVERT(VARCHAR, GETDATE() ,101) AS DATETIME)    
     ELSE  @APP_EFFECTIVE_DATE     
     END,    
     @AGENCY_REG_COMM_PRCT,@PAYOR_TYPE, @PAYOR_ID)    
         
     --Anurag - Enter contra of fees     
     INSERT INTO #TMP_POST(ACCOUNT_ID, AMT, APP_ID, APP_VERSION_ID, CUSTOMER_ID, SOURCE_EFFECTIVE_DATE    
     , TRANS_DESC, POLICY_ID, POLICY_VERSION_ID, ACCOUNTS, OPEN_ITEMS, TRAN_TYPE,TRAN_CODE,    
     TRAN_ENTITY,TRAN_DESC, DUE_DATE, COMMISSION_PERCENTAGE,PAYOR_TYPE, PAYOR_ID)     
     VALUES (@INC_POLICY_FEES_ACCOUNT, @TOTAL_FEES_AMOUNT * -1, @POLICY_ID, @POLICY_VERSION_ID, @CUSTOMER_ID, @APP_EFFECTIVE_DATE,     
     'Fees due.', @POLICY_ID, @POLICY_VERSION_ID, 1, 0,   
     @TRAN_TYPE,  
     @COMMISSION_TYPE_CODE + 'F',    
     @CUSTOMER_NAME,@TRAN_DESC,    
     CASE WHEN CAST(CONVERT(VARCHAR,@APP_EFFECTIVE_DATE,101) AS DATETIME) < CAST(CONVERT(VARCHAR, GETDATE() ,101) AS DATETIME)     
     THEN CAST(CONVERT(VARCHAR, GETDATE() ,101) AS DATETIME)    
     ELSE  @APP_EFFECTIVE_DATE     
     END,    
     @AGENCY_REG_COMM_PRCT,@PAYOR_TYPE, @PAYOR_ID)    
    END    
        
    /* COMMENTED BY ANURAG    
    ----Enter Consolidate Entery of state fees in Customer open Items    
    if (@TOTAL_STATE_FEE_AMOUNT!=0)    
    BEGIN    
     INSERT INTO #TMP_POST(ACCOUNT_ID, AMT, APP_ID, APP_VERSION_ID, CUSTOMER_ID, SOURCE_EFFECTIVE_DATE    
     , TRANS_DESC, POLICY_ID, POLICY_VERSION_ID, ACCOUNTS, OPEN_ITEMS, TRAN_TYPE,TRAN_CODE,    
     TRAN_ENTITY,TRAN_DESC, DUE_DATE, COMMISSION_PERCENTAGE,PAYOR_TYPE, PAYOR_ID)     
     VALUES (@FULLPREMIUM_ACCOUNT, @TOTAL_STATE_FEE_AMOUNT , @POLICY_ID, @POLICY_VERSION_ID, @CUSTOMER_ID, @APP_EFFECTIVE_DATE,     
     'State Fees due.', @POLICY_ID, @POLICY_VERSION_ID, 1, 1, @TRAN_TYPE,'MCCAF',--@TRAN_TYPE_CODE,    
     @CUSTOMER_NAME,@TRAN_DESC,    
     CASE WHEN CAST(CONVERT(VARCHAR,@APP_EFFECTIVE_DATE,101) AS DATETIME) < CAST(CONVERT(VARCHAR, GETDATE() ,101) AS DATETIME)     
     THEN CAST(CONVERT(VARCHAR, GETDATE() ,101) AS DATETIME)    
     ELSE  @APP_EFFECTIVE_DATE     
     END,    
     @AGENCY_REG_COMM_PRCT,@PAYOR_TYPE, @PAYOR_ID)    
         
     --Anurag - Enter contra of state fees     
     INSERT INTO #TMP_POST(ACCOUNT_ID, AMT, APP_ID, APP_VERSION_ID, CUSTOMER_ID, SOURCE_EFFECTIVE_DATE    
     , TRANS_DESC, POLICY_ID, POLICY_VERSION_ID, ACCOUNTS, OPEN_ITEMS, TRAN_TYPE,TRAN_CODE,    
     TRAN_ENTITY,TRAN_DESC, DUE_DATE, COMMISSION_PERCENTAGE,PAYOR_TYPE, PAYOR_ID)     
     VALUES (@OTHER_FEES_ACCOUNT, @TOTAL_STATE_FEE_AMOUNT * -1, @POLICY_ID, @POLICY_VERSION_ID, @CUSTOMER_ID, @APP_EFFECTIVE_DATE,     
     'State Fees due.', @POLICY_ID, @POLICY_VERSION_ID, 1, 0, @TRAN_TYPE,'MCCAF',--@TRAN_TYPE_CODE,    
     @CUSTOMER_NAME,@TRAN_DESC,    
     CASE WHEN CAST(CONVERT(VARCHAR,@APP_EFFECTIVE_DATE,101) AS DATETIME) < CAST(CONVERT(VARCHAR, GETDATE() ,101) AS DATETIME)     
     THEN CAST(CONVERT(VARCHAR, GETDATE() ,101) AS DATETIME)    
     ELSE  @APP_EFFECTIVE_DATE     
     END,    
     @AGENCY_REG_COMM_PRCT,@PAYOR_TYPE, @PAYOR_ID)    
    END    
   */    
   END    
    
   /*Commented by Anurag    
   IF NOT EXISTS( SELECT IDEN_PLAN_ID FROM ACT_INSTALL_PLAN_DETAIL WITH(NOLOCK)    
    WHERE IDEN_PLAN_ID = @INSTALLMENT AND isnull(IS_ACTIVE,'N')='Y')    
    BEGIN    
     -- if installment plan is deactivated then diary entry will go     
     set @RetVal =-3         
     RETURN -3    
    END     
   */         
             
   --Fetching the agency commission from Remuneration table FOR EACH BROKER    
   DECLARE CR_AGENCY CURSOR FOR    
    SELECT  ISNULL(PR.COMMISSION_PERCENT, 0), PR.BROKER_ID, ATC.TRAN_CODE AS COMMISSION_TYPE, PR.AMOUNT as COMM_AMOUNT, CO_APPLICANT_ID    
    FROM POL_REMUNERATION PR WITH(NOLOCK)    
    LEFT JOIN ACT_TRANSACTION_CODES ATC WITH(NOLOCK) ON PR.COMMISSION_TYPE=ATC.TRAN_ID    
    WHERE CUSTOMER_ID=@CUSTOMER_ID    
    AND POLICY_ID =@POLICY_ID    
    AND POLICY_VERSION_ID=@POLICY_VERSION_ID    
    AND ISNULL(PR.IS_ACTIVE,'Y')='Y'    
        
   OPEN CR_AGENCY    
   FETCH NEXT  FROM CR_AGENCY into @AGENCY_REG_COMM_PRCT,@APP_AGENCY_ID,@COMMISSION_TYPE,@COMM_AMOUNT, @CO_APPLICANT_ID    
    WHILE @@FETCH_STATUS = 0    
    BEGIN    
      --Fetch  Agency Name    
     SELECT @AGENCY_NAME = ISNULL(AGENCY_CODE,'') + ' - ' + ISNULL(AGENCY_DISPLAY_NAME,'')     
     FROM MNT_AGENCY_LIST WITH(NOLOCK) WHERE AGENCY_ID = @APP_AGENCY_ID    
     IF(convert(DECIMAL(25,4),@AGENCY_REG_COMM_PRCT)= 0 and @COMMISSION_TYPE!='ENFEE')    
     BEGIN    
      set @RetVal =-2    
      RETURN -2    
     END    
     IF @@ERROR <> 0    
      GOTO ERRHANDLER    
     /*COMMENTED BY ANURAG    
     if (@COMMISSION_TYPE='ENFEE')    
     SELECT @AGENCY_REG_COMM = isnull(@COMM_AMOUNT,0.00)    
     else    
     SELECT @AGENCY_REG_COMM = ROUND(((@TOTAL_PREMIUM_AMOUNT * @AGENCY_REG_COMM_PRCT)/100), 2)    
     */    
         
     IF @@ERROR <> 0    
      GOTO ERRHANDLER     
     IF @HOME_EMP = 'Y'    
     BEGIN     
      SELECT @COMM_PAYABLE_ACCOUNT = @FULLPREMIUM_ACCOUNT    
     END    
    
     SET @TRAN_TYPE = 'PREM'    
                  
     --ANURAG - In case of Master Policy    
     IF @TRANSACTION_TYPE = 14560    
     BEGIN          
      SELECT @TRAN_PREMIUM_AMOUNT = INSTALLMENT_AMOUNT, @TRAN_INT_AMOUNT = INTEREST_AMOUNT    
      FROM ACT_POLICY_INSTALLMENT_DETAILS WHERE POLICY_ID = @POLICY_ID AND POLICY_VERSION_ID = @POLICY_VERSION_ID AND CUSTOMER_ID = @CUSTOMER_ID AND CO_APPLICANT_ID = @CO_APPLICANT_ID    
          
      SELECT @CO_APPLICANT_COMM_PRCT = COMMISSION_PERCENT, @FEES_PRCT = FEES_PERCENT, @PRO_LABORE_PRCT = PRO_LABORE_PERCENT    
      FROM POL_APPLICANT_LIST WHERE POLICY_ID = @POLICY_ID AND POLICY_VERSION_ID = @POLICY_VERSION_ID AND CUSTOMER_ID = @CUSTOMER_ID AND APPLICANT_ID = @CO_APPLICANT_ID    
              
      IF @CO_APPLICANT_COMM_PRCT = 0 OR ISNULL(@CO_APPLICANT_COMM_PRCT, 0) = 0    
       SET @CO_APPLICANT_COMM_PRCT = 100    
      IF @@ERROR <> 0    
       GOTO ERRHANDLER     
          
      SELECT @AGENCY_REG_COMM = CASE @COMMISSION_TYPE     
       WHEN 'COMM' THEN    
        ROUND(((((@TRAN_PREMIUM_AMOUNT * @CO_APPLICANT_COMM_PRCT)/100) * @AGENCY_REG_COMM_PRCT)/100), 2)    
       WHEN 'ENFEE' THEN    
        ROUND(((((@TRAN_PREMIUM_AMOUNT * @FEES_PRCT)/100) * @AGENCY_REG_COMM_PRCT)/100), 2)    
       WHEN 'PRLBR' THEN    
        ROUND(((((@TRAN_PREMIUM_AMOUNT * @PRO_LABORE_PRCT)/100) * @AGENCY_REG_COMM_PRCT)/100), 2)          
      END     
          
      IF @COMMISSION_TYPE = 'COMM'    
      BEGIN    
       SELECT @AGENCY_COMM_INT = ROUND(((((@TRAN_INT_AMOUNT * @CO_APPLICANT_COMM_PRCT)/100) * @AGENCY_REG_COMM_PRCT)/100), 2)    
      END    
                
      IF @@ERROR <> 0    
       GOTO ERRHANDLER     
     END    
     ELSE --ANURAG - In case of Normal Policy    
     BEGIN    
      --GET THE AGENCY COMMISSION ON PREMIUM AND INTEREST AMOUNT    
      SELECT @AGENCY_REG_COMM = ROUND(((@TOTAL_PREMIUM_AMOUNT * @AGENCY_REG_COMM_PRCT)/100), 2)           
      SELECT @AGENCY_COMM_INT = ROUND(((@TOTAL_INTEREST_AMOUNT * @AGENCY_REG_COMM_PRCT)/100), 2)            
          
      -- if policy level commision applies     
      IF (ISNULL(@POLICY_LEVEL_COMM_APPLIES,'N')='Y' and ISNULL(@POLICY_LEVEL_COMISSION,0) <> 0 )    
      BEGIN    
       SELECT @AGENCY_REG_COMM=ROUND(((@AGENCY_REG_COMM * @POLICY_LEVEL_COMISSION)/100), 2)    
       SELECT @AGENCY_COMM_INT=ROUND(((@AGENCY_COMM_INT * @POLICY_LEVEL_COMISSION)/100), 2)    
      END    
      IF @@ERROR <> 0    
       GOTO ERRHANDLER     
     END    
     --ANURAG/    
         
     --ANURAG - IN CASE OF NORMAL POLICY COAPPLICANTID IS BLANK. SO MAKE PRIMARY COAPPLICANT AS COAPPLICANT    
     IF @CO_APPLICANT_ID = 0    
     BEGIN    
      SET @CO_APPLICANT_ID = @PAYOR_ID    
     END    
         
     --Finding whether bill type is agency bill or direct bill    
     IF UPPER(@BILL_TYPE) = 'AB'   --FOR AGENCY BILL    
     BEGIN    
          
      --For agency bill, entering the record in act_agency_open_item table    
      INSERT INTO #TMP_POST(ACCOUNT_ID, AMT, APP_ID, APP_VERSION_ID, CUSTOMER_ID, AGENCY_ID, SOURCE_EFFECTIVE_DATE,     
        TRANS_DESC, POLICY_ID, POLICY_VERSION_ID, ACCOUNTS, OPEN_ITEMS,TRAN_TYPE, TRAN_CODE,    
        TRAN_ENTITY,TRAN_DESC,COMMISSION_PERCENTAGE)     
      VALUES ( @FULLPREMIUM_ACCOUNT, @TOTAL_PREMIUM_AMOUNT , @POLICY_ID, @POLICY_VERSION_ID, @CUSTOMER_ID, @APP_AGENCY_ID, @APP_EFFECTIVE_DATE,    
         'Premium due.', @POLICY_ID, @POLICY_VERSION_ID, 1, 1,@TRAN_TYPE,@TRAN_TYPE_CODE,    
        @CUSTOMER_NAME,@TRAN_DESC,@AGENCY_REG_COMM_PRCT)    
    
      IF @@ERROR <> 0    
        GOTO ERRHANDLER    
    
     END    
     ELSE IF (UPPER(@BILL_TYPE) = 'DB')    
       BEGIN    
        IF ISNULL(@AGENCY_REG_COMM,0) <> 0    
        BEGIN     
         /* Commented by Anurag as Pro Labore amount will be credited to Broker instead of Customer    
         /*If there is some commission amount, applying the commission as agency commission or employee discount*/    
         IF @COMMISSION_TYPE = 'PRLBR'    
         BEGIN     
          SET @TRAN_TYPE_CODE = 'DISC'    
          --IF ISNULL(@INSTALLMENT,0) = @FULL_PAY_PLAN_ID     
          --BEGIN    
           --Giving discount to customer    
          --Hence entering an open item in customer    
           INSERT INTO #TMP_POST(ACCOUNT_ID, AMT, APP_ID, APP_VERSION_ID, CUSTOMER_ID, SOURCE_EFFECTIVE_DATE,     
           TRANS_DESC, POLICY_ID, POLICY_VERSION_ID, ACCOUNTS, OPEN_ITEMS, TRAN_TYPE,TRAN_CODE,    
           TRAN_ENTITY,TRAN_DESC,DUE_DATE  ,COMMISSION_PERCENTAGE,COMMISSION_TYPE,PAYOR_TYPE, PAYOR_ID)    
           VALUES(@FULLPREMIUM_ACCOUNT, -@AGENCY_REG_COMM, @POLICY_ID, @POLICY_VERSION_ID, @CUSTOMER_ID, @POLICY_EFFECTIVE_DATE,     
           'Discount given.', @POLICY_ID, @POLICY_VERSION_ID, 1, 1,@TRAN_TYPE,    
           @TRAN_TYPE_CODE,@CUSTOMER_NAME,@TRAN_DESC,     
           CASE WHEN CAST(CONVERT(VARCHAR,@POLICY_EFFECTIVE_DATE,101) AS DATETIME) <     
              CAST(CONVERT(VARCHAR, GETDATE() ,101) AS DATETIME)     
              THEN CAST(CONVERT(VARCHAR, GETDATE() ,101) AS DATETIME)    
           ELSE @POLICY_EFFECTIVE_DATE END ,    
           @AGENCY_REG_COMM_PRCT,@COMMISSION_TYPE,@PAYOR_TYPE, @CO_APPLICANT_ID)    
          --END     
          IF @@ERROR <> 0    
           GOTO ERRHANDLER    
          -- Contra Entry fo Discount      
          -- Discount Given To Home Employee needs To Be Posted in to  Commission Expense Account    
          INSERT INTO #TMP_POST(ACCOUNT_ID, AMT, APP_ID, APP_VERSION_ID, CUSTOMER_ID,SOURCE_EFFECTIVE_DATE,    
           TRANS_DESC, POLICY_ID, POLICY_VERSION_ID, ACCOUNTS, OPEN_ITEMS,TRAN_TYPE,TRAN_CODE,TRAN_ENTITY,TRAN_DESC, PAYOR_ID)    
          VALUES ( @PREMIUM_INCOME_ACCOUNT, @AGENCY_REG_COMM, @POLICY_ID, @POLICY_VERSION_ID    
          , @CUSTOMER_ID, @POLICY_EFFECTIVE_DATE, '', @POLICY_ID, @POLICY_VERSION_ID, 1, 0,@TRAN_TYPE,@TRAN_TYPE_CODE,@CUSTOMER_NAME,@TRAN_DESC, @CO_APPLICANT_ID)    
    
          IF @@ERROR <> 0    
           GOTO ERRHANDLER    
    
         END    
         ELSE    
         BEGIN    
         */    
          --Giving agency commission to agency    
          --Hence entering an open item in agency    
          INSERT INTO #TMP_POST(ACCOUNT_ID, AMT, APP_ID, APP_VERSION_ID, CUSTOMER_ID, AGENCY_ID,    
           SOURCE_EFFECTIVE_DATE, TRANS_DESC, POLICY_ID, POLICY_VERSION_ID, ACCOUNTS, OPEN_ITEMS,     
          TRAN_CODE, TRAN_TYPE ,TRAN_ENTITY,TRAN_DESC , COMMISSION_PERCENTAGE,COMMISSION_TYPE, PAYOR_ID)    
          VALUES ( @COMM_PAYABLE_ACCOUNT, -@AGENCY_REG_COMM, @POLICY_ID, @POLICY_VERSION_ID, @CUSTOMER_ID, @APP_AGENCY_ID,     
          @POLICY_EFFECTIVE_DATE, 'Commission due.', @POLICY_ID, @POLICY_VERSION_ID, 1, 1,     
          @COMMISSION_TYPE_CODE + 'C', 'COM',@AGENCY_NAME,@TRAN_DESC , @AGENCY_REG_COMM_PRCT,@COMMISSION_TYPE, @CO_APPLICANT_ID)    
              
          IF @@ERROR <> 0    
           GOTO ERRHANDLER       
          --Contra entry for agency commission    
          INSERT INTO #TMP_POST(ACCOUNT_ID, AMT, APP_ID, APP_VERSION_ID,     
          CUSTOMER_ID, AGENCY_ID, SOURCE_EFFECTIVE_DATE, TRANS_DESC, POLICY_ID, POLICY_VERSION_ID,     
          ACCOUNTS, OPEN_ITEMS,TRAN_CODE, TRAN_TYPE ,TRAN_ENTITY,TRAN_DESC, PAYOR_ID)    
          VALUES ( @COMM_EXPENSE_ACCOUNT, @AGENCY_REG_COMM, @POLICY_ID, @POLICY_VERSION_ID, @CUSTOMER_ID, @APP_AGENCY_ID,     
          @POLICY_EFFECTIVE_DATE, 'Commission due.', @POLICY_ID, @POLICY_VERSION_ID, 1, 0,    
          @COMMISSION_TYPE_CODE + 'C', 'COM',@AGENCY_NAME,@TRAN_DESC, @CO_APPLICANT_ID)    
       
          IF @@ERROR <> 0    
           GOTO ERRHANDLER    
               
          IF @COMM_FLAG = 1 AND @COMMISSION_TYPE = 'COMM'          
          BEGIN      
           --GIVING COMMISSION ON INTEREST TO AGENCY    
           --CREATING OPEN ITEM    
           INSERT INTO #TMP_POST(ACCOUNT_ID, AMT, APP_ID, APP_VERSION_ID, CUSTOMER_ID, AGENCY_ID,    
            SOURCE_EFFECTIVE_DATE, TRANS_DESC, POLICY_ID, POLICY_VERSION_ID, ACCOUNTS, OPEN_ITEMS,     
           TRAN_CODE, TRAN_TYPE ,TRAN_ENTITY,TRAN_DESC , COMMISSION_PERCENTAGE,COMMISSION_TYPE, PAYOR_ID, IS_COMM_ON_INTEREST)    
           VALUES ( @COMM_PAYABLE_ACCOUNT, @AGENCY_COMM_INT, @POLICY_ID, @POLICY_VERSION_ID, @CUSTOMER_ID, @APP_AGENCY_ID,     
           @POLICY_EFFECTIVE_DATE, 'Commission due on interest', @POLICY_ID, @POLICY_VERSION_ID, 1, 1,     
           @COMMISSION_TYPE_CODE + 'C', 'COM',@AGENCY_NAME,@TRAN_DESC , @AGENCY_REG_COMM_PRCT,@COMMISSION_TYPE, @CO_APPLICANT_ID, 1)    
               
           IF @@ERROR <> 0    
            GOTO ERRHANDLER       
                
           --CONTRA ENTRY FOR COMMISSION ON INTEREST TO AGENCY    
           INSERT INTO #TMP_POST(ACCOUNT_ID, AMT, APP_ID, APP_VERSION_ID,     
           CUSTOMER_ID, AGENCY_ID, SOURCE_EFFECTIVE_DATE, TRANS_DESC, POLICY_ID, POLICY_VERSION_ID,     
           ACCOUNTS, OPEN_ITEMS,TRAN_CODE, TRAN_TYPE ,TRAN_ENTITY,TRAN_DESC, PAYOR_ID, IS_COMM_ON_INTEREST)    
           VALUES ( @COMM_EXPENSE_ACCOUNT, -@AGENCY_COMM_INT, @POLICY_ID, @POLICY_VERSION_ID, @CUSTOMER_ID, @APP_AGENCY_ID,     
           @POLICY_EFFECTIVE_DATE, 'Commission due on interest', @POLICY_ID, @POLICY_VERSION_ID, 1, 0,    
           @COMMISSION_TYPE_CODE + 'C', 'COM',@AGENCY_NAME,@TRAN_DESC, @CO_APPLICANT_ID, 1)    
                    
           IF @@ERROR <> 0    
            GOTO ERRHANDLER    
          END    
         --END    
        END    
    
         END    
    FETCH NEXT  FROM CR_AGENCY into @AGENCY_REG_COMM_PRCT,@APP_AGENCY_ID,@COMMISSION_TYPE,@COMM_AMOUNT, @CO_APPLICANT_ID    
    END    
   CLOSE CR_AGENCY    
   DEALLOCATE CR_AGENCY    
   --if transfer change process_id to 1000 so that commission applicable at NBS does not applies to policy    
   IF(@IS_REWRITE_POLICY = 'Y')     
   BEGIN     
    SET @PROCESS_ID = 1000    
   END     
   --If NBS --> PREM(Type)  NBSP(Code)    
   --If Renewal --> PREM(Type)  RENP(Code)    
   --Inserting the written premium in written premium account    
   --Anurag -- moved written premium entry to top along with Customer Open Item    
   --Inserting the written premium in written premium account    
   /*    
   INSERT INTO #TMP_POST(ACCOUNT_ID, AMT, APP_ID, APP_VERSION_ID, CUSTOMER_ID, SOURCE_EFFECTIVE_DATE,    
     TRANS_DESC, POLICY_ID, POLICY_VERSION_ID, ACCOUNTS, OPEN_ITEMS, TRAN_TYPE, TRAN_CODE    
    ,TRAN_ENTITY,TRAN_DESC)    
   VALUES(@PREMIUM_INCOME_ACCOUNT, @PREMIUM_AMOUNT * -1, @POLICY_ID, @POLICY_VERSION_ID, @CUSTOMER_ID, GETDATE(),    
     '', @POLICY_ID, @POLICY_VERSION_ID, 1, 0, @TRAN_TYPE ,@TRAN_TYPE_CODE,    
    CASE UPPER(@BILL_TYPE) WHEN 'AB' Then @AGENCY_NAME    
    ELSE  @CUSTOMER_NAME END,    
    @TRAN_DESC    
    )--'NBSP')    
       
   IF @@ERROR <> 0    
    GOTO ERRHANDLER    
   */    
       
   --Anurag - Temp blocking MCCA and Other State Assessment Fees as there is no Contra entry done for these two and not sure if these are in use    
   /*    
   -- FEES(T) MCCAF(Code)    
   --Inserting the MCCA fees in MCCA account    
   INSERT INTO #TMP_POST(ACCOUNT_ID, AMT, APP_ID, APP_VERSION_ID, CUSTOMER_ID, SOURCE_EFFECTIVE_DATE, TRANS_DESC,    
     POLICY_ID, POLICY_VERSION_ID, ACCOUNTS, OPEN_ITEMS,TRAN_TYPE, TRAN_CODE,TRAN_ENTITY,TRAN_DESC)    
   --Comented Account No Longer Used    
   -- VALUES(@MCCA_FEES_ACCOUNT, @MCCA_FEES * -1, @POLICY_ID, @POLICY_VERSION_ID, @CUSTOMER_ID, GETDATE(), '',     
   VALUES(@OTHER_FEES_ACCOUNT, @MCCA_FEES * -1, @POLICY_ID, @POLICY_VERSION_ID, @CUSTOMER_ID, GETDATE(), '',     
    @POLICY_ID, @POLICY_VERSION_ID, 1, 0,'FEES', 'MCCAF',    
    CASE UPPER(@BILL_TYPE) WHEN 'AB' Then @AGENCY_NAME    
    ELSE  @CUSTOMER_NAME END, @TRAN_DESC    
   )--'NBS')    
    
   IF @@ERROR <> 0    
    GOTO ERRHANDLER    
       
   -- FEES(T) OTSAF(Code)    
   --Inserting Other state assesment fees in (Other State Assessment Fees/Premiums Written - Other state assessed fees) account    
   INSERT INTO #TMP_POST(ACCOUNT_ID, AMT, APP_ID, APP_VERSION_ID, CUSTOMER_ID, SOURCE_EFFECTIVE_DATE, TRANS_DESC,     
    POLICY_ID, POLICY_VERSION_ID, ACCOUNTS, OPEN_ITEMS,TRAN_TYPE, TRAN_CODE,TRAN_ENTITY,TRAN_DESC)    
   VALUES(@OTHER_FEES_ACCOUNT, @OTHER_FEES * -1, @POLICY_ID, @POLICY_VERSION_ID, @CUSTOMER_ID, GETDATE(), '',     
    @POLICY_ID, @POLICY_VERSION_ID, 1, 0,'FEES', 'OTSAF',    
    CASE UPPER(@BILL_TYPE) WHEN 'AB' Then @AGENCY_NAME    
    ELSE  @CUSTOMER_NAME END, @TRAN_DESC    
   )--'NBS')    
    
   IF @@ERROR <> 0    
    GOTO ERRHANDLER    
   */    
       
   DECLARE @GRANT_COMMISSION SmallInt    
   SET @GRANT_COMMISSION  = 0    
   --If application is complete And Proceess is not Renewal    
    
   IF (@CSR = -1 )    
    SET @CSR = 0     
   /* commented by pravesh  on 7 july 2010 require to review later on    
   IF @COMPLETE_APP = 'Y' AND @CSR <> 0 AND @PROCESS_ID = @NBS_PROCESS AND @IS_SAME_POLICY <> 'Y'      
   BEGIN    
        
    SELECT @COMPLETE_APP_COMM_PRCT = 0    
        
    SELECT @COMPLETE_APP_COMM_PRCT = ISNULL(COMMISSION_PERCENT, 0),    
     @COMMISSION_AMOUNT_TYPE =  ISNULL(AMOUNT_TYPE,'P')    
    FROM ACT_REG_COMM_SETUP WITH(NOLOCK)    
    WHERE (STATE_ID = @STATE_ID OR STATE_ID = 0) AND    
     (LOB_ID = @APP_LOB OR LOB_ID = 0)     
     AND (ISNULL(SUB_LOB_ID,0) = ISNULL(@APP_SUBLOB,0)  OR ISNULL(SUB_LOB_ID,0) = 0)     
     AND TERM = @PROCESS_TERM     
     AND COMMISSION_TYPE = 'C' AND    
     @POLICY_EFFECTIVE_DATE BETWEEN EFFECTIVE_FROM_DATE AND EFFECTIVE_TO_DATE    
        
    IF @@ERROR <> 0    
     GOTO ERRHANDLER     
    
    IF(@COMMISSION_AMOUNT_TYPE = 'P')    
    BEGIN    
     SELECT @COMPLETE_APP_COMM = ROUND(((@PREMIUM_AMOUNT * @COMPLETE_APP_COMM_PRCT)/100), 2)      
     SET @GRANT_COMMISSION = 1    
    END    
    ELSE IF(@COMMISSION_AMOUNT_TYPE = 'F')    
    BEGIN    
     SET @COMPLETE_APP_COMM = @COMPLETE_APP_COMM_PRCT    
     IF @IS_SAME_POLICY <> 'Y'    
      SET @GRANT_COMMISSION = 1    
    END     
    
    IF @@ERROR <> 0    
     GOTO ERRHANDLER    
       
    -- If Commission type is Fixed Amount Commission will be Given per policy    
    -- If Commission type is Percentage then Commission will be given for each risk(Dwelling)    
    
    IF @GRANT_COMMISSION = 1    
    BEGIN    
     IF @HOME_EMP = 'Y'    
     BEGIN    
      -- System Parameter SYS_COMPLETE_APP_COMM_APPLICABILITY 2 means Complete App Commission     
      -- Is applicable to HOME Employee    
      IF(@SYS_COMPLETE_APP_COMM_APPLICABILITY = 2)    
      BEGIN    
       --Giving discount to employee    
       INSERT INTO #TMP_POST(ACCOUNT_ID, AMT, APP_ID, APP_VERSION_ID, CUSTOMER_ID, SOURCE_EFFECTIVE_DATE, TRANS_DESC, POLICY_ID, POLICY_VERSION_ID, ACCOUNTS, OPEN_ITEMS,    
       TRAN_TYPE, TRAN_CODE,TRAN_ENTITY,TRAN_DESC,DUE_DATE , COMMISSION_PERCENTAGE)    
       VALUES (@FULLPREMIUM_ACCOUNT, -@COMPLETE_APP_COMM, @POLICY_ID, @POLICY_VERSION_ID, @CUSTOMER_ID, @POLICY_EFFECTIVE_DATE, 'Discount given for complete application.', @POLICY_ID, @POLICY_VERSION_ID, 1, 1,    
       @TRAN_TYPE,@TRAN_TYPE_CODE,@CUSTOMER_NAME,@TRAN_DESC,@POLICY_EFFECTIVE_DATE ,    
       CASE @COMMISSION_AMOUNT_TYPE WHEN 'P' THEN @COMPLETE_APP_COMM_PRCT ELSE NULL END)    
           
       IF @@ERROR <> 0      GOTO ERRHANDLER    
    
       -- Contra Entry fo Discount      
       -- Discount Given To Home Employee needs To Be Posted in to  Commission Expense Account    
       INSERT INTO #TMP_POST(ACCOUNT_ID, AMT, APP_ID, APP_VERSION_ID, CUSTOMER_ID,SOURCE_EFFECTIVE_DATE,    
        TRANS_DESC, POLICY_ID, POLICY_VERSION_ID, ACCOUNTS, OPEN_ITEMS,TRAN_TYPE, TRAN_CODE,TRAN_ENTITY,TRAN_DESC)    
       VALUES ( @COMM_EXPENSE_ACCOUNT, @COMPLETE_APP_COMM, @POLICY_ID, @POLICY_VERSION_ID, @CUSTOMER_ID, @POLICY_EFFECTIVE_DATE,    
        '', @POLICY_ID, @POLICY_VERSION_ID, 1, 0,@TRAN_TYPE,@TRAN_TYPE_CODE,@CUSTOMER_NAME,@TRAN_DESC)    
        
       IF @@ERROR <> 0    
GOTO ERRHANDLER    
      END    
     END    
     ELSE    
     BEGIN    
      IF(@SYS_COMPLETE_APP_COMM_APPLICABILITY = 1)    
      BEGIN    
       --Giving commission to agency    
       INSERT INTO #TMP_POST(ACCOUNT_ID, AMT, APP_ID, APP_VERSION_ID, CUSTOMER_ID, AGENCY_ID, SOURCE_EFFECTIVE_DATE,     
       TRANS_DESC, POLICY_ID, POLICY_VERSION_ID, ACCOUNTS, OPEN_ITEMS, TRAN_CODE,     
       TRAN_TYPE ,TRAN_ENTITY,TRAN_DESC , COMMISSION_PERCENTAGE)    
       VALUES (@COMM_PAYABLE_ACCOUNT, -@COMPLETE_APP_COMM, @POLICY_ID, @POLICY_VERSION_ID, @CUSTOMER_ID, @APP_AGENCY_ID, @POLICY_EFFECTIVE_DATE, 'Commission posted for complete application.', @POLICY_ID,     
        @POLICY_VERSION_ID, 1, 1, 'CAC', 'COM',@AGENCY_NAME,@TRAN_DESC,    
        CASE @COMMISSION_AMOUNT_TYPE WHEN 'P' THEN @COMPLETE_APP_COMM_PRCT ELSE NULL END)    
           
       IF @@ERROR <> 0    
        GOTO ERRHANDLER    
       --Contra Entry For Complete App Commission     
       INSERT INTO #TMP_POST(ACCOUNT_ID, AMT, APP_ID, APP_VERSION_ID, CUSTOMER_ID, AGENCY_ID, SOURCE_EFFECTIVE_DATE, TRANS_DESC, POLICY_ID, POLICY_VERSION_ID, ACCOUNTS, OPEN_ITEMS, TRAN_CODE, TRAN_TYPE ,TRAN_ENTITY,TRAN_DESC)    
       VALUES ( @COMM_EXPENSE_ACCOUNT, @COMPLETE_APP_COMM, @POLICY_ID, @POLICY_VERSION_ID    
       , @CUSTOMER_ID, NULL,@POLICY_EFFECTIVE_DATE, '', @POLICY_ID, @POLICY_VERSION_ID, 1, 0,'CAC', 'COM',@AGENCY_NAME,@TRAN_DESC)    
       IF @@ERROR <> 0    
        GOTO ERRHANDLER    
    
      END    
     END    
    END    
   END    
       
    
   SET @COMMISSION_AMOUNT_TYPE = ''    
   SET @GRANT_COMMISSION  = 0    
   --Applying the property inspection credit     
   IF @PROPRTY_INSP_CREDIT = 'Y' AND @PROCESS_ID = @NBS_PROCESS     
   BEGIN    
        
    SET @PROPERTY_INS_COMM_PRCT = 0    
       SELECT @PROPERTY_INS_COMM_PRCT = ISNULL(COMMISSION_PERCENT, 0),    
     @COMMISSION_AMOUNT_TYPE = ISNULL(AMOUNT_TYPE,'P')     
    FROM ACT_REG_COMM_SETUP WITH(NOLOCK)    
    WHERE (STATE_ID = @STATE_ID OR STATE_ID = 0) AND    
     (LOB_ID = @APP_LOB OR LOB_ID = 0)     
     AND (ISNULL(SUB_LOB_ID,0) = ISNULL(@APP_SUBLOB,0)  OR ISNULL(SUB_LOB_ID,0) = 0)     
     AND TERM = @PROCESS_TERM      
     AND COMMISSION_TYPE = 'P'     
     AND @POLICY_EFFECTIVE_DATE  BETWEEN EFFECTIVE_FROM_DATE AND EFFECTIVE_TO_DATE     
    
    IF @@ERROR <> 0    
     GOTO ERRHANDLER    
    
    IF(@COMMISSION_AMOUNT_TYPE = 'P')    
    BEGIN    
     SELECT @PROPERTY_INS_COMM = ROUND(((@PREMIUM_AMOUNT * @PROPERTY_INS_COMM_PRCT)/100), 2)    
     SET @GRANT_COMMISSION  = 1    
    END    
    ELSE IF(@COMMISSION_AMOUNT_TYPE = 'F')    
    BEGIN    
     SET @PROPERTY_INS_COMM = @PROPERTY_INS_COMM_PRCT    
     IF @IS_SAME_POLICY <> 'Y'    
      SET @GRANT_COMMISSION = 1    
    END    
    
    IF @@ERROR <> 0    
     GOTO ERRHANDLER    
        
    IF @GRANT_COMMISSION = 1    
    BEGIN    
     IF @HOME_EMP = 'Y'    
     BEGIN    
      IF(@SYS_PROPERTY_INS_COMM_APPLICABILITY  = 2)    
      BEGIN    
       --Giving discount to employee    
       INSERT INTO #TMP_POST(ACCOUNT_ID, AMT, APP_ID, APP_VERSION_ID, CUSTOMER_ID, SOURCE_EFFECTIVE_DATE, TRANS_DESC, POLICY_ID,     
       POLICY_VERSION_ID, ACCOUNTS, OPEN_ITEMS, TRAN_CODE ,TRAN_TYPE,TRAN_ENTITY,TRAN_DESC,    
       DUE_DATE, COMMISSION_PERCENTAGE)    
       VALUES (@FULLPREMIUM_ACCOUNT, -@PROPERTY_INS_COMM, @POLICY_ID, @POLICY_VERSION_ID, @CUSTOMER_ID, @POLICY_EFFECTIVE_DATE, 'Discount given for property inspection credit.', @POLICY_ID,    
        @POLICY_VERSION_ID, 1, 1, 'DISC','PREM',@CUSTOMER_NAME,@TRAN_DESC,@POLICY_EFFECTIVE_DATE,    
       CASE @COMMISSION_AMOUNT_TYPE WHEN 'P' THEN @PROPERTY_INS_COMM_PRCT ELSE NULL END)    
        
       IF @@ERROR <> 0    
        GOTO ERRHANDLER    
       -- Contra Entry fo Discount      
       -- Discount Given To Home Employee needs To Be Posted in to  Commission Expense Account    
       INSERT INTO #TMP_POST(ACCOUNT_ID, AMT, APP_ID, APP_VERSION_ID, CUSTOMER_ID,SOURCE_EFFECTIVE_DATE,    
        TRANS_DESC, POLICY_ID, POLICY_VERSION_ID, ACCOUNTS, OPEN_ITEMS,TRAN_CODE ,TRAN_TYPE,TRAN_ENTITY,TRAN_DESC)    
       VALUES ( @COMM_EXPENSE_ACCOUNT, @PROPERTY_INS_COMM, @POLICY_ID, @POLICY_VERSION_ID    
       , @CUSTOMER_ID, @POLICY_EFFECTIVE_DATE, '', @POLICY_ID, @POLICY_VERSION_ID, 1, 0, 'DISC','PREM',@CUSTOMER_NAME,@TRAN_DESC)    
        
       IF @@ERROR <> 0    
        GOTO ERRHANDLER    
        
      END    
     END    
     ELSE    
     BEGIN    
      IF(@SYS_PROPERTY_INS_COMM_APPLICABILITY  = 1)    
      BEGIN     
       --Giving commission to agency    
       INSERT INTO #TMP_POST(ACCOUNT_ID, AMT, APP_ID, APP_VERSION_ID, CUSTOMER_ID, AGENCY_ID, SOURCE_EFFECTIVE_DATE,     
       TRANS_DESC, POLICY_ID, POLICY_VERSION_ID, ACCOUNTS, OPEN_ITEMS, TRAN_CODE, TRAN_TYPE,    
       TRAN_ENTITY,TRAN_DESC , COMMISSION_PERCENTAGE )    
       VALUES (@COMM_PAYABLE_ACCOUNT, -@PROPERTY_INS_COMM, @POLICY_ID, @POLICY_VERSION_ID,     
        @CUSTOMER_ID, @APP_AGENCY_ID, @POLICY_EFFECTIVE_DATE,    
         'Commission posted for property inspection credit.', @POLICY_ID,     
        @POLICY_VERSION_ID, 1, 1, 'PIC', 'COM',@AGENCY_NAME,@TRAN_DESC,    
        CASE @COMMISSION_AMOUNT_TYPE WHEN 'P' THEN @PROPERTY_INS_COMM_PRCT ELSE NULL END)    
       
       IF @@ERROR <> 0    
        GOTO ERRHANDLER    
       --Contra Entry For Property inspection Commission     
       INSERT INTO #TMP_POST(ACCOUNT_ID, AMT, APP_ID, APP_VERSION_ID, CUSTOMER_ID, AGENCY_ID, SOURCE_EFFECTIVE_DATE, TRANS_DESC, POLICY_ID, POLICY_VERSION_ID, ACCOUNTS, OPEN_ITEMS, TRAN_CODE, TRAN_TYPE,TRAN_ENTITY,TRAN_DESC)    
       VALUES ( @COMM_EXPENSE_ACCOUNT, @PROPERTY_INS_COMM, @POLICY_ID, @POLICY_VERSION_ID    
       , @CUSTOMER_ID, NULL, @POLICY_EFFECTIVE_DATE, '', @POLICY_ID, @POLICY_VERSION_ID, 1, 0, 'PIC', 'COM',@AGENCY_NAME,@TRAN_DESC)    
       IF @@ERROR <> 0    
        GOTO ERRHANDLER    
    
           
      END    
     END    
    END    
   END    
    */ -- commented by praveh on 7 july 10 end here    
        
    -- SELECT TRAN_TYPE ,* FROM #TMP_POST  
   --Customer Open Item Posting     
   INSERT INTO ACT_CUSTOMER_OPEN_ITEMS    
   (    
    UPDATED_FROM, SOURCE_ROW_ID, SOURCE_NUM, SOURCE_TRAN_DATE, SOURCE_EFF_DATE,     
    POSTING_DATE, TOTAL_DUE, TOTAL_PAID, AGENCY_COMM_APPLIES, AGENCY_COMM_PERC,     
    AGENCY_COMM_AMT, AGENCY_ID,     
    CUSTOMER_ID, POLICY_ID, POLICY_VERSION_ID, PAYMENT_DATE, DATE_FULL_PAID, PAYMENT_STATUS, NOT_COUNTED_RECEIVABLE,     
    PAYOR_TYPE, DIV_ID, DEPT_ID, PC_ID, IS_TEMP_ENTRY, IN_RECON, IS_PREBILL, BILL_CODE, GROSS_AMOUNT,     
    ITEM_TRAN_CODE,    
    ITEM_TRAN_CODE_TYPE,    
     TRAN_ID, CASH_ACCOUNTING, RECUR_JOURNAL_VERSION, JE_RECON_COUNTER,     
    AMT_IN_RECON, OPEN_RECON_CTR, LOB_ID, SUB_LOB_ID, COUNTRY_ID, STATE_ID, TRANS_DESC, ITEM_STATUS,    
    INSTALLMENT_ROW_ID, NET_PREMIUM,RISK_ID,RISK_TYPE,DUE_DATE , SWEEP_DATE,COMMISSION_TYPE    
    ,BASE_CURRENCY,TRAN_CURRENCY,RATE_FACTOR, PAYOR_ID    
   )     
   SELECT     
    'P', @SOURCE_ROW_ID, @SOURCE_ROW_ID, @POLICY_EFFECTIVE_DATE , SOURCE_EFFECTIVE_DATE,    
    --GETDATE(),    
    @COMMITT_DATE,TP.AMT, 0, CASE @HOME_EMP WHEN 'Y' THEN 'N' ELSE 'Y' END, TP.COMMISSION_PERCENTAGE,     
    @AGENCY_REG_COMM, @APP_AGENCY_ID,    
    TP.CUSTOMER_ID, TP.POLICY_ID, TP.POLICY_VERSION_ID, NULL, NULL, 1, NULL,    
    TP.PAYOR_TYPE, --'CUS',     
    @DIV_ID, @DEPT_ID, @PC_ID, NULL, NULL, @IS_PREBILL, @BILL_TYPE, @TOTAL_PREMIUM_AMOUNT,    
    TRAN_CODE,     
    TRAN_TYPE,    
    NULL, NULL, NULL, NULL,     
    NULL, NULL, @POLICY_LOB, @POLICY_SUBLOB, @COUNTRY_ID, @STATE_ID, TP.TRANS_DESC,     
    CASE   
  WHEN @PROCESS_ID = @ENDO_PROCESS AND TP.AMT < 0 THEN 'RP'   
  WHEN @PROCESS_ID = 37 AND TP.AMT < 0 THEN 'RP'   
  WHEN @PROCESS_ID IN(2,12) THEN CASE WHEN TRAN_CODE IN('CANT','CANI','CANF') THEN @CANCEL_ITEM_STATUS ELSE @ITEM_STATUS  END  
  ELSE @ITEM_STATUS   
 END,    
    TP.INSTALLMENT_ROW_ID, @TOTAL_PREMIUM_AMOUNT,@RISK_ID,@RISK_TYPE,TP.DUE_DATE , TP.DUE_DATE,COMMISSION_TYPE    
    ,@BASE_CURRENCY_CODE , @TRAN_CURRENCY_CODE,@RATE_FACTOR, PAYOR_ID    
   FROM     
    #TMP_POST TP WITH (NOLOCK)     
   WHERE ISNULL(TP.AGENCY_ID, 0) = 0 AND TP.OPEN_ITEMS = 1 AND ISNULL(TP.AMT,0) <> 0 AND ISNULL(POSTING_TYPE, '') <> 'COI'    
       
       
   IF @@ERROR <> 0    
    GOTO ERRHANDLER     
   --Agency Open Item Posting    
   INSERT INTO ACT_AGENCY_OPEN_ITEMS    
   (    
    UPDATED_FROM, SOURCE_ROW_ID, SOURCE_NUM, SOURCE_TRAN_DATE, SOURCE_EFF_DATE,     
    POSTING_DATE, TOTAL_DUE, TOTAL_PAID, AGENCY_COMM_APPLIES, AGENCY_COMM_PERC,     
    AGENCY_COMM_AMT, AGENCY_ID,     
    CUSTOMER_ID, POLICY_ID, POLICY_VERSION_ID, PAYMENT_DATE, DATE_FULL_PAID, PAYMENT_STATUS, NOT_COUNTED_RECEIVABLE,     
    PAYOR_TYPE, DIV_ID, DEPT_ID, PC_ID, IS_TEMP_ENTRY, IN_RECON, IS_PREBILL, BILL_CODE, GROSS_AMOUNT,     
    ITEM_TRAN_CODE, ITEM_TRAN_CODE_TYPE, TRAN_ID, CASH_ACCOUNTING, RECUR_JOURNAL_VERSION, JE_RECON_COUNTER,     
    AMT_IN_RECON, OPEN_RECON_CTR, LOB_ID, SUB_LOB_ID, COUNTRY_ID, STATE_ID, TRANS_DESC, NET_PREMIUM ,    
    RISK_ID, RISK_TYPE,COMMISSION_TYPE    
    ,BASE_CURRENCY,TRAN_CURRENCY,RATE_FACTOR, PAYOR_ID, ITEM_STATUS, IS_COMM_ON_INTEREST    
   )     
   SELECT     
    'P', @SOURCE_ROW_ID, @SOURCE_ROW_ID, @POLICY_EFFECTIVE_DATE, @POLICY_EFFECTIVE_DATE,    
    --GETDATE(), 
    @COMMITT_DATE,TP.AMT, 0, CASE @HOME_EMP WHEN 'Y' THEN 'N' ELSE 'Y' END, TP.COMMISSION_PERCENTAGE,     
    --@AGENCY_REG_COMM,     
    TP.AMT,    
    TP.AGENCY_ID,    
    TP.CUSTOMER_ID, TP.POLICY_ID, TP.POLICY_VERSION_ID, NULL, NULL, 1, NULL,    
    'AGN', @DIV_ID, @DEPT_ID, @PC_ID, NULL, NULL, @IS_PREBILL, @BILL_TYPE, @TOTAL_PREMIUM_AMOUNT,    
    TP.TRAN_CODE, TP.TRAN_TYPE, NULL, NULL, NULL, NULL,     
    NULL, NULL, @POLICY_LOB, @POLICY_SUBLOB, @COUNTRY_ID, @STATE_ID, TP.TRANS_DESC, @TOTAL_PREMIUM_AMOUNT,     
    @RISK_ID,@RISK_TYPE,COMMISSION_TYPE--@COMMISSION_TYPE    
    ,@BASE_CURRENCY_CODE , @TRAN_CURRENCY_CODE,@RATE_FACTOR, PAYOR_ID,    
    CASE   
  WHEN @PROCESS_ID = @ENDO_PROCESS AND TP.AMT > 0 THEN 'RP'   
  WHEN @PROCESS_ID = 37 AND TP.AMT > 0 THEN 'RP'   
  ELSE @ITEM_STATUS END, TP.IS_COMM_ON_INTEREST    
   FROM #TMP_POST TP WITH(NOLOCK)     
   WHERE @HOME_EMP = 'N' AND ISNULL(TP.AGENCY_ID,0) <> 0 --@APP_AGENCY_ID     
   AND TP.OPEN_ITEMS = 1 AND ISNULL(TP.AMT,0) <> 0 AND ISNULL(POSTING_TYPE, '') <> 'COI'    
    
    
   IF @@ERROR <> 0    
    GOTO ERRHANDLER     
 END -- END OF @POLICY_CO_INSURANCE <> 14549 CHECK    
     
 --Inserting the record into ACT_ACCOUNTS_POSTING_DETAILS    
 INSERT INTO ACT_ACCOUNTS_POSTING_DETAILS    
 (    
  ACCOUNT_ID, UPDATED_FROM,     
   SUBLEDGER_TYPE,     
  SOURCE_ROW_ID,    
  MAPPING_SUBLEDGER_ID, SOURCE_NUM, SOURCE_TRAN_DATE, SOURCE_EFF_DATE,     
  POSTING_DATE, TRANSACTION_AMOUNT, AGENCY_COMM_PERC, AGENCY_COMM_AMT,    
  AGENCY_ID, CUSTOMER_ID, POLICY_ID, POLICY_VERSION_ID, DIV_ID, DEPT_ID,    
  PC_ID, IS_PREBILL, BILL_CODE, GROSS_AMOUNT, ITEM_TRAN_CODE, ITEM_TRAN_CODE_TYPE,    
  TRAN_ID, LOB_ID, SUB_LOB_ID, COUNTRY_ID, STATE_ID, VENDOR_ID, TAX_ID, ADNL_INFO,    
  IS_BANK_RECONCILED, RECUR_JOURNAL_VERSION, IN_BNK_RECON, IS_BALANCE_UPDATED,    
  COMMITED_BY, COMMITED_BY_CODE, COMMITED_BY_NAME, COMMISSION_TYPE    
  ,TRAN_ENTITY,TRAN_DESC, PAYOR_ID    
 )    
 SELECT     
  TP.ACCOUNT_ID, 'P',     
   CASE TP.OPEN_ITEMS WHEN '1' THEN    
      CASE     
       WHEN ISNULL(TP.AGENCY_ID, 0) = 0  THEN TP.PAYOR_TYPE--'CUS'    
       WHEN ISNULL(TP.AGENCY_ID, 0) <> 0 THEN 'AGN'    
      END     
     ELSE NULL END,     
  @SOURCE_ROW_ID,     
  NULL, @SOURCE_ROW_ID, @POLICY_EFFECTIVE_DATE, @POLICY_EFFECTIVE_DATE,    
--GETDATE(),
  @COMMITT_DATE, SUM(TP.AMT), NULL, NULL,     
  @APP_AGENCY_ID , TP.CUSTOMER_ID, @POLICY_ID, @POLICY_VERSION_ID, @DIV_ID, @DEPT_ID,    
  @PC_ID, @IS_PREBILL, @BILL_TYPE, SUM(TP.AMT), TP.TRAN_CODE, TP.TRAN_TYPE,    
  NULL,  @POLICY_LOB, @POLICY_SUBLOB, @COUNTRY_ID, @STATE_ID, NULL, NULL, NULL,    
  NULL, NULL, NULL, NULL,    
  @USER_ID, @USER_CODE, @USER_NAME, NULL,    
  TP.TRAN_ENTITY ,TP.TRAN_DESC, PAYOR_ID       
 FROM #TMP_POST  TP WITH(NOLOCK)     
 WHERE TP.ACCOUNTS = 1    
  AND ISNULL(TP.AMT,0) <> 0    
 GROUP BY     
  TP.ACCOUNT_ID, TP.CUSTOMER_ID, PAYOR_ID, TP.OPEN_ITEMS,TP.TRAN_ENTITY ,TP.TRAN_DESC ,     
  TP.TRAN_CODE, TP.TRAN_TYPE , TP.AGENCY_ID ,TP.PAYOR_TYPE    
    
 IF @@ERROR <> 0    
  GOTO ERRHANDLER     
    
 --Select * from #TMP_POST    
 --Droping the temp table    
 DROP TABLE #TMP_POST     
--select * from ACT_CUSTOMER_OPEN_ITEMS where CUSTOMER_ID = @CUSTOMER_ID and POLICY_ID = @POLICY_ID and POLICY_VERSION_ID = @POLICY_VERSION_ID    
--select * from ACT_AGENCY_OPEN_ITEMS where CUSTOMER_ID = @CUSTOMER_ID and POLICY_ID = @POLICY_ID and POLICY_VERSION_ID = @POLICY_VERSION_ID    
--select * from ACT_COI_OPEN_ITEMS where CUSTOMER_ID = @CUSTOMER_ID and POLICY_ID = @POLICY_ID and POLICY_VERSION_ID = @POLICY_VERSION_ID    
--select * from ACT_ACCOUNTS_POSTING_DETAILS where CUSTOMER_ID = @CUSTOMER_ID and POLICY_ID = @POLICY_ID and POLICY_VERSION_ID = @POLICY_VERSION_ID    
    
 UPDATE ACT_PREMIUM_PROCESS_DETAILS SET PROCESS_STATUS = 'P'     
 WHERE POLICY_ID = @POLICY_ID AND POLICY_VERSION_ID = @POLICY_VERSION_ID     
  AND APP_ID = @POLICY_ID AND APP_VERSION_ID = @POLICY_VERSION_ID     
  AND CUSTOMER_ID = @CUSTOMER_ID    
    
     
 IF @@ERROR <> 0    
  GOTO ERRHANDLER    
      
    
 --INSERT INTO ACT_PREMIUM_PROCESS_SUB_DETAILS    
 --  (CUSTOMER_ID , POLICY_ID , POLICY_VERSION_ID , PPD_ROW_ID ,     
 --  RISK_ID ,RISK_TYPE,  NET_PREMIUM , STATS_FEES ,     
 --  GROSS_PREMIUM , INFORCE_PREMIUM , INFORCE_FEES  ,    
      
 --  COMMISSION_RATE , COMMISSION_AMOUNT ,EFFECTIVE_DATE ,CURRENT_COMMISSION_RATE  )    
    
 --VALUES ( @CUSTOMER_ID , @POLICY_ID , @POLICY_VERSION_ID , @SOURCE_ROW_ID ,     
 --  @RISK_ID , @RISK_TYPE ,  @PREMIUM_AMOUNT ,  @MCCA_FEES + @OTHER_FEES ,    
 --  @TOTAL_PREMIUM_AMOUNT , @TOTAL_PREMIUM_AMOUNT , @MCCA_FEES + @OTHER_FEES ,    
       
 --  @AGENCY_REG_COMM_PRCT , @AGENCY_REG_COMM,@POLICY_EFFECTIVE_DATE ,@AGENCY_REG_COMM_PRCT )    
       
 IF @@ERROR <> 0    
  GOTO ERRHANDLER     
 /*Commented by Anurag    
  --: To Reconcile Discount Items with the respective installments    
 IF(@BILL_TYPE <> 'AB' AND @HOME_EMP = 'Y')     
 BEGIN     
  IF ISNULL(@INSTALLMENT,0) = @FULL_PAY_PLAN_ID      
  BEGIN     
   EXEC Proc_ReconcileDiscountItems @CUSTOMER_ID , @POLICY_ID , @POLICY_VERSION_ID , @RISK_ID , @RISK_TYPE , 'Y'    
   IF @@ERROR <> 0    
    GOTO ERRHANDLER    
  END    
  ELSE    
  BEGIN     
   EXEC Proc_ReconcileDiscountItems @CUSTOMER_ID , @POLICY_ID , @POLICY_VERSION_ID , @RISK_ID , @RISK_TYPE , 'N'    
   IF @@ERROR <> 0    
    GOTO ERRHANDLER    
  END    
 END    
 */    
     
 SET @RetVal =1     
 RETURN 1    
    
ERRHANDLER:    
 set @RetVal =-1     
 RETURN -1    
    
END     
    
    



GO


