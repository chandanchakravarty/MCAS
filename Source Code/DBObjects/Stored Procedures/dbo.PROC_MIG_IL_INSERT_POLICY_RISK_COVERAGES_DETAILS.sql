/****** Object:  StoredProcedure [dbo].[PROC_MIG_IL_INSERT_POLICY_RISK_COVERAGES_DETAILS]    Script Date: 12/02/2011 16:17:57 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PROC_MIG_IL_INSERT_POLICY_RISK_COVERAGES_DETAILS]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[PROC_MIG_IL_INSERT_POLICY_RISK_COVERAGES_DETAILS]
GO

/****** Object:  StoredProcedure [dbo].[PROC_MIG_IL_INSERT_POLICY_RISK_COVERAGES_DETAILS]    Script Date: 12/02/2011 16:17:57 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		<Pradeep Kr Kushwaha>
-- Create date: <17-10-2011>
-- Description:	Insert covarage data
-- =============================================
--delete POL_PRODUCT_COVERAGES where CUSTOMER_ID=4508 and POLICY_ID=20           
--DROP PROC [PROC_MIG_IL_INSERT_POLICY_RISK_COVERAGES_DETAILS] 1854
--GO 
-- =============================================    
CREATE PROCEDURE [dbo].[PROC_MIG_IL_INSERT_POLICY_RISK_COVERAGES_DETAILS]     
    
--------------------------------- INPUT PARAMETER    
@IMPORT_REQUEST_ID  INT    
-------------------------------------------------    
      
AS    
BEGIN   
       
-------------------------------- DECLARATION PART      
----------------------------------------------------------------------------------------      
DECLARE @ERROR_NUMBER    INT        
DECLARE @ERROR_SEVERITY  INT        
DECLARE @ERROR_STATE     INT        
DECLARE @ERROR_PROCEDURE VARCHAR(512)        
DECLARE @ERROR_LINE    INT        
DECLARE @ERROR_MESSAGE   NVARCHAR(MAX)        
      
      
DECLARE @CUSTOMER_CODE VARCHAR(20)      
DECLARE @CUSTOMER_ID INT      
DECLARE @POLICY_ID INT      
DECLARE @POLICY_VERSION_ID INT      
DECLARE @POLICY_NUMBER NVARCHAR(21)      
DECLARE @ENDORSEMENT_NUMBER INT     
DECLARE @TYPE INT    
DECLARE @PERC DECIMAL(18,2)    
      
      
           
DECLARE @LOOP_POLICY_SEQUANCE_NO INT
DECLARE @LOOP_COVERAGE_SEQUANCE_NO INT        
DECLARE @LOOP_END_SEQUANCE_NO INT          
DECLARE @LOOP_RISK_SEQUANCE_NO INT        

DECLARE @LOOP_IMPORT_SERIAL_NO INT          
DECLARE @COUNTER INT  =1        
DECLARE @MAX_RECORD_COUNT INT         
DECLARE @ERROR_NO INT=0        
DECLARE @IMPORT_SERIAL_NO INT    
DECLARE @RISK_ID   INT =0 -- FOR POLICY COVERAGE   
  
DECLARE @LOB_ID INT  
DECLARE @IMPORT_FILE_NAME NVARCHAR(50)       
DECLARE @IMPORT_POLICY_FILE_TYPE INT = 14939 -- FOR POLICY FILE TYPE    
DECLARE @IMPORT_RISK_COVERAGES_FILE_TYPE INT = 14968 -- FOR POLICY COVERAGES    
DECLARE @IMPORT_RISK_FILE_TYPE INT = 15008 -- FOR POLICY RISK FILE TYPE    
DECLARE @COVERAGE_CODE_ID INT
DECLARE @COVERAGE_ID INT   
DECLARE @SUB_LOB_ID INT   
DECLARE @PROCESS_TYPE INT    --- Change   
      
BEGIN TRY      
      
        
     CREATE TABLE #TEMP_POLICY_RISK_COVERAGES        
     (        
			ID INT IDENTITY(1,1),  
			IMPORT_SERIAL_NO BIGINT,  
			COVERAGE_CODE_ID INT,
			POLICY_SEQUENCE_NO INT NULL,
			POLICY_END_NO  INT NULL,
			RISK_SEQUANCE_NO INT,
			COVERAGE_SEQUANCE_NO INT   
     )
     
	INSERT INTO #TEMP_POLICY_RISK_COVERAGES        
     (        
			IMPORT_SERIAL_NO,	
			COVERAGE_CODE_ID ,        
			POLICY_SEQUENCE_NO,
			POLICY_END_NO,
			RISK_SEQUANCE_NO,
			COVERAGE_SEQUANCE_NO
		      
     )        
     (        
      SELECT  
		  	IMPORT_SERIAL_NO,
		  	COVERAGE,
		  	POLICY_SEQUENTIAL ,        
		  	ENDORSEMENT_SEQUENTIAL ,   
		  	RISK_LOCATION_SEQUENTIAL, 
		  	COVERAGE_SEQUENTIAL   
	  FROM MIG_IL_POLICY_RISK_COVERAGES_DETAILS WITH(NOLOCK)        
	  WHERE IMPORT_REQUEST_ID = @IMPORT_REQUEST_ID AND HAS_ERRORS = 0        
     )        
    
    
   ------------------------------------              
   -- GET MAX RECOUNT COUNT      
   ------------------------------------           
    SELECT @MAX_RECORD_COUNT = COUNT(ID)         
    FROM   #TEMP_POLICY_RISK_COVERAGES         
      
   ------------------------------------          
   -- GET FILE NAME    
   ------------------------------------       
   IF(@MAX_RECORD_COUNT>0)    
   BEGIN    
       
    SELECT @IMPORT_FILE_NAME = SUBSTRING(ISNULL(DISPLAY_FILE_NAME,''),1,9)     
    FROM  MIG_IL_IMPORT_REQUEST_FILES    
    WHERE IMPORT_REQUEST_ID  = @IMPORT_REQUEST_ID AND    
          IMPORT_FILE_TYPE   = @IMPORT_RISK_COVERAGES_FILE_TYPE
   
   END    
    
  WHILE(@COUNTER<=@MAX_RECORD_COUNT)        
  BEGIN      
      
     SET @ERROR_NO=0        
  
     SET @CUSTOMER_ID=0    
     SET @POLICY_ID=0    
     SET @POLICY_VERSION_ID=0    
     SET @LOB_ID=0
     SET @RISK_ID =0
     SET @SUB_LOB_ID=0   
     SET @PROCESS_TYPE=0
     
      SELECT     
       @IMPORT_SERIAL_NO         	= IMPORT_SERIAL_NO,        
       @LOOP_POLICY_SEQUANCE_NO  	= POLICY_SEQUENCE_NO,      
       @LOOP_END_SEQUANCE_NO     	= POLICY_END_NO, 
       @LOOP_RISK_SEQUANCE_NO    	= RISK_SEQUANCE_NO,
       @LOOP_COVERAGE_SEQUANCE_NO	=COVERAGE_SEQUANCE_NO , 
       @COVERAGE_CODE_ID			=COVERAGE_CODE_ID	     
     FROM   #TEMP_POLICY_RISK_COVERAGES (NOLOCK) WHERE ID   = @COUNTER           
      
   
   ----------------------------------------------------------------          
   -- GET RISK ID FROM PROCESSED RISK RECORDS
   ----------------------------------------------------------------     
   SELECT @CUSTOMER_ID		  = CUSTOMER_ID ,    
          @POLICY_ID		  = POLICY_ID,    
          @POLICY_VERSION_ID  = POLICY_VERSION_ID ,
          @LOB_ID             = LOB_ID ,
          @RISK_ID            = IMPORTED_RECORD_ID,
          @PROCESS_TYPE		  = PROCESS_TYPE  --- Change   
   FROM   MIG_IL_IMPORT_SUMMARY  NOLOCK  
   WHERE  POLICY_SEQUENTIAL			= @LOOP_POLICY_SEQUANCE_NO AND    
		  ENDORSEMENT_SEQUENTIAL    = @LOOP_END_SEQUANCE_NO    AND        
		  IMPORT_SEQUENTIAL         = @LOOP_RISK_SEQUANCE_NO   AND
          FILE_TYPE					= @IMPORT_RISK_FILE_TYPE   AND    
          [FILE_NAME]				= @IMPORT_FILE_NAME        AND    
          IS_ACTIVE					= 'Y'    
   
   --SELECT   @LOOP_POLICY_SEQUANCE_NO POLICY_SEQUENTIAL,@LOOP_END_SEQUANCE_NO   ENDORSEMENT_SEQUENTIAL  ,@LOOP_RISK_SEQUANCE_NO IMPORT_SEQUENTIAL   ,@IMPORT_RISK_FILE_TYPE  FILE_TYPE  ,@IMPORT_FILE_NAME  [FILE_NAME]     
   --select @COVERAGE_ID COVERAGE_ID,@POLICY_ID POLICY_ID ,@POLICY_VERSION_ID POLICY_VERSION_ID ,@RISK_ID RISK_ID,@LOB_ID LOB_ID ,@CUSTOMER_ID CUSTOMER_ID          
   SELECT @SUB_LOB_ID=CAST(POLICY_SUBLOB AS INT) FROM POL_CUSTOMER_POLICY_LIST WITH(NOLOCK) WHERE CUSTOMER_ID=@CUSTOMER_ID AND POLICY_ID=@POLICY_ID AND POLICY_VERSION_ID=@POLICY_VERSION_ID
   -------------------------------------------------------          
   -- CHECK WHETHER APPLICATION/POLICY EXISTS OR NOT    
   -------------------------------------------------------     
    IF(NOT EXISTS( SELECT 1 FROM   MIG_IL_IMPORT_SUMMARY WHERE  
										  POLICY_SEQUENTIAL			= @LOOP_POLICY_SEQUANCE_NO AND    
										  ENDORSEMENT_SEQUENTIAL    = @LOOP_END_SEQUANCE_NO    AND    
										  FILE_TYPE					= @IMPORT_POLICY_FILE_TYPE AND    
										  [FILE_NAME]				= @IMPORT_FILE_NAME        AND    
										  IS_ACTIVE					= 'Y'    
				)  
	    )               
        SET @ERROR_NO =53 -- Application/Policy does not exists    
		 
		 ELSE IF (@CUSTOMER_ID IS NULL OR @CUSTOMER_ID=0)
		 	SET @ERROR_NO =257 ---Risk is not exists in given policy.
		 ELSE IF EXISTS(SELECT 1 FROM POL_PRODUCT_COVERAGES WITH(NOLOCK) WHERE CUSTOMER_ID=@CUSTOMER_ID AND POLICY_ID=@POLICY_ID AND POLICY_VERSION_ID=@POLICY_VERSION_ID AND RISK_ID=@RISK_ID AND COVERAGE_CODE_ID=@COVERAGE_CODE_ID) 
		 BEGIN
			SET @ERROR_NO =242 ---Coverage exists..
		 END 
		 ELSE IF NOT EXISTS(SELECT * FROM MNT_COVERAGE WITH(NOLOCK) WHERE COV_ID=@COVERAGE_CODE_ID AND LOB_ID=@LOB_ID AND SUB_LOB_ID=@SUB_LOB_ID)
		 BEGIN
			SET @ERROR_NO =45 ---Coverage does not exists in policy.
		 END
    --SELECT  @ERROR_NO ERROR
    IF(@ERROR_NO>0)    
       BEGIN    
         
		  -----------------------------------------------------------          
		  -- INSERT ERROR DETAILS    
		  -----------------------------------------------------------     
			 UPDATE MIG_IL_POLICY_RISK_COVERAGES_DETAILS       
			 SET    HAS_ERRORS=1          
			 WHERE  IMPORT_REQUEST_ID = @IMPORT_REQUEST_ID AND     
					IMPORT_SERIAL_NO  = @IMPORT_SERIAL_NO          
		          
			EXEC  [PROC_MIG_IL_INSERT_IMPORT_ERROR_DETAILS]                     
				 @IMPORT_REQUEST_ID     = @IMPORT_REQUEST_ID,          
				 @IMPORT_SERIAL_NO      = @IMPORT_SERIAL_NO  ,              
				 @ERROR_SOURCE_FILE     = ''     ,          
				 @ERROR_SOURCE_COLUMN   = ''     ,          
				 @ERROR_SOURCE_COLUMN_VALUE= '' ,  
				 @ERROR_ROW_NUMBER      = @IMPORT_SERIAL_NO   ,            
				 @ERROR_TYPES           = @ERROR_NO,       
				 @ACTUAL_RECORD_DATA    = '' ,          
				 @ERROR_MODE            = 'VE',  -- VALIDATION ERROR          
				 @ERROR_SOURCE_TYPE     = 'PCOV'       
         
    
       END     
       ELSE    
       BEGIN    
      
  IF(@PROCESS_TYPE =1)
  BEGIN
   -----------------------------------------------------------          
   -- GET COVERAGE_ID  
   -----------------------------------------------------------     
       
        SELECT @COVERAGE_ID= ISNULL(MAX(COVERAGE_ID),0) +1    
        FROM POL_PRODUCT_COVERAGES     
        WHERE CUSTOMER_ID       = @CUSTOMER_ID AND     
              POLICY_ID      = @POLICY_ID   AND    
              POLICY_VERSION_ID = @POLICY_VERSION_ID AND    
              RISK_ID           = @RISK_ID -- FOR POLICY COVERAGE_ID IT SHOULD BE ZERO    
                  
    INSERT INTO [dbo].POL_PRODUCT_COVERAGES    
		(CUSTOMER_ID,					
		POLICY_ID,
		POLICY_VERSION_ID,
		RISK_ID,
		COVERAGE_ID,
		COVERAGE_CODE_ID,
		RI_APPLIES,
		LIMIT_OVERRIDE,
		LIMIT_1,
		LIMIT_1_TYPE,
		LIMIT_2,
		LIMIT_2_TYPE,
		LIMIT1_AMOUNT_TEXT,
		LIMIT2_AMOUNT_TEXT,
		DEDUCT_OVERRIDE,
		DEDUCTIBLE_1,
		DEDUCTIBLE_1_TYPE,
		DEDUCTIBLE_2,
		DEDUCTIBLE_2_TYPE,
		MINIMUM_DEDUCTIBLE,
		DEDUCTIBLE1_AMOUNT_TEXT,
		DEDUCTIBLE2_AMOUNT_TEXT,
		DEDUCTIBLE_REDUCES,
		INITIAL_RATE,
		FINAL_RATE,
		AVERAGE_RATE,
		WRITTEN_PREMIUM,
		FULL_TERM_PREMIUM,
		IS_SYSTEM_COVERAGE,
		LIMIT_ID,
		DEDUC_ID,
		ADD_INFORMATION,
		CREATED_BY,
		CREATED_DATETIME,
		MODIFIED_BY,
		LAST_UPDATED_DATETIME,
		INDEMNITY_PERIOD,
		CHANGE_INFORCE_PREM,
		IS_ACTIVE,
		ACC_CO_DISCOUNT
     )    
      
      
     SELECT     
		@CUSTOMER_ID,    
		@POLICY_ID ,   
		@POLICY_VERSION_ID    ,
		@RISK_ID    ,
		@COVERAGE_ID ,  
		@COVERAGE_CODE_ID,
		'N',-- RI_APPLIES,
		NULL,--LIMIT_OVERRIDE,
		SUM_INSURED_SUB_LIMIT,--LIMIT_1,
		null,--LIMIT_1_TYPE,
		null,--LIMIT_2,
		null,--LIMIT_2_TYPE,
		null,--LIMIT1_AMOUNT_TEXT,
		null,--LIMIT2_AMOUNT_TEXT,
		null,--DEDUCT_OVERRIDE,
		DEDUCTIBLE_AMOUNT,--DEDUCTIBLE_1,
		DEDUCTIBLE_TYPE,--DEDUCTIBLE_1_TYPE,
		null,--DEDUCTIBLE_2,
		null,--DEDUCTIBLE_2_TYPE,
		MINIMUM_DEDUCTIBLE,
		null,--DEDUCTIBLE1_AMOUNT_TEXT,
		DEDUCTIBLE_TEXT,--DEDUCTIBLE2_AMOUNT_TEXT,
		'N',--DEDUCTIBLE_REDUCES,
		INITIAL_RATE,
		FINAL_RATE,
		AVERAGE_RATE,
		PREMIUM,
		null,--FULL_TERM_PREMIUM,
		null,--IS_SYSTEM_COVERAGE,
		null,--LIMIT_ID,
		null,--DEDUC_ID,
		null,--ADD_INFORMATION,
		dbo.fun_GetDefaultUserID(),    
		GETDATE() ,   
		MODIFIED_BY,
		LAST_UPDATED_DATETIME,
		INDEMNITY_PERIOD,
		null,--CHANGE_INFORCE_PREM,
		CASE WHEN IS_DEACTIVATE ='Y' THEN 'N' ELSE 'Y' END,    
		null--ACC_CO_DISCOUNT
  
   FROM MIG_IL_POLICY_RISK_COVERAGES_DETAILS WITH(NOLOCK)
		    WHERE IMPORT_REQUEST_ID = @IMPORT_REQUEST_ID AND
				  IMPORT_SERIAL_NO  = @IMPORT_SERIAL_NO 
				      
      
  END 
  ELSE IF(@PROCESS_TYPE =3) --- Added by pradeep for endorsement policy
  BEGIN
   ----------------------------------------------------------------          
   -- GET @COVERAGE_ID id 
   ----------------------------------------------------------------     
   SELECT @COVERAGE_ID	  = IMPORTED_RECORD_ID 
   FROM   MIG_IL_IMPORT_SUMMARY  NOLOCK  
   WHERE  POLICY_SEQUENTIAL			= @LOOP_POLICY_SEQUANCE_NO AND    
		  ENDORSEMENT_SEQUENTIAL    = @LOOP_END_SEQUANCE_NO    AND        
		  IMPORT_SEQUENTIAL         = @LOOP_RISK_SEQUANCE_NO   AND
          FILE_TYPE					= @IMPORT_RISK_COVERAGES_FILE_TYPE   AND    
          [FILE_NAME]				= @IMPORT_FILE_NAME        AND    
          IS_ACTIVE					= 'Y'  
     -----------------------------------------------------------------------------      
    -- IF @COVERAGE_ID IS EXISTS THEN UPDATE COVERAGE  FOR POLICY ENDORSEMENT - ADDED BY PRADEEP
    -----------------------------------------------------------------------------      
   IF(@COVERAGE_ID >0)
   BEGIN
	   ------------------------------------
	   -- UPDATE IMPORT DETAILS    
	   ------------------------------------             
		UPDATE MIG_IL_POLICY_RISK_COVERAGES_DETAILS    
		SET  
		 CUSTOMER_ID       = @CUSTOMER_ID,    
		 POLICY_ID         = @POLICY_ID,    
		 POLICY_VERSION_ID = @POLICY_VERSION_ID,    
		 IS_PROCESSED      = 'Y'    
		WHERE  IMPORT_REQUEST_ID = @IMPORT_REQUEST_ID AND    
		 IMPORT_SERIAL_NO        = @IMPORT_SERIAL_NO   
     
    			-- UPDATE EXISTING DETAILS
       UPDATE [POL_PRODUCT_COVERAGES]               
       
		 SET
			 LIMIT_1 				=	CASE WHEN T.SUM_INSURED_SUB_LIMIT IS NULL OR T.SUM_INSURED_SUB_LIMIT=0 THEN LIMIT_1 ELSE T.SUM_INSURED_SUB_LIMIT END	 
			,DEDUCTIBLE_1 			=	CASE WHEN T.DEDUCTIBLE_AMOUNT IS NULL OR T.DEDUCTIBLE_AMOUNT=0 THEN DEDUCTIBLE_1 ELSE T.DEDUCTIBLE_AMOUNT END	 
			,DEDUCTIBLE_1_TYPE 		=	CASE WHEN T.DEDUCTIBLE_TYPE IS NULL OR  T.DEDUCTIBLE_TYPE='' THEN DEDUCTIBLE_1_TYPE ELSE  T.DEDUCTIBLE_TYPE END
			,MINIMUM_DEDUCTIBLE		=	CASE WHEN T.MINIMUM_DEDUCTIBLE IS NULL OR T.MINIMUM_DEDUCTIBLE=0 THEN PPC.MINIMUM_DEDUCTIBLE ELSE T.MINIMUM_DEDUCTIBLE END	 
			,DEDUCTIBLE2_AMOUNT_TEXT=	CASE WHEN T.DEDUCTIBLE_TEXT IS NULL OR  T.DEDUCTIBLE_TEXT='' THEN DEDUCTIBLE2_AMOUNT_TEXT ELSE  T.DEDUCTIBLE_TEXT END 
			,INITIAL_RATE 			=	CASE WHEN T.INITIAL_RATE IS NULL OR T.INITIAL_RATE=0 THEN PPC.INITIAL_RATE ELSE T.INITIAL_RATE END  
			,FINAL_RATE 			=	CASE WHEN T.FINAL_RATE  IS NULL OR T.FINAL_RATE =0 THEN PPC.FINAL_RATE ELSE T.FINAL_RATE  END   
			,AVERAGE_RATE 			=	CASE WHEN T.AVERAGE_RATE IS NULL OR T.AVERAGE_RATE =0 THEN PPC.AVERAGE_RATE ELSE T.AVERAGE_RATE END   
			,WRITTEN_PREMIUM 		=	CASE WHEN T.PREMIUM  IS NULL OR T.PREMIUM =0 THEN PPC.WRITTEN_PREMIUM ELSE T.PREMIUM  END     
			,MODIFIED_BY 			=	T.MODIFIED_BY
			,LAST_UPDATED_DATETIME 	=	T.LAST_UPDATED_DATETIME
			,INDEMNITY_PERIOD 		=	CASE WHEN T.INDEMNITY_PERIOD  IS NULL OR T.INDEMNITY_PERIOD =0 THEN PPC.INDEMNITY_PERIOD ELSE T.INDEMNITY_PERIOD  END    
			,IS_ACTIVE 				=	CASE WHEN T.IS_DEACTIVATE ='Y' THEN 'N' ELSE 'Y' END  
            
	     FROM [POL_PRODUCT_COVERAGES] PPC  INNER JOIN
	     (
			SELECT
			 CUSTOMER_ID     
			,POLICY_ID  
			,POLICY_VERSION_ID
			,SUM_INSURED_SUB_LIMIT  
			,DEDUCTIBLE_AMOUNT  
			,DEDUCTIBLE_TYPE 
			,MINIMUM_DEDUCTIBLE 
			,DEDUCTIBLE_TEXT  
			,INITIAL_RATE 
			,FINAL_RATE 
			,AVERAGE_RATE 
			,PREMIUM 
			,dbo.fun_GetDefaultUserID() AS MODIFIED_BY 
			,GETDATE() AS LAST_UPDATED_DATETIME 
			,INDEMNITY_PERIOD 
			,IS_DEACTIVATE    
		    FROM   MIG_IL_POLICY_RISK_COVERAGES_DETAILS WITH(NOLOCK)
		    WHERE  IMPORT_REQUEST_ID = @IMPORT_REQUEST_ID AND 
		           IMPORT_SERIAL_NO  = @IMPORT_SERIAL_NO
			   
	     )T ON T.CUSTOMER_ID= PPC.CUSTOMER_ID AND T.POLICY_ID=PPC.POLICY_ID AND T.POLICY_VERSION_ID=PPC.POLICY_VERSION_ID
	     
	     WHERE PPC.CUSTOMER_ID =@CUSTOMER_ID AND PPC.POLICY_ID=@POLICY_ID AND PPC.POLICY_VERSION_ID=@POLICY_VERSION_ID AND PPC.COVERAGE_ID=@COVERAGE_ID	 
   END
   
   ELSE 
   BEGIN
	   -----------------------------------------------------------          
	   -- GET COVERAGE_ID  
	   -----------------------------------------------------------     
	       
			SELECT @COVERAGE_ID= ISNULL(MAX(COVERAGE_ID),0) +1    
			FROM POL_PRODUCT_COVERAGES     
			WHERE CUSTOMER_ID       = @CUSTOMER_ID AND     
				  POLICY_ID         = @POLICY_ID   AND    
				  POLICY_VERSION_ID = @POLICY_VERSION_ID AND    
				  RISK_ID           = @RISK_ID -- FOR POLICY COVERAGE_ID IT SHOULD BE ZERO    
	                  
		INSERT INTO [dbo].POL_PRODUCT_COVERAGES    
			(CUSTOMER_ID,					
			POLICY_ID,
			POLICY_VERSION_ID,
			RISK_ID,
			COVERAGE_ID,
			COVERAGE_CODE_ID,
			RI_APPLIES,
			LIMIT_OVERRIDE,
			LIMIT_1,
			LIMIT_1_TYPE,
			LIMIT_2,
			LIMIT_2_TYPE,
			LIMIT1_AMOUNT_TEXT,
			LIMIT2_AMOUNT_TEXT,
			DEDUCT_OVERRIDE,
			DEDUCTIBLE_1,
			DEDUCTIBLE_1_TYPE,
			DEDUCTIBLE_2,
			DEDUCTIBLE_2_TYPE,
			MINIMUM_DEDUCTIBLE,
			DEDUCTIBLE1_AMOUNT_TEXT,
			DEDUCTIBLE2_AMOUNT_TEXT,
			DEDUCTIBLE_REDUCES,
			INITIAL_RATE,
			FINAL_RATE,
			AVERAGE_RATE,
			WRITTEN_PREMIUM,
			FULL_TERM_PREMIUM,
			IS_SYSTEM_COVERAGE,
			LIMIT_ID,
			DEDUC_ID,
			ADD_INFORMATION,
			CREATED_BY,
			CREATED_DATETIME,
			MODIFIED_BY,
			LAST_UPDATED_DATETIME,
			INDEMNITY_PERIOD,
			CHANGE_INFORCE_PREM,
			IS_ACTIVE,
			ACC_CO_DISCOUNT
		 )    
	      
	      
		 SELECT     
			@CUSTOMER_ID,    
			@POLICY_ID ,   
			@POLICY_VERSION_ID    ,
			@RISK_ID    ,
			@COVERAGE_ID ,  
			@COVERAGE_CODE_ID,
			'N',-- RI_APPLIES,
			NULL,--LIMIT_OVERRIDE,
			SUM_INSURED_SUB_LIMIT,--LIMIT_1,
			null,--LIMIT_1_TYPE,
			null,--LIMIT_2,
			null,--LIMIT_2_TYPE,
			null,--LIMIT1_AMOUNT_TEXT,
			null,--LIMIT2_AMOUNT_TEXT,
			null,--DEDUCT_OVERRIDE,
			DEDUCTIBLE_AMOUNT,--DEDUCTIBLE_1,
			DEDUCTIBLE_TYPE,--DEDUCTIBLE_1_TYPE,
			null,--DEDUCTIBLE_2,
			null,--DEDUCTIBLE_2_TYPE,
			MINIMUM_DEDUCTIBLE,
			null,--DEDUCTIBLE1_AMOUNT_TEXT,
			DEDUCTIBLE_TEXT,--DEDUCTIBLE2_AMOUNT_TEXT,
			'N',--DEDUCTIBLE_REDUCES,
			INITIAL_RATE,
			FINAL_RATE,
			AVERAGE_RATE,
			PREMIUM,
			null,--FULL_TERM_PREMIUM,
			null,--IS_SYSTEM_COVERAGE,
			null,--LIMIT_ID,
			null,--DEDUC_ID,
			null,--ADD_INFORMATION,
			dbo.fun_GetDefaultUserID(),    
			GETDATE() ,   
			MODIFIED_BY,
			LAST_UPDATED_DATETIME,
			INDEMNITY_PERIOD,
			null,--CHANGE_INFORCE_PREM,
			CASE WHEN IS_DEACTIVATE ='Y' THEN 'N' ELSE 'Y' END,    
			null--ACC_CO_DISCOUNT
	  
	   FROM MIG_IL_POLICY_RISK_COVERAGES_DETAILS WITH(NOLOCK)
				WHERE IMPORT_REQUEST_ID = @IMPORT_REQUEST_ID AND
					  IMPORT_SERIAL_NO  = @IMPORT_SERIAL_NO 
   END	        
   
  END
   ------------------------------------          
   -- UPDATE IMPORT DETAILS    
   ------------------------------------             
    UPDATE MIG_IL_POLICY_RISK_COVERAGES_DETAILS    
    SET    CUSTOMER_ID    = @CUSTOMER_ID,    
     POLICY_ID         = @POLICY_ID,    
     POLICY_VERSION_ID = @POLICY_VERSION_ID,    
     IS_PROCESSED      = 'Y'    
    WHERE  IMPORT_REQUEST_ID = @IMPORT_REQUEST_ID AND    
     IMPORT_SERIAL_NO  = @IMPORT_SERIAL_NO    
       
    ------------------------------------          
    -- INSERT IMPORT SUMMARY  
    ------------------------------------     
    EXEC [PROC_MIG_IL_INSERT_IMPORT_SUMMARY]       
    @IMPORT_REQUEST_ID      = @IMPORT_REQUEST_ID,  
    @IMPORT_SERIAL_NO       = @IMPORT_SERIAL_NO,   
    @CUSTOMER_ID            = @CUSTOMER_ID ,  
    @POLICY_ID              = @POLICY_ID,  
    @POLICY_VERSION_ID      = @POLICY_VERSION_ID,  
    @IS_ACTIVE              = 'Y',  
    @IS_PROCESSED           = 'Y',  
    @FILE_TYPE				= @IMPORT_RISK_COVERAGES_FILE_TYPE,  
    @FILE_NAME              = @IMPORT_FILE_NAME,  
    @CUSTOMER_SEQUENTIAL    = NULL,  
    @POLICY_SEQUENTIAL      = @LOOP_POLICY_SEQUANCE_NO,   
    @ENDORSEMENT_SEQUENTIAL = @LOOP_END_SEQUANCE_NO,  
    @IMPORT_SEQUENTIAL      = @LOOP_RISK_SEQUANCE_NO,  
    @IMPORT_SEQUENTIAL2     = @LOOP_COVERAGE_SEQUANCE_NO,  
    @LOB_ID					= @LOB_ID ,   
    @IMPORTED_RECORD_ID     = @COVERAGE_ID,
    @PROCESS_TYPE			= @PROCESS_TYPE    --- Change        
    
   END    
    SET @COUNTER+=1     
           
  END  -- END OF WHILE LOOP    
      
END TRY      
BEGIN CATCH        
         
 SELECT         
    @ERROR_NUMBER    = ERROR_NUMBER(),        
    @ERROR_SEVERITY  = ERROR_SEVERITY(),        
    @ERROR_STATE     = ERROR_STATE(),        
    @ERROR_PROCEDURE = ERROR_PROCEDURE(),       
    @ERROR_LINE   = ERROR_LINE(),        
 @ERROR_MESSAGE   = ERROR_MESSAGE()        
             
  -- CREATING LOG OF EXCEPTION         
  EXEC [PROC_MIG_INSERT_ERROR_LOG]          
  @IMPORT_REQUEST_ID    = @IMPORT_REQUEST_ID        
 ,@IMPORT_SERIAL_NO  = 0        
 ,@ERROR_NUMBER      = @ERROR_NUMBER        
 ,@ERROR_SEVERITY    = @ERROR_SEVERITY        
 ,@ERROR_STATE          = @ERROR_STATE        
 ,@ERROR_PROCEDURE   = @ERROR_PROCEDURE        
 ,@ERROR_LINE        = @ERROR_LINE        
 ,@ERROR_MESSAGE        = @ERROR_MESSAGE        
 ,@INITIAL_LOAD_FLAG    = 'Y'        
          
         
 END CATCH        
            
      
      
       
END     
--GO 
--EXEC  [PROC_MIG_IL_INSERT_POLICY_RISK_COVERAGES_DETAILS] 654     
-- select * from MIG_IL_POLICY_RISK_COVERAGES_DETAILS WHERE IMPORT_REQUEST_ID=654 
---select * from POL_REMUNERATION where CUSTOMER_ID=4508 and POLICY_ID=20 --and COMMISSION_TYPE=43






GO