  
 /**************************************************              
CREATED BY   : Lalit Kr Chauhan           
CREATED DATETIME : Dec 08 2010                
PURPOSE    :       
Review    :           
Review By  Date  :             
Purpose    :          
select EFFECTIVE_DATETIME,EXPIRY_DATE,NEW_POLICY_VERSION_ID,* from       
POL_POLICY_PROCESS WITH(NOLOCK) where CUSTOMER_ID=2727 and POLICY_ID=125      
      
drop proc   
Proc_GetPolicyEndorsementVersions  2156,730,4,'04/27/2011' ,'REISSUE'  
select * from pol_policy_process where customer_id  =  2066 and policy_id  = 3 and 2  
*/      
ALTER PROC [dbo].[Proc_GetPolicyEndorsementVersions]      
(      
@CUSTOMER_ID INT,      
@POLICY_ID INT,      
@POLICY_VERSION_ID INT,      
@END_EFFE_DATE DATETIME = NULL,      
@CALLED_FROM NVARCHAR(15) = NULL,      
@ENDORSEMENT_OPTION INT=  NULL,  
@LANG_ID INT  =1  
)      
AS      
BEGIN      
 DECLARE @CURRENT_TERM INT     ,@TRAN_TYE INT  
 ,@OPEN_POLICY INT= 14560  
   
   
 SELECT @CURRENT_TERM = CURRENT_TERM,@TRAN_TYE = TRANSACTION_TYPE  
  FROM POL_CUSTOMER_POLICY_LIST       
 WITH(NOLOCK) WHERE CUSTOMER_ID =       
 @CUSTOMER_ID AND POLICY_ID = @POLICY_ID       
 AND POLICY_VERSION_ID = @POLICY_VERSION_ID      
      
 IF(@CALLED_FROM = 'PENDING')      
 BEGIN    
   SELECT * FROM POL_POLICY_PROCESS WITH(NOLOCK) WHERE CUSTOMER_ID = @CUSTOMER_ID AND POLICY_ID = @POLICY_ID AND SOURCE_VERSION_ID = @POLICY_VERSION_ID      
  END      
 ELSE IF (@CALLED_FROM IN ('REISSUE','OVERRIDE'))    
 BEGIN    
  CREATE TABLE #tempVersion(NEW_POLICY_VERSION INT)      
       
  INSERT INTO  #tempVersion SELECT NEW_POLICY_VERSION_ID        
  FROM (SELECT NEW_POLICY_VERSION_ID NEW_POLICY_VERSION_ID        
     FROM POL_POLICY_PROCESS  PROCESS WITH(NOLOCK)        
     WHERE PROCESS.CUSTOMER_ID = @CUSTOMER_ID         
   AND PROCESS.POLICY_ID =@POLICY_ID         
   AND PROCESS.PROCESS_STATUS <> 'ROLLBACK'         
   --AND EFFECTIVE_DATETIME > @END_EFFE_DATE        
   AND PROCESS_ID = 14        
   and NEW_POLICY_VERSION_ID in         
   (        
   SELECT POLICY_VERSION_ID FROM POL_CUSTOMER_POLICY_LIST  POL  WITH(NOLOCK)         
   WHERE  POL.CUSTOMER_ID = PROCESS.CUSTOMER_ID AND         
    POL.POLICY_ID = PROCESS.POLICY_ID         
    AND POL.CURRENT_TERM = @CURRENT_TERM        
   ))a    
   /*      commented for i-trck  # 948 each endorsement should available for re-issue process  
      GROUP BY  EFFECTIVE_DATETIME    ,CO_APPLICANT_ID  
   UNION      
            
   SELECT TOP 1 max(NEW_POLICY_VERSION_ID) NEW_POLICY_VERSION_ID,EFFECTIVE_DATETIME      
      FROM POL_POLICY_PROCESS  PROCESS WITH(NOLOCK)      
      WHERE PROCESS.CUSTOMER_ID = @CUSTOMER_ID       
   AND PROCESS.POLICY_ID = @POLICY_ID       
   AND PROCESS.PROCESS_STATUS <> 'ROLLBACK'       
   --AND EFFECTIVE_DATETIME <= @END_EFFE_DATE       
   AND PROCESS_ID IN (14)      
   AND NEW_POLICY_VERSION_ID IN       
   (      
   SELECT POLICY_VERSION_ID FROM POL_CUSTOMER_POLICY_LIST  POL  WITH(NOLOCK)       
   WHERE  POL.CUSTOMER_ID = PROCESS.CUSTOMER_ID AND       
    POL.POLICY_ID = PROCESS.POLICY_ID       
    AND POL.CURRENT_TERM = @CURRENT_TERM      
          
   )      
      GROUP BY EFFECTIVE_DATETIME      
      ORDER BY EFFECTIVE_DATETIME  desc      
      ) a       
      ORDER BY NEW_POLICY_VERSION_ID ASC      
       */  
     SELECT  NEW_POLICY_VERSION_ID,POL.POLICY_DISP_VERSION,      
     POLICY_PREVIOUS_STATUS,ENDORSEMENT_TYPE,PROCESS.ENDORSEMENT_NO,EXPIRY_DATE        
     ,ROW_ID,PROCESS.CUSTOMER_ID,PROCESS.POLICY_ID,PROCESS.POLICY_VERSION_ID,PROCESS_ID,PROCESS.CREATED_BY,EFFECTIVE_DATETIME        
     ,PROCESS.POLICY_CURRENT_STATUS,PROCESS.PROCESS_STATUS,  
     ISNULL(CONVERT(NVARCHAR,EFFECTIVE_DATETIME,  
     CASE WHEN @LANG_ID = 3  
     THEN 103 ELSE   
     101 END ),'')+   
     ISNULL(' - '+CONVERT(NVARCHAR,EXPIRY_DATE,CASE WHEN @LANG_ID = 3  
     THEN 103 ELSE   
     101 END),'')+   
     --CASE WHEN ENDORSEMENT_RE_ISSUE= 10963   
     --THEN   
     --ISNULL(' End No('+CAST(PROCESS.ENDORSEMENT_NO AS NVARCHAR)+') (Re Issue - End No '  
     --+CAST(  
     --ENDD.ENDORSEMENT_NO  
     -- AS NVARCHAR)  
     --+')'  
     --,'')   
     --ELSE   
     ISNULL(' End No('+CAST(PROCESS.ENDORSEMENT_NO AS NVARCHAR)+')','')   
     --END  
     + CASE WHEN @TRAN_TYE = @OPEN_POLICY   
     THEN '(' +CLT.FIRST_NAME+ISNULL(' '+CLT.LAST_NAME ,'')+')'  
     ELSE   
     ''  
      END  
       
     ENDORSEMENT_DESC,  
     --ENDD.ENDORSEMENT_NO BASE_ENDORSEMENT_NO ,  
     ISNULL(NEW_POLICY_VERSION_ID ,0) AS SOURCE_VERSION_ID,  
  
     CAST(NEW_POLICY_VERSION_ID AS  NVARCHAR) + '^'+ CAST(CO_APPLICANT_ID AS NVARCHAR) AS END_INFO,  
     CO_APPLICANT_ID  
     FROM POL_POLICY_PROCESS  PROCESS WITH(NOLOCK) INNER JOIN POL_CUSTOMER_POLICY_LIST POL WITH(NOLOCK)      
  ON       
  POL.CUSTOMER_ID =  PROCESS.CUSTOMER_ID AND       
  POL.POLICY_ID = PROCESS.POLICY_ID AND       
  POL.POLICY_VERSION_ID = PROCESS.NEW_POLICY_VERSION_ID     
  AND PROCESS.PROCESS_STATUS <> 'ROLLBACK' AND   
  ISNULL(PROCESS.REVERT_BACK,'N') <> 'Y'  
  LEFT OUTER JOIN POL_POLICY_ENDORSEMENTS ENDD   
  ON   
  ENDD.CUSTOMER_ID = PROCESS.CUSTOMER_ID   
  and ENDD.POLICY_ID = PROCESS.POLICY_ID AND   
  ENDD.POLICY_VERSION_ID =   
  CASE WHEN PROCESS.ENDORSEMENT_NO = 1 --if endorsement  is done on NBS THEN base version not exists in endorsement table  
  THEN PROCESS.NEW_POLICY_VERSION_ID  
  ELSE   
 PROCESS.POLICY_VERSION_ID  
  END   
AND UPPER(ENDD.ENDORSEMENT_STATUS) = 'COM'  
LEFT OUTER JOIN CLT_APPLICANT_LIST CLT   
ON CLT.APPLICANT_ID = PROCESS.CO_APPLICANT_ID  
  
     WHERE PROCESS.CUSTOMER_ID = @CUSTOMER_ID AND PROCESS.POLICY_ID = @POLICY_ID       
     AND NEW_POLICY_VERSION_ID IN (SELECT NEW_POLICY_VERSION FROM #tempVersion)      
     order by PROCESS.ENDORSEMENT_NO asc  
     --SELECT * FROM #tempVersion      
           
  DROP TABLE #tempVersion      
    END      
 ELSE IF(@ENDORSEMENT_OPTION = 'NO_SEQUENCE')    --get all committed endorsement on policy    
  BEGIN  
  SELECT * FROM POL_POLICY_PROCESS WITH(NOLOCK) WHERE    
  CUSTOMER_ID = @CUSTOMER_ID AND     
  POLICY_ID = @POLICY_ID AND     
  PROCESS_ID = 14  --ONLY COMMITTED ENDORSEMENT    
  AND PROCESS_STATUS <> 'ROLLBACK'    
  AND NEW_POLICY_VERSION_ID IN(SELECT     
  POLICY_VERSION_ID FROM POL_CUSTOMER_POLICY_LIST P    
  WITH(NOLOCK) WHERE P.CUSTOMER_ID =@CUSTOMER_ID AND P.POLICY_ID = @POLICY_ID    
  AND P.CURRENT_TERM = @CURRENT_TERM --P.POLICY_VERSION_ID = 3        
  )    
  END  
    
END  
--GO  
--EXEC Proc_GetPolicyEndorsementVersions  2156,722,4,'04/27/2011' ,'REISSUE'  