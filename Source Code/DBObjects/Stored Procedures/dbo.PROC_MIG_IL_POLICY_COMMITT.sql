/****** Object:  StoredProcedure [dbo].[PROC_MIG_IL_POLICY_COMMITT]    Script Date: 12/02/2011 16:37:04 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PROC_MIG_IL_POLICY_COMMITT]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[PROC_MIG_IL_POLICY_COMMITT]
GO
 
/****** Object:  StoredProcedure [dbo].[PROC_MIG_IL_POLICY_COMMITT]    Script Date: 12/02/2011 16:37:04 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

-- =============================================            
-- Modified by:  <Pradeep Kr. Kushwaha>            
-- Modified date: <18-Nov-2011>            
-- Description: <Insert data in Proc_InsertPOL_REINSURANCE_BREAKDOWN_DETAILS and Proc_InsertPOL_CO_INSURANCE_BREAKDOWN_DETAILS TABLE >            
-- DROP PROC PROC_MIG_IL_POLICY_COMMITT 4735,9,6,'11/11/2011',12,3,'11/11/2011',0,1,0
-- ============================================= 
CREATE PROC [dbo].[PROC_MIG_IL_POLICY_COMMITT]
(
 @CUSTOMER_ID  INT,
 @POLICY_ID INT ,
 @POLICY_VERSION_ID INT,
 @COMMIT_DATE DATETIME = NULL,
 @PROCESS_ID INT = NULL,
 @CREATED_BY INT = NULL,
 @CREATED_DATE DATETIME = NULL, 
 @ENDORSEMENT_TYPE INT = 0,
 @CO_APPLICANT_ID INT,
 @ENDORSEMENT_NO INT = 0
----declare  internal
)
AS
BEGIN


  DECLARE  @POLICY_STATUS NVARCHAR(10)
  DECLARE  @EFFECTIVE_DATETIME DATETIME = NULL
  DECLARE  @EXPIRY_DATETIME DATETIME = NULL
  DECLARE @ENDORSEMENT_DATE DATETIME
  DECLARE @ENDORSEMENT_DETAIL_ID INT
  
	DECLARE @POLICY_LOB INT
			,@DIV_ID INT
			,@CO_INSURANCE INT
			,@POLICY_NUMBER NVARCHAR(25)
	

	SELECT  @POLICY_LOB =  POLICY_LOB,@DIV_ID = DIV_ID,@CO_INSURANCE = CO_INSURANCE 
	--,@EFFECTIVE_DATETIME =POL_VER_EFFECTIVE_DATE,
	--		@EXPIRY_DATETIME=POL_VER_EXPIRATION_DATE
			,@POLICY_STATUS=POLICY_STATUS
	FROM POL_CUSTOMER_POLICY_LIST (NOLOCK) 
	WHERE CUSTOMER_ID = @CUSTOMER_ID AND POLICY_ID = @POLICY_ID AND  POLICY_VERSION_ID = @POLICY_VERSION_ID
	
	



BEGIN TRANSACTION CommittTransaction

--======================================================
---Genrate Policy Number from Existing Logic
--======================================================
IF(@PROCESS_ID=25)
BEGIN
CREATE TABLE #tempPOLICY_NUMBER(POLICY_NUMBER NVARCHAR(25))

INSERT INTO #tempPOLICY_NUMBER(POLICY_NUMBER)
exec Proc_GenerateAppPolNumber  @POLICY_LOB,@DIV_ID,@COMMIT_DATE,'POL',
								@CO_INSURANCE,@CUSTOMER_ID,@POLICY_ID,@POLICY_VERSION_ID
								

SELECT @POLICY_NUMBER = POLICY_NUMBER FROM #tempPOLICY_NUMBER 
DROP TABLE #tempPOLICY_NUMBER

END
--SELECT @POLICY_NUMBER
-----================================================
---insert into POL_POLICY_PROCESS
-----================================================
DECLARE @OPEN_TRAN_DESC NVARCHAR(500),@OPEN_ITEM_STATUS INT,@TRANS_DESC NVARCHAR(MAX),@RET_VAL INT
EXEC PROC_MIG_IL_INSERT_POLICY_PREMIUM_OPENITEMS   @CUSTOMER_ID,@POLICY_ID,@POLICY_VERSION_ID,
												@TRANS_DESC OUT,NULL,NULL,NULL,NULL,@RET_VAL OUT,@COMMIT_DATE

--SELECT 'OPeN items',@RET_VAL,@TRANS_DESC

-----================================================
---insert into POL_REINSURANCE_BREAKDOWN_DETAILS
-----================================================
EXEC Proc_InsertPOL_REINSURANCE_BREAKDOWN_DETAILS @CUSTOMER_ID,@POLICY_ID,@POLICY_VERSION_ID,@CREATED_BY,@PROCESS_ID

-----================================================
---insert into ACT_POLICY_CO_BILLING_DETAILS
-----================================================
 
EXEC Proc_InsertPOL_CO_INSURANCE_BREAKDOWN_DETAILS @CUSTOMER_ID,@POLICY_ID,@POLICY_VERSION_ID,@CREATED_BY,@CREATED_DATE

 
-----================================================
---insert into ACT_CUSTOMER_BALANCE_INFORMATION
-----================================================


DECLARE @SOURCE_ROW_ID INT
SELECT @SOURCE_ROW_ID = IDEN_ROW_ID FROM ACT_CUSTOMER_OPEN_ITEMS (NOLOCK) WHERE CUSTOMER_ID = @CUSTOMER_ID AND POLICY_ID = @POLICY_ID AND POLICY_VERSION_ID = @POLICY_VERSION_ID


EXEC PROC_MIG_IL_INSERT_CUSTOMER_BALANCE_INFORMATION  @CUSTOMER_ID,@POLICY_ID,@POLICY_VERSION_ID,@SOURCE_ROW_ID,@COMMIT_DATE
--IF(@@ERROR <> 0)
--	ROLLBACK TRAN CommittTransaction


-----================================================
---UPDATE into POL_POLICY_PROCESSS --ADDED BY PRADEEP
-----================================================	
--IF(@PROCESS_ID=25) 
--BEGIN
			UPDATE POL_POLICY_PROCESS SET
			             
			 PROCESS_ID						=@PROCESS_ID,    
			 POLICY_PREVIOUS_STATUS 		=CASE WHEN @PROCESS_ID=14 THEN 'NORMAL' ELSE POLICY_PREVIOUS_STATUS END,    
			 POLICY_CURRENT_STATUS          =CASE WHEN @PROCESS_ID=14 THEN 'NORMAL' ELSE POLICY_CURRENT_STATUS END,                               
			 PROCESS_STATUS 				='COMPLETE',    
			 COMPLETED_BY 					=@CREATED_BY,    
			 COMPLETED_DATETIME 			=@COMMIT_DATE,    
			 PROPERTY_INSPECTION_CREDIT     ='',     
			 DIARY_LIST_ID 					=null,    
			 PRINTING_OPTIONS 				=null,    
			 INSURED 						=null,    
			 SEND_INSURED_COPY_TO 			=null,    
			 AUTO_ID_CARD 					=0,    
			 NO_COPIES                      =11981,      
			 STD_LETTER_REQD 				=11983,    
			 CUSTOM_LETTER_REQD 			=0,    
			 SEND_ALL 						=0,    
			 ADD_INT 						=0,    
			 ADD_INT_ID 					=0,    
			 AGENCY_PRINT  					=11981,    
			 OTHER_RES_DATE  				='',    
			 OTHER_RES_DATE_CD  			=0,    
			 INCLUDE_REASON_DESC     		='',    
			 SOURCE_VERSION_ID  			=0,    
			 CO_APPLICANT_ID				=@CO_APPLICANT_ID   
			 WHERE CUSTOMER_ID				= @CUSTOMER_ID 
				AND POLICY_ID				= @POLICY_ID 
				AND NEW_POLICY_VERSION_ID	= @POLICY_VERSION_ID AND
				    PROCESS_ID				= CASE WHEN @PROCESS_ID=12 THEN 2 
												   WHEN @PROCESS_ID=14 THEN 3 ELSE PROCESS_ID END
 

---------===============Insert Data into POL_POLICY_ENDORSEMENTS and POL_POLICY_ENDORSEMENTS_DETAILS added by Pradeep on 28-Nov-2011
IF(@PROCESS_ID<>25)
BEGIN

--We are considaring @ENDORSEMENT_NO givien by initial load laylout file if not then get the max endoresment no from POL_POLICY_ENDORSEMENTS table --added by pradeep 
IF(@ENDORSEMENT_NO IS NULL OR @ENDORSEMENT_NO=0)
BEGIN
 SELECT @ENDORSEMENT_NO			= ISNULL(MAX(ENDORSEMENT_NO),0) + 1           
 FROM	POL_POLICY_ENDORSEMENTS WITH(NOLOCK)          
 WHERE	CUSTOMER_ID				= @CUSTOMER_ID          
		AND POLICY_ID			= @POLICY_ID      
		AND POLICY_VERSION_ID	= @POLICY_VERSION_ID
END  
 
  SELECT
  @ENDORSEMENT_TYPE=CASE WHEN @PROCESS_ID=12  THEN POLICY_CANCELLATION_TYPE
						  ELSE ENDORSEMENT_TYPE  END,
  @ENDORSEMENT_DATE= CASE WHEN @PROCESS_ID=12 THEN
							   CONVERT(DATETIME,(LEFT(CANCELLATION_EFFECTIVE_DATE,4)+'-'+SUBSTRING(CANCELLATION_EFFECTIVE_DATE,5,2)+'-'+RIGHT(CANCELLATION_EFFECTIVE_DATE,2))) 
						  ELSE
							   CONVERT(DATETIME,(LEFT(ENDORSEMENT_EFFECTIVE_DATE,4)+'-'+SUBSTRING(ENDORSEMENT_EFFECTIVE_DATE,5,2)+'-'+RIGHT(CANCELLATION_EFFECTIVE_DATE,2)))  END
						  
  FROM MIG_IL_POLICY_DETAILS WITH(NOLOCK) 
  WHERE CUSTOMER_ID				= @CUSTOMER_ID 
  AND   POLICY_ID				= @POLICY_ID 
  AND   POLICY_VERSION_ID		= @POLICY_VERSION_ID
  
 
INSERT INTO POL_POLICY_ENDORSEMENTS
(
	POLICY_ID,					
	POLICY_VERSION_ID,
	CUSTOMER_ID,
	ENDORSEMENT_NO,
	ENDORSEMENT_DATE,
	IS_ACTIVE,
	CREATED_BY,
	CREATED_DATETIME,
	MODIFIED_BY,
	LAST_UPDATED_DATETIME,
	ENDORSEMENT_STATUS,--COM
	PROCESS_TYPE,
	END_VERIFY_DIGIT,
	CO_ENDORSEMENT_NO)
	VALUES(
	@POLICY_ID,
	@POLICY_VERSION_ID,
	@CUSTOMER_ID,
	@ENDORSEMENT_NO,
	@ENDORSEMENT_DATE,
	'Y',
	dbo.fun_GetDefaultUserID(),
	GETDATE(),  
	dbo.fun_GetDefaultUserID(),
	GETDATE(),          
	'COM',
	CAST(@PROCESS_ID AS NVARCHAR(50)),
	NULL,
	NULL
)


SELECT   
  @ENDORSEMENT_DETAIL_ID = ISNULL(MAX(ENDORSEMENT_DETAIL_ID),0)+1   
 FROM   
  POL_POLICY_ENDORSEMENTS_DETAILS  WITH(NOLOCK)
 WHERE POLICY_ID    = @POLICY_ID  
  AND POLICY_VERSION_ID  = @POLICY_VERSION_ID  
  AND CUSTOMER_ID   = @CUSTOMER_ID  
  AND ENDORSEMENT_NO   = @ENDORSEMENT_NO  
  
 
 
INSERT INTO POL_POLICY_ENDORSEMENTS_DETAILS
(
	POLICY_ID,					
	POLICY_VERSION_ID,
	CUSTOMER_ID,
	ENDORSEMENT_NO,
	ENDORSEMENT_DETAIL_ID,
	ENDORSEMENT_DATE,
	ENDORSEMENT_TYPE,
	ENDORSEMENT_DESC,
	REMARKS,
	IS_ACTIVE,
	CREATED_BY,
	CREATED_DATETIME,
	TRANS_ID
	)
	VALUES(
	@POLICY_ID,
	@POLICY_VERSION_ID,
	@CUSTOMER_ID,
	@ENDORSEMENT_NO,
	@ENDORSEMENT_DETAIL_ID,
	@ENDORSEMENT_DATE,
	@ENDORSEMENT_TYPE,
	'',
	'',
	'Y',
	dbo.fun_GetDefaultUserID(),
	GETDATE(),  
	NULL 
)
END
---------===============end 
---Set previous version as IN-ACTIVE
UPDATE POL_CUSTOMER_POLICY_LIST SET POLICY_STATUS = 'INACTIVE'  WHERE CUSTOMER_ID = @CUSTOMER_ID AND POLICY_ID = @POLICY_ID AND POLICY_VERSION_ID < @POLICY_VERSION_ID
--IF(@@ERROR <> 0)
--	 ROLLBACK TRAN CommittTransaction
	 
UPDATE POL_CUSTOMER_POLICY_LIST 
SET POLICY_STATUS = @POLICY_STATUS,
--POLICY_NUMBER = CASE WHEN @PROCESS_ID=25 THEN @POLICY_NUMBER ELSE POLICY_NUMBER END ,
APP_STATUS = CASE WHEN @POLICY_VERSION_ID = 1 THEN 'COMPLETE' ELSE APP_STATUS END 
WHERE CUSTOMER_ID = @CUSTOMER_ID AND POLICY_ID = @POLICY_ID AND 
POLICY_VERSION_ID = @POLICY_VERSION_ID
--IF(@@ERROR <> 0)
--	 ROLLBACK TRAN CommittTransaction



-----================================================
---insert into PRINT_JOBS
-----================================================	
--SELECT * FROM PRINT_JOBS

-----================================================
---insert into POL_POLICY_PROCESSS
-----================================================	

IF(@@ERROR <> 0)
	 ROLLBACK TRAN CommittTransaction
ELSE
	COMMIT TRANSACTION CommittTransaction



END
--GO


--DECLARE @VERIFY_STATUS INT,@VALIDATION_MSG  NVARCHAR(MAX)
--EXEC [PROC_MIG_IL_COMMITT_POLICY]  27987,198,1,'05/13/2011',@VERIFY_STATUS OUT,25,398,
--									'10/05/2011','10/05/2011','10/04/2012',0,123,0,'NORMAL',@VALIDATION_MSG OUT

--SELECT * FROM POL_CUSTOMER_POLICY_LIST WHERE CUSTOMER_ID =27987 and POLICY_ID = 198 and POLICY_VERSION_ID = 1
--SELECT * FROM POL_POLICY_PROCESS WHERE CUSTOMER_ID =27987 and POLICY_ID = 198 and POLICY_VERSION_ID = 1
--SELECT * FROM ACT_CUSTOMER_OPEN_ITEMS WHERE CUSTOMER_ID =27987 and POLICY_ID = 198 and POLICY_VERSION_ID = 1

--ROLLBACK TRAN
 
GO