<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 1.3
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">1.3</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1">this is my long string</data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        [base64 mime encoded serialized .NET Framework object]
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        [base64 mime encoded string representing a byte array form of the .NET Framework object]
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used forserialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="$this.TrayLargeIcon" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </data>
  <data name="$this.DefaultModifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>Private</value>
  </data>
  <data name="$this.TrayAutoArrange" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </data>
  <data name="lblQuestionText">
        <value>Question</value>
    </data>
    <data name="lblQuestionTypeText">
        <value>Question type</value>
    </data>
    <data name="lblAnsTypeText">
        <value>Answer type</value>
    </data>
    <data name="lblListTypeText">
        <value>List</value>
    </data>
    <data name="lblSuffixText">
        <value>Suffix</value>
    </data>
    <data name="lblPrefixText">
        <value>Prefix</value>
    </data>
    <data name="lblQuestionNotesText">
        <value>Question notes</value>
    </data>
    <data name="reqtxtQuestionText">
        <value>Please enter question</value>
    </data>
    <data name="reqddlQuesTypeText">
        <value>Please select question type</value>
    </data>
    <data name="reqddlAnswerTypeText">
        <value>Please select answer type</value>
    </data>
    <data name="reqddlListTypeText">
        <value>Please select list type</value>
    </data>
    <data name="reqddlListOptionText">
        <value>Please select option for list</value>
    </data>
    <data name="strMsgEdit">
        <value>Details have been updated successfully</value>
    </data>
    <data name="strErrorSave">
        <value>Information could not be saved.Error occured</value>
    </data>
    <data name="strMsgInsert">
        <value>Details have been saved successfully</value>
    </data>
    <data name="lblSpecify">
        <value>Please specify the option&lt;br&gt; on which description is required</value>
    </data>
    <data name="lblDescRequired">
        <value>Description Required</value>
    </data>
    <data name="AddNewLinkText1">
        <value>Please Click On </value>
    </data>
    <data name="AddNewLinkText2">
        <value> Add New </value>
    </data>
    <data name="AddNewLinkText3">
        <value>to add new list </value>
    </data>
    <data name="ViewLinkText1">
        <value>Click on </value>
    </data>
    <data name="ViewLinkText2">
        <value> view list </value>
    </data>
    <data name="ViewLinkText3">
        <value>to view the list</value>
    </data>
    <data name="lblTotal">
        <value>Require Total ? </value>
    </data>
    <data name="MsgViewText">
        <value>
        </value>
    </data>
    <data name="lblSaveMessage">
        <value>Details have been saved successfully.</value>
    </data>
    <data name="strScreendetails">
        <value>
        </value>
    </data>
    <data name="drpdownmandatoryone">
        <value>Yes</value>
    </data>
    <data name="drpdownmandatorytwo">
        <value>No</value>
    </data>
    <data name="lblIsMandatoryText">
        <value>Mandatory</value>
    </data>
    <data name="chkquestiondesc">
        <value>Question description can not be more than 500 characters</value>
    </data>
    <data name="chkquestionnotes">
        <value>Question notes can not be more than 500 characters</value>
    </data>
    <data name="strsufixex">
        <value>e.g. (%)</value>
    </data>
    <data name="strprefixex">
        <value>e.g. ($)</value>
    </data>
    <data name="lStrDeActivate">
        <value>Deactivate</value>
    </data>
    <data name="lStrActivate">
        <value>Activate</value>
    </data>
    <data name="btnGridText">
        <value>Post Grid Question</value>
    </data>
    <data name="btnSaveText">
        <value>Save</value>
    </data>
    <data name="ScrActiveMsg">
        <value>Question has been successfully activated</value>
    </data>
    <data name="ScrDeactiveMsg">
        <value>Question has been successfully de-activated</value>
    </data>
    <data name="strHeight">
        <value>Height</value>
    </data>
       <data name="strWidth">
        <value>Width</value>
    </data>
     <data name="strColSpan">
        <value>Control Span</value>
    </data>
      <data name="strMaxChars">
        <value>Maximum Characters</value>
    </data>
    <data name="strValidationType">
        <value>Validation Type</value>
    </data>
    <data name="cvHeight">
        <value>Height should be a numeric value</value>
    </data>
    <data name="cvWidth">
        <value>Width should be a numeric value</value>
    </data>
    <data name="cvMaxChars">
        <value>Maximum Characters should be a numeric value</value>
    </data>
    <data name="cvRepCols">
        <value>Control Span should be a numeric value</value>
    </data>
    <data name="rfvRepeatCol">
        <value>Please enter Control Span</value>
    </data>
    <data name="rvRepeatColumns">
        <value>Constrol Span should be between 1 and </value>
    </data>
</root>