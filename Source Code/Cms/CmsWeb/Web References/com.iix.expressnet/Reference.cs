//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
// 
#pragma warning disable 1591

namespace Cms.CmsWeb.com.iix.expressnet {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AuthSoapBinding", Namespace="http://com/iix/soap/SoapAuth.wsdl")]
    public partial class auth : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback sendRequest2OperationCompleted;
        
        private System.Threading.SendOrPostCallback sendRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback getResponseOperationCompleted;
        
        private System.Threading.SendOrPostCallback getResponse2OperationCompleted;
        
        private System.Threading.SendOrPostCallback getXmlResponseOperationCompleted;
        
        private System.Threading.SendOrPostCallback getXmlResponse2OperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public auth() {
            this.Url = global::Cms.CmsWeb.Properties.Settings.Default.CmsWeb_com_iix_expressnet_auth;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event sendRequest2CompletedEventHandler sendRequest2Completed;
        
        /// <remarks/>
        public event sendRequestCompletedEventHandler sendRequestCompleted;
        
        /// <remarks/>
        public event getResponseCompletedEventHandler getResponseCompleted;
        
        /// <remarks/>
        public event getResponse2CompletedEventHandler getResponse2Completed;
        
        /// <remarks/>
        public event getXmlResponseCompletedEventHandler getXmlResponseCompleted;
        
        /// <remarks/>
        public event getXmlResponse2CompletedEventHandler getXmlResponse2Completed;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="auth", ResponseNamespace="http://com/iix/soap/SoapAuth.wsdl")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string sendRequest2(string msgString) {
            object[] results = this.Invoke("sendRequest2", new object[] {
                        msgString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sendRequest2Async(string msgString) {
            this.sendRequest2Async(msgString, null);
        }
        
        /// <remarks/>
        public void sendRequest2Async(string msgString, object userState) {
            if ((this.sendRequest2OperationCompleted == null)) {
                this.sendRequest2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendRequest2OperationCompleted);
            }
            this.InvokeAsync("sendRequest2", new object[] {
                        msgString}, this.sendRequest2OperationCompleted, userState);
        }
        
        private void OnsendRequest2OperationCompleted(object arg) {
            if ((this.sendRequest2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendRequest2Completed(this, new sendRequest2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="auth", ResponseNamespace="http://com/iix/soap/SoapAuth.wsdl")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string sendRequest(string msgString) {
            object[] results = this.Invoke("sendRequest", new object[] {
                        msgString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sendRequestAsync(string msgString) {
            this.sendRequestAsync(msgString, null);
        }
        
        /// <remarks/>
        public void sendRequestAsync(string msgString, object userState) {
            if ((this.sendRequestOperationCompleted == null)) {
                this.sendRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendRequestOperationCompleted);
            }
            this.InvokeAsync("sendRequest", new object[] {
                        msgString}, this.sendRequestOperationCompleted, userState);
        }
        
        private void OnsendRequestOperationCompleted(object arg) {
            if ((this.sendRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendRequestCompleted(this, new sendRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="auth", ResponseNamespace="http://com/iix/soap/SoapAuth.wsdl")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string getResponse(string msgString) {
            object[] results = this.Invoke("getResponse", new object[] {
                        msgString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getResponseAsync(string msgString) {
            this.getResponseAsync(msgString, null);
        }
        
        /// <remarks/>
        public void getResponseAsync(string msgString, object userState) {
            if ((this.getResponseOperationCompleted == null)) {
                this.getResponseOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetResponseOperationCompleted);
            }
            this.InvokeAsync("getResponse", new object[] {
                        msgString}, this.getResponseOperationCompleted, userState);
        }
        
        private void OngetResponseOperationCompleted(object arg) {
            if ((this.getResponseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getResponseCompleted(this, new getResponseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="auth", ResponseNamespace="http://com/iix/soap/SoapAuth.wsdl")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string getResponse2(string msgString) {
            object[] results = this.Invoke("getResponse2", new object[] {
                        msgString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getResponse2Async(string msgString) {
            this.getResponse2Async(msgString, null);
        }
        
        /// <remarks/>
        public void getResponse2Async(string msgString, object userState) {
            if ((this.getResponse2OperationCompleted == null)) {
                this.getResponse2OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetResponse2OperationCompleted);
            }
            this.InvokeAsync("getResponse2", new object[] {
                        msgString}, this.getResponse2OperationCompleted, userState);
        }
        
        private void OngetResponse2OperationCompleted(object arg) {
            if ((this.getResponse2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getResponse2Completed(this, new getResponse2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="auth", ResponseNamespace="http://com/iix/soap/SoapAuth.wsdl")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string getXmlResponse(string msgString) {
            object[] results = this.Invoke("getXmlResponse", new object[] {
                        msgString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getXmlResponseAsync(string msgString) {
            this.getXmlResponseAsync(msgString, null);
        }
        
        /// <remarks/>
        public void getXmlResponseAsync(string msgString, object userState) {
            if ((this.getXmlResponseOperationCompleted == null)) {
                this.getXmlResponseOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetXmlResponseOperationCompleted);
            }
            this.InvokeAsync("getXmlResponse", new object[] {
                        msgString}, this.getXmlResponseOperationCompleted, userState);
        }
        
        private void OngetXmlResponseOperationCompleted(object arg) {
            if ((this.getXmlResponseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getXmlResponseCompleted(this, new getXmlResponseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="auth", ResponseNamespace="http://com/iix/soap/SoapAuth.wsdl")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string getXmlResponse2(string msgString) {
            object[] results = this.Invoke("getXmlResponse2", new object[] {
                        msgString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getXmlResponse2Async(string msgString) {
            this.getXmlResponse2Async(msgString, null);
        }
        
        /// <remarks/>
        public void getXmlResponse2Async(string msgString, object userState) {
            if ((this.getXmlResponse2OperationCompleted == null)) {
                this.getXmlResponse2OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetXmlResponse2OperationCompleted);
            }
            this.InvokeAsync("getXmlResponse2", new object[] {
                        msgString}, this.getXmlResponse2OperationCompleted, userState);
        }
        
        private void OngetXmlResponse2OperationCompleted(object arg) {
            if ((this.getXmlResponse2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getXmlResponse2Completed(this, new getXmlResponse2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void sendRequest2CompletedEventHandler(object sender, sendRequest2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendRequest2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendRequest2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void sendRequestCompletedEventHandler(object sender, sendRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getResponseCompletedEventHandler(object sender, getResponseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getResponseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getResponseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getResponse2CompletedEventHandler(object sender, getResponse2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getResponse2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getResponse2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getXmlResponseCompletedEventHandler(object sender, getXmlResponseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getXmlResponseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getXmlResponseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getXmlResponse2CompletedEventHandler(object sender, getXmlResponse2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getXmlResponse2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getXmlResponse2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591