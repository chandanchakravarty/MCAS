<?xml version="1.0" encoding="utf-8" ?>
<root>
	<!-- 
    Microsoft ResX Schema 
    
    Version 1.3
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">1.3</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1">this is my long string</data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        [base64 mime encoded serialized .NET Framework object]
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        [base64 mime encoded string representing a byte array form of the .NET Framework object]
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used forserialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>1.3</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<data name="$this.TrayLargeIcon" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
		<value>False</value>
	</data>
	<data name="$this.DefaultModifiers" type="System.CodeDom.MemberAttributes, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
		<value>Private</value>
	</data>
	<data name="$this.TrayAutoArrange" type="System.Boolean, mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
		<value>True</value>
	</data>
	<data name="txtSYS_BAD_LOGON_ATTMPT">
		<value>Bad Login Attempt</value>
	</data>
	<data name="txtINSURANCE_SCORE_VALIDITY">
		<value>Insurance Score Validity Months</value>
	</data>
	<data name="txtSYS_INSURANCE_SCORE_VALIDITY">
		<value>Insurance Score Validity Months</value>
	</data>
	<data name="txtSYS_RENEWAL_FOR_ALERT">
		<value>Alert for Renewal</value>
	</data>
	<data name="txtSYS_PENDING_QUOTE_FOR_ALERT">
		<value>Alert for Pending Quote</value>
	</data>
	<data name="txtSYS_QUOTED_QUOTE_FOR_ALERT">
		<value>Alert for Quoted Quote</value>
	</data>
	<data name="txtSYS_NUM_DAYS_EXPIRE">
		<value>Number of Days to Expire</value>
	</data>
	<data name="txtSYS_NUM_DAYS_PEN_TO_NTU">
		<value>Number of Days Pending to NTU</value>
	</data>
	<data name="txtSYS_NUM_DAYS_EXPIRE_QUOTE">
		<value>Number of Days to Expire a Quote</value>
	</data>
	<data name="cmbSYS_DEFAULT_POL_TERM">
		<value>Default Application / Policy Term</value>
	</data>
	<data name="cmbSYS_INDICATE_POL">
		<value>Indicate policies that do not renew as</value>
	</data>
	<data name="cmbSYS_STATEMENT_NAME_LOGO">
		<value>Will Statement with Graphical Name Logo and Address be used</value>
	</data>
	<data name="cmbSYS_GRAPH_LOGO_ALLOW">
		<value>Will Statement with Graphical Name Logo and Address be used</value>
	</data>
	<data name="cmbSYS_PRINT_FOLLOWING">
		<value>Print the following</value>
	</data>
	<data name="cmbSYS_INDICATE_POL_AS">
		<value>Indicate policies that do not renew as</value>
	</data>
	<data name="txtSYS_CLAIME_NUMBER">
		<value>Claims Number</value>
	</data>
	<data name="txtSYS_CLAIM_NO">
		<value>Claims Number</value>
	</data>
	<data name="txtSYS_INSTALLMENT_FEES">
		<value>Installment Fees</value>
	</data>
	<data name="txtSYS_NON_SUFFICIENT_FUND_FEES">
		<value>Non Sufficient Fund Fees</value>
	</data>
	<data name="txtSYS_REINSTATEMENT_FEES">
		<value>Reinstatement Fees</value>
	</data>
	<data name="txtSYS_EMPLOYEE_DISCOUNT">
		<value>Employee Discount</value>
	</data>
	<data name="txtMinInstallPlan">
		<value>Minimum Amount for Installment Plan</value>
	</data>
	<data name="txtSYS_Min_Install_Plan">
		<value>Minimum Amount for Installment Plan</value>
	</data>
	<data name="txtAmtUnderPayment">
		<value>Amount of underpayment allowed on installment</value>
	</data>
	<data name="txtSYS_AmtUnder_Payment">
		<value>Amount of underpayment allowed on installment</value>
	</data>
	<data name="txtMinDays_Premium">
		<value>Minimum number of days from date premium notice is processed until the due date</value>
	</data>
	<data name="txtSYS_MinDays_Premium">
		<value>Minimum number of days from date premium notice is processed until the due date</value>
	</data>
	<data name="txtMinDays_Cancel">
		<value>Number of days after premium notice due date the past due / cancellation notice is processed</value>
	</data>
	<data name="txtSYS_MinDays_Cancel">
		<value>Number of days after premium notice due date the past due / cancellation notice is processed</value>
	</data>
	<data name="txtPostPhone">
		<value>Number of days to postphone printing past due / cancellation notice when agent has money in office</value>
	</data>
	<data name="txtSYS_Post_Phone">
		<value>Number of days to postphone printing past due / cancellation notice when agent has money in office</value>
	</data>
	<data name="txtPostCancel">
		<value>Number of days to postphone cancellation process when agent has money in office and past due / cancellation notice has already been printed</value>
	</data>
	<data name="txtSYS_Post_Cancel">
		<value>Number of days to postphone cancellation process when agent has money in office and past due / cancellation notice has already been printed</value>
	</data>
	<data name="txtPOSTAGE_FEE">
		<value>Postage Fee</value>
	</data>
	<data name="txtRESTR_DELIV_FEE">
		<value>Restricted Delivery Fee</value>
	</data>
	<data name="txtCERTIFIED_FEE">
		<value>Certified Fee</value>
	</data>
	<data name="txtRET_RECEIPT_FEE">
		<value>Return Receipt Fee</value>
	</data>
	<data name="cmbNOTIFY_RECVE_INSURED">
		<value>Mode of notifying receivables info to Insured</value>
	</data>
	<data name="capGeneralSetup">
		<value>General Setup</value>
	</data>
	<data name="capSystemParameters">
		<value>System Parameters</value>
	</data>
	<data name="capPolicyActions">
		<value>Policy Actions</value>
	</data>
	<data name="capStatementParameters">
		<value>Statement Parameters</value>
	</data>
	<data name="capClaimsParameters">
		<value>Claims Parameters</value>
	</data>
	<data name="capCertifiedMailParameters">
		<value>Certified Mail Parameters</value>
	</data>
	<data name="capPrintParam">
		<value>Printing Parameters</value>
	</data>
  <data name="cmbBASE_CURRENCY">
    <value>Base Currency</value>
  </data>
  <data name="txtDAYS_FOR_BOLETO_EXPIRATION">
    <value># Days for Boleto Expiration</value>
  </data>
</root>